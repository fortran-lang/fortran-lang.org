<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title type="text" xml:lang="en">Fortran Newsletter</title>
    <link type="application/atom+xml" href="https://fortran-lang.org/news.xml" rel="self"/>
    <link type="text" href="https://fortran-lang.org/news" rel="alternate"/>
    <updated>2022-08-19T08:46:23+00:00</updated>
    <id>/news</id>
    <author>
        <name></name>
    </author>

    
    <entry>
        <title>Fortran newsletter: June 2022</title>
        <link href="https://fortran-lang.org/newsletter/2022/06/09/Fortran-Newsletter-June-2022/"/>
        <updated>2022-06-09T00:00:00+00:00</updated>
        <id>/news/newsletter/2022/06/09/Fortran-Newsletter-June-2022</id>
        <content type="html">&lt;p&gt;Welcome to the June edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in the fortran-lang.org repo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/401&quot;&gt;#401&lt;/a&gt;:
Newsletter May 2022&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/403&quot;&gt;#403&lt;/a&gt;:
Add SeisSol to package index&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/397&quot;&gt;#397&lt;/a&gt; (WIP):
Add NUFFT to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/396&quot;&gt;#396&lt;/a&gt; (WIP):
Add OpenFFT to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/395&quot;&gt;#395&lt;/a&gt; (WIP):
Add 2DECOMP&amp;amp;FFT to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/394&quot;&gt;#394&lt;/a&gt; (WIP):
Add SLICOT to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/393&quot;&gt;#393&lt;/a&gt; (WIP):
Add FATODE to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/347&quot;&gt;#347&lt;/a&gt; (WIP):
Fortran Intrinsics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt;
if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt;
for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/656&quot;&gt;#656&lt;/a&gt;:
Add hint for building error with make&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/655&quot;&gt;#655&lt;/a&gt;:
fixed 32-bit integer overflow in stdlib_io_npy&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/657&quot;&gt;#657&lt;/a&gt;:
Remove support for manual make builds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/660&quot;&gt;#660&lt;/a&gt; (WIP):
Fix erroneous gaussian quadrature points in gauss_legendre&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/659&quot;&gt;#659&lt;/a&gt; (WIP):
Readme update&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/652&quot;&gt;#652&lt;/a&gt; (WIP):
Feature: loadtxt skiprows and max_rows&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/625&quot;&gt;#625&lt;/a&gt; (WIP):
Gamma special function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/611&quot;&gt;#611&lt;/a&gt; (WIP):
Hash maps&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/604&quot;&gt;#604&lt;/a&gt; (WIP):
Add get_argument, get_variable and set_variable&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/580&quot;&gt;#580&lt;/a&gt; (WIP):
Add terminal and color escape sequences&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/552&quot;&gt;#552&lt;/a&gt; (WIP):
fixed bug in stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/536&quot;&gt;#536&lt;/a&gt; (WIP):
Fix conversion warnings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/520&quot;&gt;#520&lt;/a&gt; (WIP):
[stdlib_io] add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display variable values formatted).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/517&quot;&gt;#517&lt;/a&gt; (WIP):
adding SPEC_TEMPLATE.md #504&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/514&quot;&gt;#514&lt;/a&gt; (WIP):
pop, drop &amp;amp; get with basic range feature for stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/692&quot;&gt;#692&lt;/a&gt;:
Fix for non-portable GFortran &lt;code class=&quot;highlighter-rouge&quot;&gt;-J&lt;/code&gt; flag in install script&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/693&quot;&gt;#693&lt;/a&gt;:
Fix show-model option&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/701&quot;&gt;#701&lt;/a&gt; (WIP):
Some cleanups and minor fixes&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/686&quot;&gt;#686&lt;/a&gt; (WIP):
fix: remove extra space from help-test cmd&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/685&quot;&gt;#685&lt;/a&gt; (WIP):
fix: function for getting executable path&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/653&quot;&gt;#653&lt;/a&gt; (WIP):
Enable profiles in toml&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/608&quot;&gt;#608&lt;/a&gt; (WIP):
–env switch lets you specify the prefix of the compiler-related environment variables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://fpm.fortran-lang.org/en/tutorial&quot;&gt;fpm packaging guide&lt;/a&gt;
to learn how to build your package with fpm, and the &lt;a href=&quot;https://fpm.fortran-lang.org/en/spec/manifest.html&quot;&gt;manifest reference&lt;/a&gt;
to learn what are all the things that you can specify in the fpm.toml file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;FIR
    &lt;ul&gt;
      &lt;li&gt;Initial lowering of the Fortran Do loop&lt;/li&gt;
      &lt;li&gt;Lower Unstructured do loops&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Driver
    &lt;ul&gt;
      &lt;li&gt;Define the default frontend driver triple&lt;/li&gt;
      &lt;li&gt;Add support for consuming LLVM IR/BC files&lt;/li&gt;
      &lt;li&gt;Add support for -save-temps&lt;/li&gt;
      &lt;li&gt;Switch to the MLIR coding style in the driver&lt;/li&gt;
      &lt;li&gt;Fix driver method names overridden by the plugins&lt;/li&gt;
      &lt;li&gt;Support parsing response files&lt;/li&gt;
      &lt;li&gt;Make driver accept -module-dir&lt;value&gt;&lt;/value&gt;&lt;/li&gt;
      &lt;li&gt;Add support for generating executables on MacOSX/Darwin&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;Add lowering stubs for OpenMP/OpenACC declarative constructs&lt;/li&gt;
      &lt;li&gt;Added tests for taskwait and taskyield translation&lt;/li&gt;
      &lt;li&gt;Restrict types for omp.parallel args&lt;/li&gt;
      &lt;li&gt;Add omp.cancel and omp.cancellationpoint.&lt;/li&gt;
      &lt;li&gt;Initial lowering of the OpenMP worksharing loop&lt;/li&gt;
      &lt;li&gt;Lowering for task construct&lt;/li&gt;
      &lt;li&gt;Support lowering to MLIR for ordered clause&lt;/li&gt;
      &lt;li&gt;Support for Collapse&lt;/li&gt;
      &lt;li&gt;Upstream the lowering of the parallel do combined construct&lt;/li&gt;
      &lt;li&gt;Fix the types of worksharing-loop variables&lt;/li&gt;
      &lt;li&gt;Change the OpenMP atomic read/write test cases&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Runtime
    &lt;ul&gt;
      &lt;li&gt;Correct emission &amp;amp; reading of unterminated final records&lt;/li&gt;
      &lt;li&gt;Support B/O/Z editing of CHARACTER&lt;/li&gt;
      &lt;li&gt;Use 1-based dim in transformational runtime error msg&lt;/li&gt;
      &lt;li&gt;Change “unsupported” messages in the runtime to “not yet implemented”&lt;/li&gt;
      &lt;li&gt;Fix input of NAN(…) on non-fast path&lt;/li&gt;
      &lt;li&gt;Don’t pad CHARACTER input at end of record unless PAD=’YES’&lt;/li&gt;
      &lt;li&gt;Enforce restrictions on unlimited format repetition&lt;/li&gt;
      &lt;li&gt;(G0) for CHARACTER means (A), not (A0)&lt;/li&gt;
      &lt;li&gt;BACKSPACE after non-advancing I/O&lt;/li&gt;
      &lt;li&gt;Use proper prototypes in Fortran_main. NFCI&lt;/li&gt;
      &lt;li&gt;Clean up asynchronous I/O APIs&lt;/li&gt;
      &lt;li&gt;INQUIRE(UNIT=666,NUMBER=n) must set n=666&lt;/li&gt;
      &lt;li&gt;Handle BACKSPACE after reading past EOF&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Fix MAXLOC/MINLOC when MASK is scalar .FALSE.&lt;/li&gt;
  &lt;li&gt;Fix UBOUND() constant folding for parentheses expr&lt;/li&gt;
  &lt;li&gt;Support FINDLOC/MAXLOC/MINLOC with scalar mask&lt;/li&gt;
  &lt;li&gt;Handle common block with different sizes in same file&lt;/li&gt;
  &lt;li&gt;Add one semantic check for implicit interface&lt;/li&gt;
  &lt;li&gt;Fix semantics check for RETURN statement&lt;/li&gt;
  &lt;li&gt;Fix ICE for passing a label for non alternate return arguments&lt;/li&gt;
  &lt;li&gt;Add ExternalNameConversionPass to pass pipeline&lt;/li&gt;
  &lt;li&gt;Fix AllocaOp/AllocMemOp type conversion&lt;/li&gt;
  &lt;li&gt;Support external procedure passed as actual argument with implicit character type&lt;/li&gt;
  &lt;li&gt;Fix internal error with DATA-statement style initializers&lt;/li&gt;
  &lt;li&gt;Upstream support for POINTER assignment in FORALL&lt;/li&gt;
  &lt;li&gt;Enforce a program not including more than one main program&lt;/li&gt;
  &lt;li&gt;Retain binding label of entry subprograms&lt;/li&gt;
  &lt;li&gt;Fold intrinsic inquiry functions SAME_TYPE_AS() and EXTENDS_TYPE_OF()&lt;/li&gt;
  &lt;li&gt;Fold intrinsic functions SPACING() and RRSPACING()&lt;/li&gt;
  &lt;li&gt;Operands of SIGN() need not have same kind&lt;/li&gt;
  &lt;li&gt;Correct folding of SPREAD() for higher ranks&lt;/li&gt;
  &lt;li&gt;Refine handling of short character actual arguments&lt;/li&gt;
  &lt;li&gt;Ensure that structure constructors fold parameter references&lt;/li&gt;
  &lt;li&gt;Correct actual/dummy procedure compatibility for ALLOCATABLE/POINTER functions&lt;/li&gt;
  &lt;li&gt;Allow PDTs with LEN parameters in REDUCE()&lt;/li&gt;
  &lt;li&gt;Allow NULL() actual argument for optional dummy procedure&lt;/li&gt;
  &lt;li&gt;Allow implicit declaration of DATA objects in inner procedures&lt;/li&gt;
  &lt;li&gt;Refine error checking in specification expressions&lt;/li&gt;
  &lt;li&gt;Reverse a reversed type compatibility check&lt;/li&gt;
  &lt;li&gt;Accept POINTER followed by INTERFACE&lt;/li&gt;
  &lt;li&gt;Allow ENTRY function result symbol usage before the ENTRY&lt;/li&gt;
  &lt;li&gt;Fold real-valued DIM(), MODULO() and MOD()&lt;/li&gt;
  &lt;li&gt;Enforce limit on rank + corank&lt;/li&gt;
  &lt;li&gt;Allow local variables and function result inquiries in specification expressions&lt;/li&gt;
  &lt;li&gt;Change “bad kind” messages in the runtime to “not yet implemented”&lt;/li&gt;
  &lt;li&gt;Fold complex component references&lt;/li&gt;
  &lt;li&gt;Fix check for assumed-size arguments to SHAPE() &amp;amp; al.&lt;/li&gt;
  &lt;li&gt;Fix a performance problem with lowering of forall loops and creating too many temporaries&lt;/li&gt;
  &lt;li&gt;Warn for the limit on name length&lt;/li&gt;
  &lt;li&gt;Install Fortran_main library&lt;/li&gt;
  &lt;li&gt;test conforming &amp;amp; non-conforming lcobound&lt;/li&gt;
  &lt;li&gt;Fix use-associated false-positive error&lt;/li&gt;
  &lt;li&gt;Fix character length calculation for Unicode component&lt;/li&gt;
  &lt;li&gt;Allow global scope names that clash with intrinsic modules&lt;/li&gt;
  &lt;li&gt;Ignore BIND(C) binding name conflicts of inner procedures&lt;/li&gt;
  &lt;li&gt;Allow more forward references to ENTRY names&lt;/li&gt;
  &lt;li&gt;Extension: Accept Hollerith actual arguments as if they were BOZ&lt;/li&gt;
  &lt;li&gt;Alternate entry points with unused arguments&lt;/li&gt;
  &lt;li&gt;Fix crash in semantics after PDT instantiation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Gagandeep Singh (106):
    &lt;ul&gt;
      &lt;li&gt;Factored out visit_Declaration to visit_DeclarationUtil in CommonVisitor&lt;/li&gt;
      &lt;li&gt;Added test for kwargs in class procedure&lt;/li&gt;
      &lt;li&gt;Added support for kwargs in class procedures&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Added support for i32 and i64 in repeat&lt;/li&gt;
      &lt;li&gt;Added mergechar in merge interface&lt;/li&gt;
      &lt;li&gt;Added is_iostat_eor&lt;/li&gt;
      &lt;li&gt;Removed compulsory evaluation of ishft&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Use intrinsic type checking in assignment only when operator overloading fails&lt;/li&gt;
      &lt;li&gt;Perform casting in Compare only when overloaded is not available&lt;/li&gt;
      &lt;li&gt;Set dest_type and source_type even though casting doesn’t happen&lt;/li&gt;
      &lt;li&gt;Use kind_value to generate type in ArraySize&lt;/li&gt;
      &lt;li&gt;Added test for verifying SemanticError in case of non-constant kind input&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Add AssociateBlock and Block in serialization.cpp&lt;/li&gt;
      &lt;li&gt;Include associate_06 in the integration_tests/CMakeLists.txt&lt;/li&gt;
      &lt;li&gt;Take into account output kind in LLVM’s ArraySize visitor&lt;/li&gt;
      &lt;li&gt;Added test for different output kinds in ArraySize&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Import procedures for overloaded operators as well&lt;/li&gt;
      &lt;li&gt;Fixed tests for compiling correctly with gfortran&lt;/li&gt;
      &lt;li&gt;Mangle name before importing procedures under generic procs&lt;/li&gt;
      &lt;li&gt;Merged master into sprint_6&lt;/li&gt;
      &lt;li&gt;Avoid manual imports while using overloaded symbols&lt;/li&gt;
      &lt;li&gt;Remove symbol from to_be_imported_later&lt;/li&gt;
      &lt;li&gt;Added support for keyword arguments in generic procedures and fix total arguments&lt;/li&gt;
      &lt;li&gt;Added test for generic procedures with keyword arguments&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Added intrinsics: congjz, dotproduct and updated: merge&lt;/li&gt;
      &lt;li&gt;Added matmul, transpose as ASR nodes&lt;/li&gt;
      &lt;li&gt;Added tests for matmul and transpose&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Added merge, dotproduct procedures for complex type&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Add support for source kwarg in allocate&lt;/li&gt;
      &lt;li&gt;Updated test for verifying source argument&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Registered shiftr, shiftl, adjustr, lgt, llt, lge, lle, count in comptime_eval.h&lt;/li&gt;
      &lt;li&gt;Added shiftl, shiftr and count&lt;/li&gt;
      &lt;li&gt;Added more implementations for abs, mod&lt;/li&gt;
      &lt;li&gt;Added adjustr, lgt, llt, lle, lge for string type&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Registered ieee_is_nan in comptime_eval.h&lt;/li&gt;
      &lt;li&gt;Added support for pack intrinsic&lt;/li&gt;
      &lt;li&gt;Added support for transfer intrinsic&lt;/li&gt;
      &lt;li&gt;Use modern Fortran syntax for array constants&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;ArrayTransfer -&amp;gt; Transfer rename&lt;/li&gt;
      &lt;li&gt;Added generation code for expression replacer&lt;/li&gt;
      &lt;li&gt;Added ReplaceArgVisitor and generalised handle_return_type&lt;/li&gt;
      &lt;li&gt;Added tests for verifying arg replacer in return types&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Added cmplx via ComplexConstructor node&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Import via use inside Function&lt;/li&gt;
      &lt;li&gt;Added support for matching Derived/ClassType&lt;/li&gt;
      &lt;li&gt;Added support for falling back to intrinsic&lt;/li&gt;
      &lt;li&gt;Added to test verify importing procedures inside function&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Added support for passing kind parameter to floor intrinsic&lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;Use CPtr for variables declared with type(c_ptr) 2. Set Module_t.m_intrinsic in set_intrinsic 3. Add CPtr in extract_dimensions_from_ttype&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Added LLVM support for CLoc, CPtr&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Added integration test for c_f_pointer&lt;/li&gt;
      &lt;li&gt;Added support for c_f_pointer&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Added error checking for presence of shape argument in c_f_pointer call&lt;/li&gt;
      &lt;li&gt;Fixed ArrayConstant type and raise error is shape is not rank 1&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Implemented c_f_pointer for non-array variables&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Added test with pointer array variables&lt;/li&gt;
      &lt;li&gt;Shifted type generation to a function in LLVM backend&lt;/li&gt;
      &lt;li&gt;Corrected llvm::Type* for array pointer variables&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;Fixed ArrayBound for array pointers 2. Shifted argument type generation to a function and use recursion for Pointer&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Added support for printing Pointer type&lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;Added AssociateBlock symbol in PassVisitor 2. Fixed get_bound to return ArrayBound instead of a function call&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Use element type in ArrayRef instead of pointer&lt;/li&gt;
      &lt;li&gt;Syntax improvement&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;Removed warnings&lt;/li&gt;
      &lt;li&gt;Adjust ArrayBound for ArrayConstant&lt;/li&gt;
      &lt;li&gt;Corrected arrays_13 by making iv, rv as target&lt;/li&gt;
      &lt;li&gt;Stronger verification checks for CFPointer creation&lt;/li&gt;
      &lt;li&gt;Support for array inputs in CFPointer&lt;/li&gt;
      &lt;li&gt;Improved bindc2 for array inputs in c_f_pointer&lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;Fixed ArraySize for array pointer variables in LLVM backend. 2. Improved CFPointer in LLVM backend to not interfere with already stored array in array pointer variables 3. Improved bindc2.f90 and made it robust to cover more cases. 4. Updated reference tests&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Fixed unused variable warnings in llvm_utils.cpp&lt;/li&gt;
      &lt;li&gt;Use abstract methods in CFPointer for accessing array descriptor data&lt;/li&gt;
      &lt;li&gt;Added test for ArrayRef in c_loc&lt;/li&gt;
      &lt;li&gt;Minor update in bindc2 and bindc3&lt;/li&gt;
      &lt;li&gt;Fixed Complex case in duplicate type and intialise type at declaration&lt;/li&gt;
      &lt;li&gt;Added support ArrayRef in CLoc in LLVM backend&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;Added support for CPtr in arguments and fixed llvm::Type for intent(out) for CPtr 2. Added support for constant arrays as shape in c_f_pointer&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Updated bindc4 for verifying constant arrays in c_f_pointer&lt;/li&gt;
      &lt;li&gt;Updated reference tests&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Naman Gera (1):
    &lt;ul&gt;
      &lt;li&gt;Update the C runtime library&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ondřej Čertík (136):
    &lt;ul&gt;
      &lt;li&gt;AST-&amp;gt;ASR: Remove current_body&lt;/li&gt;
      &lt;li&gt;Fix a bug in a test&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;bind(c): Add tests for i64, f32, f64&lt;/li&gt;
      &lt;li&gt;Update modules_18b.f90 to compile&lt;/li&gt;
      &lt;li&gt;Add tests for the other types&lt;/li&gt;
      &lt;li&gt;Comment out a non-working case&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;bind(c): Fix call_fortran_i64&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;bind(c): Add a test for i32 by value&lt;/li&gt;
      &lt;li&gt;LLVM: implement value arguments in bind(c) procs&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;Make modules_18b.f90 compile&lt;/li&gt;
      &lt;li&gt;bind(c): test i64, f32, f64 by value&lt;/li&gt;
      &lt;li&gt;Update modules_18b to compile&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;ASR: Bring updates from LPython&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;ASR: Updates from LPython&lt;/li&gt;
      &lt;li&gt;Update the rest of the code to compile&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;C++ backend: implement ComplexConstructor&lt;/li&gt;
      &lt;li&gt;Add the simplest test for submodules&lt;/li&gt;
      &lt;li&gt;Add Logical to nested_vars&lt;/li&gt;
      &lt;li&gt;Workaround a cmake bug&lt;/li&gt;
      &lt;li&gt;Add a test for bind(c) with pointers&lt;/li&gt;
      &lt;li&gt;Rework the AST-&amp;gt;ASR handling of floor()&lt;/li&gt;
      &lt;li&gt;Implement is_intrinsic_symbol()&lt;/li&gt;
      &lt;li&gt;Refactor floor() into lfortran_intrinsic_math3&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;Add a test case for imported derived type&lt;/li&gt;
      &lt;li&gt;Add value to all expr nodes except Constant&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;Implement expr_type() using ExprTypeVisitor&lt;/li&gt;
      &lt;li&gt;Implement expr_value() using ExprValueVisitor&lt;/li&gt;
      &lt;li&gt;iso_c_binding: add the c_loc() function&lt;/li&gt;
      &lt;li&gt;Allow derived types as return values&lt;/li&gt;
      &lt;li&gt;ASR: Represent c_loc()&lt;/li&gt;
      &lt;li&gt;Add ASR test for c_loc()&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;ASR: Add string conversion for derived type&lt;/li&gt;
      &lt;li&gt;Add a CPtr() type&lt;/li&gt;
      &lt;li&gt;Make c_loc() return CPtr&lt;/li&gt;
      &lt;li&gt;LLVM: handle CPtr in convert_args()&lt;/li&gt;
      &lt;li&gt;LLVM: Comment out visit_CFPointer (WIP)&lt;/li&gt;
      &lt;li&gt;CI: pin mkdocs-material and mkdocs versions&lt;/li&gt;
      &lt;li&gt;Fix spelling&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;Shorten the help for –show-wat to fit 80 columns&lt;/li&gt;
      &lt;li&gt;Git ignore wasm_visitor.h&lt;/li&gt;
      &lt;li&gt;Move emit_wat out of LLVM ifdef&lt;/li&gt;
      &lt;li&gt;Generate wasm_visitor.h in ci/build.xsh&lt;/li&gt;
      &lt;li&gt;Enable WAT tests in run_tests.py&lt;/li&gt;
      &lt;li&gt;Add a test for WASM&lt;/li&gt;
      &lt;li&gt;Update reference tests&lt;/li&gt;
      &lt;li&gt;Implement FortranEvaluator::get_wasm()&lt;/li&gt;
      &lt;li&gt;Use asr_to_wasm_bytes_stream() in asr_to_wasm&lt;/li&gt;
      &lt;li&gt;WASM: Add 64 bit BinOp operations&lt;/li&gt;
      &lt;li&gt;WASM: handle i64 arguments&lt;/li&gt;
      &lt;li&gt;WASM: Add a test for i64&lt;/li&gt;
      &lt;li&gt;Move the wasm_instructions_visitor.py to libasr&lt;/li&gt;
      &lt;li&gt;Update ASR from LPython&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;Bring more ASR improvements from LPython&lt;/li&gt;
      &lt;li&gt;Bring in name mangling&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;Add a test for passing through pointers via C&lt;/li&gt;
      &lt;li&gt;LLVM: implement debug ASR printing&lt;/li&gt;
      &lt;li&gt;LLVM: Use &lt;code class=&quot;highlighter-rouge&quot;&gt;deftype&lt;/code&gt; to implement interfaces&lt;/li&gt;
      &lt;li&gt;LLVM: Pass type(c_ptr) by value properly&lt;/li&gt;
      &lt;li&gt;Pass “n” by reference for now&lt;/li&gt;
      &lt;li&gt;Pass arguments by value for bind(c)&lt;/li&gt;
      &lt;li&gt;Only do the load if it is a pointer&lt;/li&gt;
      &lt;li&gt;LLVM: Use an ASR condition instead of LLVM one&lt;/li&gt;
      &lt;li&gt;lfortran_intrinsic_string: depend iso_fortran_env&lt;/li&gt;
      &lt;li&gt;Enable bindc_01 LLVM test&lt;/li&gt;
      &lt;li&gt;Add a test for pointer argument&lt;/li&gt;
      &lt;li&gt;Add suffixes 1/2&lt;/li&gt;
      &lt;li&gt;Add a callback2b test&lt;/li&gt;
      &lt;li&gt;Add a test for callback1b()&lt;/li&gt;
      &lt;li&gt;Get value to reference argument working&lt;/li&gt;
      &lt;li&gt;Port ASR improvements from LPython&lt;/li&gt;
      &lt;li&gt;Update the rest of the code to compile&lt;/li&gt;
      &lt;li&gt;Update tests&lt;/li&gt;
      &lt;li&gt;ASR sync with LPython&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tapasweni Pathak (9):
    &lt;ul&gt;
      &lt;li&gt;Add markdown sample for intrinsic:math:asin&lt;/li&gt;
      &lt;li&gt;Add doxygen docstring in lfortran intrinsic runtime asin&lt;/li&gt;
      &lt;li&gt;Add comments for interface asin&lt;/li&gt;
      &lt;li&gt;Add doxygen comment for lfortran_sasin_api&lt;/li&gt;
      &lt;li&gt;Enhance presentation of information&lt;/li&gt;
      &lt;li&gt;use retval for return values variable&lt;/li&gt;
      &lt;li&gt;delete fortran doxygen comments docs&lt;/li&gt;
      &lt;li&gt;mkdocs: LFortran Intrinsics: asin&lt;/li&gt;
      &lt;li&gt;add: mkdocs: code syntax highlighting&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ubaid (24):
    &lt;ul&gt;
      &lt;li&gt;Improve ceiling() test case&lt;/li&gt;
      &lt;li&gt;Update reference tests&lt;/li&gt;
      &lt;li&gt;Specifying constants as double precision&lt;/li&gt;
      &lt;li&gt;Update error condition check as suggested&lt;/li&gt;
      &lt;li&gt;Update reference tests&lt;/li&gt;
      &lt;li&gt;Code formatting&lt;/li&gt;
      &lt;li&gt;Add and improve namespace ending comments&lt;/li&gt;
      &lt;li&gt;Add wasm_instructions list&lt;/li&gt;
      &lt;li&gt;Comment out few instructions that have temporary variables&lt;/li&gt;
      &lt;li&gt;Add wasm_instructions_visitor script&lt;/li&gt;
      &lt;li&gt;Add namespace related info and pass code as function parameter in wasm_insts_visitor script&lt;/li&gt;
      &lt;li&gt;Add command in build0.sh to generate wasm_visitor.h&lt;/li&gt;
      &lt;li&gt;Add utility struct and functions defined in wasm_utils&lt;/li&gt;
      &lt;li&gt;Add wasm_to_wat converter&lt;/li&gt;
      &lt;li&gt;Include wasm_to_wat and wasm_utils in CMakeLists.txt&lt;/li&gt;
      &lt;li&gt;Define vector.resize()&lt;/li&gt;
      &lt;li&gt;Add –show-wat flag and emit_wat() function&lt;/li&gt;
      &lt;li&gt;Declare and define get_wat() in fortran_evaluator&lt;/li&gt;
      &lt;li&gt;Declare and define asr_to_wasm_bytes_stream() which stores wasm binary to memory&lt;/li&gt;
      &lt;li&gt;Fix warning by adding U and add comment&lt;/li&gt;
      &lt;li&gt;Fix missing parameters bug&lt;/li&gt;
      &lt;li&gt;Switch off WAT_DEBUG macro&lt;/li&gt;
      &lt;li&gt;Remove debugging cout statements&lt;/li&gt;
      &lt;li&gt;Move load_file() to top&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking for new contributors. Please do not hesitate to contact us if you are interested. We will help you get up to speed.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The Fortran-lang Google Summer of Code 2022 program began on May 23.
We welcome five contributors: Arteev Raina, Ashirwad Mishra,
Henil Shalin Panchal, Mohd Ubaid Shaikh, and Oshanath Rajawasam.
They will be working on exciting projects from fpm and the Fortran
website to improving the LFortran compiler.
Read more about their projects &lt;a href=&quot;https://summerofcode.withgoogle.com/programs/2022/organizations/fortran-lang&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;We had our 26th Fortran Monthly call on May 16.
Watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/apuldZF_r2I&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Join and follow the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Fortran Discourse&lt;/a&gt;
to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fortran-lang/fpm-docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/minpack&quot;&gt;fortran-lang/minpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/test-drive&quot;&gt;fortran-lang/test-drive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/vscode-fortran-support&quot;&gt;fortran-lang/vscode-fortran-support&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;May 01 2022&quot; data-enddate=&quot;May 31 2022&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: May 2022</title>
        <link href="https://fortran-lang.org/newsletter/2022/05/05/Fortran-Newsletter-May-2022/"/>
        <updated>2022-05-05T00:00:00+00:00</updated>
        <id>/news/newsletter/2022/05/05/Fortran-Newsletter-May-2022</id>
        <content type="html">&lt;p&gt;Welcome to the May edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in the fortran-lang.org repo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/359&quot;&gt;#359&lt;/a&gt;:
Fix time calculation in the PRs script&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/387&quot;&gt;#387&lt;/a&gt;:
Newsletter for April 2022&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/389&quot;&gt;#389&lt;/a&gt;:
Add librsb to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/390&quot;&gt;#390&lt;/a&gt;:
Add Elk to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/391&quot;&gt;#391&lt;/a&gt;:
Add pencil-code to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/392&quot;&gt;#392&lt;/a&gt;:
Add PROPACK to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/398&quot;&gt;#398&lt;/a&gt;:
Add feed link to HTML head element&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/369&quot;&gt;#369&lt;/a&gt;:
Resolves Issue #217&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/400&quot;&gt;#400&lt;/a&gt;:
fix dependency of include files under &lt;code class=&quot;highlighter-rouge&quot;&gt;learn/building_programs&lt;/code&gt; mini-book&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/397&quot;&gt;#397&lt;/a&gt; (WIP):
Add NUFFT to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/396&quot;&gt;#396&lt;/a&gt; (WIP):
Add OpenFFT to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/395&quot;&gt;#395&lt;/a&gt; (WIP):
Add 2DECOMP&amp;amp;FFT to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/394&quot;&gt;#394&lt;/a&gt; (WIP):
Add SLICOT to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/393&quot;&gt;#393&lt;/a&gt; (WIP):
Add FATODE to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/347&quot;&gt;#347&lt;/a&gt; (WIP):
Fortran Intrinsics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt;
if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt;
for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/646&quot;&gt;#646&lt;/a&gt;:
Export symbols on Windows and set PIC flag for Unix&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/651&quot;&gt;#651&lt;/a&gt;:
Bugfix release version 0.2.1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/656&quot;&gt;#656&lt;/a&gt; (WIP):
Add hint for building error with make&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/655&quot;&gt;#655&lt;/a&gt; (WIP):
fixed 32-bit integer overflow in stdlib_io_npy&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/652&quot;&gt;#652&lt;/a&gt; (WIP):
Feature: loadtxt skiprows and max_rows&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/625&quot;&gt;#625&lt;/a&gt; (WIP):
Gamma special function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/611&quot;&gt;#611&lt;/a&gt; (WIP):
Hash maps&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/604&quot;&gt;#604&lt;/a&gt; (WIP):
Add get_argument, get_variable and set_variable&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/580&quot;&gt;#580&lt;/a&gt; (WIP):
Add terminal and color escape sequences&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/552&quot;&gt;#552&lt;/a&gt; (WIP):
fixed bug in stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/536&quot;&gt;#536&lt;/a&gt; (WIP):
Fix conversion warnings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/520&quot;&gt;#520&lt;/a&gt; (WIP):
[stdlib_io] add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display variable values formatted).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/517&quot;&gt;#517&lt;/a&gt; (WIP):
adding SPEC_TEMPLATE.md #504&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/514&quot;&gt;#514&lt;/a&gt; (WIP):
pop, drop &amp;amp; get with basic range feature for stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/688&quot;&gt;#688&lt;/a&gt;:
Small fix for fpm_model&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/665&quot;&gt;#665&lt;/a&gt;:
add clean command&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/693&quot;&gt;#693&lt;/a&gt; (WIP):
Fix show-model option&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/692&quot;&gt;#692&lt;/a&gt; (WIP):
Fix for non-portable GFortran &lt;code class=&quot;highlighter-rouge&quot;&gt;-J&lt;/code&gt; flag in install script&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/686&quot;&gt;#686&lt;/a&gt; (WIP):
fix: remove extra space from help-test cmd&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/685&quot;&gt;#685&lt;/a&gt; (WIP):
fix: function for getting executable path&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/676&quot;&gt;#676&lt;/a&gt; (WIP):
Tree shaking for modules&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/671&quot;&gt;#671&lt;/a&gt; (WIP):
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;library-dir&lt;/code&gt; to support &lt;code class=&quot;highlighter-rouge&quot;&gt;-Lpath&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/653&quot;&gt;#653&lt;/a&gt; (WIP):
Enable profiles in toml&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/608&quot;&gt;#608&lt;/a&gt; (WIP):
–env switch lets you specify the prefix of the compiler-related environment variables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://fpm.fortran-lang.org/en/tutorial&quot;&gt;fpm packaging guide&lt;/a&gt;
to learn how to build your package with fpm, and the &lt;a href=&quot;https://fpm.fortran-lang.org/en/spec/manifest.html&quot;&gt;manifest reference&lt;/a&gt;
to learn what are all the things that you can specify in the fpm.toml file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;FIR
    &lt;ul&gt;
      &lt;li&gt;Lower various intrinsics:
        &lt;ul&gt;
          &lt;li&gt;character related intrinsics, array related intrinsics, index intrinsics, present, exit, btest, ceiling, nearest, scale, matmul, trim, transpose, command, environment, repeat, aint, anint, cmplx, conjg, dble, dprod, sign, spacing, rrspacing, merge intrinsics, lbound, ubound, ior, exp, log, log10, sqrt, atan, sinh, cosh, sin, cos, mvbits, achar&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Add IO lowering test&lt;/li&gt;
      &lt;li&gt;Add more lowering tests for dummy arguments&lt;/li&gt;
      &lt;li&gt;Add equivalence lowering tests&lt;/li&gt;
      &lt;li&gt;Add array constructor lowering tests&lt;/li&gt;
      &lt;li&gt;Lower more array expressions&lt;/li&gt;
      &lt;li&gt;Lower statement function&lt;/li&gt;
      &lt;li&gt;Lower length on character storage&lt;/li&gt;
      &lt;li&gt;Lower select case statement&lt;/li&gt;
      &lt;li&gt;Add OpenMP Conversion patterns&lt;/li&gt;
      &lt;li&gt;Lower procedure designator&lt;/li&gt;
      &lt;li&gt;Lower boxed procedure&lt;/li&gt;
      &lt;li&gt;Flush and master constructs&lt;/li&gt;
      &lt;li&gt;Add lowering C interoperability test&lt;/li&gt;
      &lt;li&gt;Add misc lowering tests&lt;/li&gt;
      &lt;li&gt;Handle zero extent case in LBOUND&lt;/li&gt;
      &lt;li&gt;Lower some coarray statements to their runtime function&lt;/li&gt;
      &lt;li&gt;Options to lower math intrinsics to relaxed, precise variants&lt;/li&gt;
      &lt;li&gt;Lower optionals in GET_COMMAND_ARGUMENT and  GET_ENVIRONMENT_VARIABLE&lt;/li&gt;
      &lt;li&gt;Added lowering support for atomic read and write constructs&lt;/li&gt;
      &lt;li&gt;fix LBOUND lowering with KIND and no DIM arguments&lt;/li&gt;
      &lt;li&gt;Keep fully qualified !fir.heap type for fir.freemem op&lt;/li&gt;
      &lt;li&gt;Update the conversion code for fir.coordinate_of&lt;/li&gt;
      &lt;li&gt;Set lower bounds of array section fir.embox to one&lt;/li&gt;
      &lt;li&gt;Fix fir.embox codegen with constant interior shape&lt;/li&gt;
      &lt;li&gt;Do not fold fir.box_addr when it has a slice&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Driver
    &lt;ul&gt;
      &lt;li&gt;Make –version and -version consistent with clang&lt;/li&gt;
      &lt;li&gt;Add support for -mmlir&lt;/li&gt;
      &lt;li&gt;Make the plugin API independent of the driver internals&lt;/li&gt;
      &lt;li&gt;Add support for generating executables&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;Lowering critical construct&lt;/li&gt;
      &lt;li&gt;Added assembly format for omp.wsloop and remove parseClauses&lt;/li&gt;
      &lt;li&gt;Added lowering support for sections construct&lt;/li&gt;
      &lt;li&gt;Added ReductionClauseInterface&lt;/li&gt;
      &lt;li&gt;Added parallel sections translation&lt;/li&gt;
      &lt;li&gt;Revert “[Flang][OpenMP] Add semantic check for OpenMP Private, Firstprivate and Lastprivate clauses.”&lt;/li&gt;
      &lt;li&gt;Added allocate clause translation for OpenMP block constructs&lt;/li&gt;
      &lt;li&gt;Support export/import OpenMP Threadprivate Flag&lt;/li&gt;
      &lt;li&gt;Add implementation of privatisation&lt;/li&gt;
      &lt;li&gt;Add checks and tests for hint clause and fix empty hint&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenACC
    &lt;ul&gt;
      &lt;li&gt;Lower enter data directive&lt;/li&gt;
      &lt;li&gt;Lower exit data directive&lt;/li&gt;
      &lt;li&gt;Lower init/shutdown directive&lt;/li&gt;
      &lt;li&gt;Lower update directive&lt;/li&gt;
      &lt;li&gt;Lower data directive&lt;/li&gt;
      &lt;li&gt;Lower wait directive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Runtime
    &lt;ul&gt;
      &lt;li&gt;Error recovery improvement in runtime (IOMSG=)&lt;/li&gt;
      &lt;li&gt;Initial UTF-8 support in runtime I/O&lt;/li&gt;
      &lt;li&gt;Ensure PointerDeallocate actually deallocate pointers&lt;/li&gt;
      &lt;li&gt;Add runtime API to catch unit number out of range&lt;/li&gt;
      &lt;li&gt;Prefer process time over thread time in CPU_TIME&lt;/li&gt;
      &lt;li&gt;Raise FP exceptions from runtime conversion to binary&lt;/li&gt;
      &lt;li&gt;Preserve effect of positioning in record in non-advancing output&lt;/li&gt;
      &lt;li&gt;Don’t skip input spaces when they are significant&lt;/li&gt;
      &lt;li&gt;Fix ENDFILE for formatted stream output&lt;/li&gt;
      &lt;li&gt;Don’t emit empty lines for bad writes&lt;/li&gt;
      &lt;li&gt;Ignore leading spaces even in BZ mode&lt;/li&gt;
      &lt;li&gt;Fix edge-case FP input bugs&lt;/li&gt;
      &lt;li&gt;Enforce some limits on kP scale factors&lt;/li&gt;
      &lt;li&gt;Signal record read overrun when PAD=’NO’&lt;/li&gt;
      &lt;li&gt;Fix KIND=16 real/complex component I/O&lt;/li&gt;
      &lt;li&gt;Fix total MAXLOC/MINLOC for non-integer data&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Handle allocatable components when creating array temps&lt;/li&gt;
  &lt;li&gt;[Parser] Add a node for individual sections in sections construct&lt;/li&gt;
  &lt;li&gt;Add explanatory messages to grammar for language extensions&lt;/li&gt;
  &lt;li&gt;Convert RUNTIME_CHECK to better error for user errors in transformational.cpp&lt;/li&gt;
  &lt;li&gt;Accept legacy aliases for intrinsic function names&lt;/li&gt;
  &lt;li&gt;Expose error recovery cases in external I/O&lt;/li&gt;
  &lt;li&gt;Fix crash: ENTRY with generic interface of the same name&lt;/li&gt;
  &lt;li&gt;Fold DBLE&lt;/li&gt;
  &lt;li&gt;Single construct translation from PFT to FIR&lt;/li&gt;
  &lt;li&gt;UBOUND() edge case: empty dimension&lt;/li&gt;
  &lt;li&gt;Make not yet implemented messages more consistent&lt;/li&gt;
  &lt;li&gt;Fix LBOUND rewrite on descriptor components&lt;/li&gt;
  &lt;li&gt;Ensure descriptor lower bounds are LBOUND compliant&lt;/li&gt;
  &lt;li&gt;Fix cycle-catcher in procedure characterization&lt;/li&gt;
  &lt;li&gt;Fix bogus error from assignment to CLASS(*)&lt;/li&gt;
  &lt;li&gt;Mark C_ASSOCIATED specific procedures as PURE&lt;/li&gt;
  &lt;li&gt;Catch bad OPEN(STATUS=) cases&lt;/li&gt;
  &lt;li&gt;Fold NEAREST() and its relatives&lt;/li&gt;
  &lt;li&gt;Prevent undefined behavior in character MAXLOC folding&lt;/li&gt;
  &lt;li&gt;Fix invalid overflow check&lt;/li&gt;
  &lt;li&gt;Skip D when including D debug line&lt;/li&gt;
  &lt;li&gt;Allow user to recover from bad edit descriptor with INTEGER&lt;/li&gt;
  &lt;li&gt;Fold instantiated PDT character component length when needed&lt;/li&gt;
  &lt;li&gt;Add one semantic check for allocatable/pointer argument association&lt;/li&gt;
  &lt;li&gt;[cmake] Make CMake copy “omp_lib.h” into the build directory&lt;/li&gt;
  &lt;li&gt;Handle dynamically optional argument in EXIT&lt;/li&gt;
  &lt;li&gt;Fix semantic analysis for “forall” targeted by “label”&lt;/li&gt;
  &lt;li&gt;Emit a portability warning for padding in COMMON&lt;/li&gt;
  &lt;li&gt;Expand the num_images test coverage&lt;/li&gt;
  &lt;li&gt;Fold IBITS() intrinsic function&lt;/li&gt;
  &lt;li&gt;Error handling for out-of-range CASE values&lt;/li&gt;
  &lt;li&gt;Respect left tab limit with Tn editing after ADVANCE=’NO’&lt;/li&gt;
  &lt;li&gt;Allow IMPLICIT NONE(EXTERNAL) with GenericDetails&lt;/li&gt;
  &lt;li&gt;Do not ICE on out-of-range data statement designator&lt;/li&gt;
  &lt;li&gt;Fix ICE for sqrt(0.0) evaluation&lt;/li&gt;
  &lt;li&gt;Fix float-number representation bug&lt;/li&gt;
  &lt;li&gt;Fix intrinsic interface for DIMAG/DCONJG&lt;/li&gt;
  &lt;li&gt;Improve appearance of message attachments&lt;/li&gt;
  &lt;li&gt;Fix combining cases of USE association &amp;amp; generic interfaces&lt;/li&gt;
  &lt;li&gt;Defer all function result type processing&lt;/li&gt;
  &lt;li&gt;Always encode multi-byte output in UTF-8&lt;/li&gt;
  &lt;li&gt;Fix shape analysis of RESHAPE result&lt;/li&gt;
  &lt;li&gt;Use full result range for clock_gettime implementation of SYSTEM_CLOCK&lt;/li&gt;
  &lt;li&gt;Correct interaction between generics and intrinsics&lt;/li&gt;
  &lt;li&gt;Make F0.1 output editing of zero edge case consistent&lt;/li&gt;
  &lt;li&gt;Inner INTRINSIC must not shadow host generic&lt;/li&gt;
  &lt;li&gt;Local generics must not shadow host-associated generics&lt;/li&gt;
  &lt;li&gt;Fix TYPE/CLASS IS (T(…)) in SELECT TYPE&lt;/li&gt;
  &lt;li&gt;Allow modification of construct entities&lt;/li&gt;
  &lt;li&gt;Defer NAMELIST group item name resolution&lt;/li&gt;
  &lt;li&gt;Accept TYPE(intrinsic type) in declarations only for non-extension type&lt;/li&gt;
  &lt;li&gt;Finer control over error recovery with GetExpr()&lt;/li&gt;
  &lt;li&gt;Handle parameter-dependent types in PDT initializers&lt;/li&gt;
  &lt;li&gt;Upgrade short actual character arguments to errors&lt;/li&gt;
  &lt;li&gt;Allow POINTER attribute statement on procedure interfaces&lt;/li&gt;
  &lt;li&gt;Accept KIND type parameter inquiries on RE, IM, etc.&lt;/li&gt;
  &lt;li&gt;Add &amp;amp; use a better visit()&lt;/li&gt;
  &lt;li&gt;Fix regression with recent work on intrinsic/generic interactions&lt;/li&gt;
  &lt;li&gt;Do not pass derived type by descriptor when not needed&lt;/li&gt;
  &lt;li&gt;Fix LBOUND() folding for constant arrays&lt;/li&gt;
  &lt;li&gt;Set LBOUND() folding for (x) expression as ones&lt;/li&gt;
  &lt;li&gt;Semantics limits on kP scale factors&lt;/li&gt;
  &lt;li&gt;Do not ICE on recursive function definition in function result&lt;/li&gt;
  &lt;li&gt;Fold transformational bessels when host runtime has bessels&lt;/li&gt;
  &lt;li&gt;Do not create arith.extui with same from/to type&lt;/li&gt;
  &lt;li&gt;Disambiguate F(X)=Y case where F is a function returning a pointer&lt;/li&gt;
  &lt;li&gt;Avoid global name conflict when BIND(C,NAME=) is used&lt;/li&gt;
  &lt;li&gt;Accept “INFINITY” as real input&lt;/li&gt;
  &lt;li&gt;Add semantic checks for intrinsic function REDUCE()&lt;/li&gt;
  &lt;li&gt;Fix crash from PDT component init in module file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes are recorded and publicly available &lt;a href=&quot;https://docs.google.com/document/d/1Z2U5UAtJ-Dag5wlMaLaW1KRmNgENNAYynJqLW2j2AZQ/edit&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Compiling &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1718&quot;&gt;Fixes for intrinsics while compiling &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt; using &lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1719&quot;&gt;Draft: Stdlib sprint&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1689&quot;&gt;Draft: Sprint Compiling stdlib with LFortran&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Addition of ASR Optimization Passes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1688&quot;&gt;Implementing dead code elemination optimization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1686&quot;&gt;Supporting duplication of Function/Subroutine calls&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1681&quot;&gt;Implementing loop unrolling optimization for fixed sized loops&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;libasr&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1720&quot;&gt;AST-&amp;gt;ASR: Remove current_body&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1717&quot;&gt;Added support keyword argument in class procedures&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1715&quot;&gt;Implementing ArrayBound node to replace &lt;code class=&quot;highlighter-rouge&quot;&gt;lbound&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ubound&lt;/code&gt; as function calls&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1714&quot;&gt;Implementing &lt;code class=&quot;highlighter-rouge&quot;&gt;Block&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;BlockCall&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1711&quot;&gt;Made scope private in SymbolTable struct and added interface methods to modify scope&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1710&quot;&gt;Removing dead code which treats size intrinsic as function&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1708&quot;&gt;Implementing &lt;code class=&quot;highlighter-rouge&quot;&gt;ArraySize&lt;/code&gt; node to replace function call to &lt;code class=&quot;highlighter-rouge&quot;&gt;size&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1707&quot;&gt;Fixing adjustl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1706&quot;&gt;Implementing AssociateBlock&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1703&quot;&gt;Move ASR.asdl into the src/libasr directory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1699&quot;&gt;Fixing handling of return type&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1698&quot;&gt;Fill function in FunctionCall of len expr of Character type after completing symbol table&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1694&quot;&gt;Fixing inline function calls pass to skip intrinsics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1700&quot;&gt;Draft: ASR: Add all intrinsic operations into ASR itself&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WASM&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1713&quot;&gt;Wasm backend&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1704&quot;&gt;draft: Wasm Intial Base&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1705&quot;&gt;draft: Compiling LFortran to WASM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Miscellaneous&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1723&quot;&gt;bind(c): Fix call_fortran_i64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1722&quot;&gt;bind(c): Add tests for i64, f32, f64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1721&quot;&gt;Fix a bug in a test&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1716&quot;&gt;Add a test for calling Fortran from C&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1712&quot;&gt;Update ASR from LPython&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1702&quot;&gt;CI: add git safe.directory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1701&quot;&gt;Update ASR from LPython&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1696&quot;&gt;Update ASR from LPython&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1695&quot;&gt;Adding and Improving tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1709&quot;&gt;Remove –target install and CMAKE_INSTALL_PREFIX from build1.sh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/czgdp18071&quot;&gt;Gagandeep Singh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/certik&quot;&gt;Ondřej Čertík&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/shaikhubaid769&quot;&gt;Ubaid Shaikh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking for new contributors. Please do not hesitate to contact us if you are interested. We will help you get up to speed.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 25th Fortran Monthly call on April 22.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/8-_ll4f0gN8&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
  &lt;li&gt;Visual Studio Code’s popular &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=fortran-lang.linter-gfortran&quot;&gt;Modern Fortran&lt;/a&gt; extension joined the &lt;a href=&quot;https://github.com/fortran-lang/vscode-fortran-support&quot;&gt;fortran-lang GitHub&lt;/a&gt; organization.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Join and follow the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Fortran Discourse&lt;/a&gt;
to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fortran-lang/fpm-docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/minpack&quot;&gt;fortran-lang/minpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/test-drive&quot;&gt;fortran-lang/test-drive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;April 01 2022&quot; data-enddate=&quot;April 30 2022&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: April 2022</title>
        <link href="https://fortran-lang.org/newsletter/2022/04/07/Fortran-Newsletter-April-2022/"/>
        <updated>2022-04-07T00:00:00+00:00</updated>
        <id>/news/newsletter/2022/04/07/Fortran-Newsletter-April-2022</id>
        <content type="html">&lt;p&gt;Welcome to the April edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in the fortran-lang.org repo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/379&quot;&gt;#379&lt;/a&gt;:
Newsletter for March 2022&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/383&quot;&gt;#383&lt;/a&gt;:
Updated VS Code extensions&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/381&quot;&gt;#381&lt;/a&gt;:
add string array to learn&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/384&quot;&gt;#384&lt;/a&gt;:
Resolves typos #377&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/369&quot;&gt;#369&lt;/a&gt; (WIP):
Resolves Issue #217&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/347&quot;&gt;#347&lt;/a&gt; (WIP):
Fortran Intrinsics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt;
if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt;
for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/632&quot;&gt;#632&lt;/a&gt;:
doc: fix some typos&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/629&quot;&gt;#629&lt;/a&gt;:
option to disable testing by setting BUILD_TESTING to OFF&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/631&quot;&gt;#631&lt;/a&gt;:
Preparation for 0.2.0 release&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/637&quot;&gt;#637&lt;/a&gt;:
Only set Fortran arguments for Fortran compiler&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/642&quot;&gt;#642&lt;/a&gt;:
Fix linking issue with shared libraries&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-1&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/625&quot;&gt;#625&lt;/a&gt; (WIP):
Gamma special function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/611&quot;&gt;#611&lt;/a&gt; (WIP):
Hash maps&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/604&quot;&gt;#604&lt;/a&gt; (WIP):
Add get_argument, get_variable and set_variable&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/580&quot;&gt;#580&lt;/a&gt; (WIP):
Add terminal and color escape sequences&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/552&quot;&gt;#552&lt;/a&gt; (WIP):
fixed bug in stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/536&quot;&gt;#536&lt;/a&gt; (WIP):
Fix conversion warnings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/520&quot;&gt;#520&lt;/a&gt; (WIP):
[stdlib_io] add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display variable values formatted).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/517&quot;&gt;#517&lt;/a&gt; (WIP):
adding SPEC_TEMPLATE.md #504&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/514&quot;&gt;#514&lt;/a&gt; (WIP):
pop, drop &amp;amp; get with basic range feature for stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/675&quot;&gt;#675&lt;/a&gt;:
Fix for backtrace error when file not found in: src/fpm_source_parsing.f90&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/677&quot;&gt;#677&lt;/a&gt;:
Fix issue with backend pretty output&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/684&quot;&gt;#684&lt;/a&gt;:
fix: remove remove unnecessary space in fpm new cmd&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm/pull/8&quot;&gt;#8&lt;/a&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;setup-fpm&lt;/code&gt;):
Update to v4 in usage example in README&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-2&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/685&quot;&gt;#685&lt;/a&gt; (WIP):
fix: function for getting executable path&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/676&quot;&gt;#676&lt;/a&gt; (WIP):
Tree shaking for modules&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/671&quot;&gt;#671&lt;/a&gt; (WIP):
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;library-dir&lt;/code&gt; to support &lt;code class=&quot;highlighter-rouge&quot;&gt;-Lpath&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/665&quot;&gt;#665&lt;/a&gt; (WIP):
add clean command&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/653&quot;&gt;#653&lt;/a&gt; (WIP):
Enable profiles in toml&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/608&quot;&gt;#608&lt;/a&gt; (WIP):
–env switch lets you specify the prefix of the compiler-related environment variables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://fpm.fortran-lang.org/en/tutorial&quot;&gt;fpm packaging guide&lt;/a&gt;
to learn how to build your package with fpm, and the &lt;a href=&quot;https://fpm.fortran-lang.org/en/spec/manifest.html&quot;&gt;manifest reference&lt;/a&gt;
to learn what are all the things that you can specify in the fpm.toml file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;FIR
    &lt;ul&gt;
      &lt;li&gt;Lower IO open and close statements&lt;/li&gt;
      &lt;li&gt;Lower basic IO file statements&lt;/li&gt;
      &lt;li&gt;Lower inquire statement&lt;/li&gt;
      &lt;li&gt;Handle module in lowering pass&lt;/li&gt;
      &lt;li&gt;Lower more cases of assignments on allocatable variables&lt;/li&gt;
      &lt;li&gt;Add lowering for host association&lt;/li&gt;
      &lt;li&gt;Lower allocate and deallocate statements&lt;/li&gt;
      &lt;li&gt;Lower sum intrinsic&lt;/li&gt;
      &lt;li&gt;Lower computed and assigned goto&lt;/li&gt;
      &lt;li&gt;Lower associate construct&lt;/li&gt;
      &lt;li&gt;Update ArrayValueCopy to support array_amend and array_access&lt;/li&gt;
      &lt;li&gt;Lower more array character cases&lt;/li&gt;
      &lt;li&gt;Lower basic derived types&lt;/li&gt;
      &lt;li&gt;Lower where statement&lt;/li&gt;
      &lt;li&gt;Lower general forall statement&lt;/li&gt;
      &lt;li&gt;Lower pointer component in derived type&lt;/li&gt;
      &lt;li&gt;Lower of elemental calls in array expression&lt;/li&gt;
      &lt;li&gt;Add tests for allocatable global&lt;/li&gt;
      &lt;li&gt;Add support for linkonce_odr in FIR&lt;/li&gt;
      &lt;li&gt;Lower elemental calls&lt;/li&gt;
      &lt;li&gt;Lower ALL intrinsic&lt;/li&gt;
      &lt;li&gt;Lower common block&lt;/li&gt;
      &lt;li&gt;Lower format statement&lt;/li&gt;
      &lt;li&gt;Write a pass to annotate constant operands on FIR ops&lt;/li&gt;
      &lt;li&gt;Lower ANY intrinsic&lt;/li&gt;
      &lt;li&gt;Add support for lowering the dot_product intrinsic&lt;/li&gt;
      &lt;li&gt;Add support for lowering the dim intrinsic&lt;/li&gt;
      &lt;li&gt;Add support for lowering of the ibits intrinsic&lt;/li&gt;
      &lt;li&gt;Lower more pointer assignments/disassociation cases&lt;/li&gt;
      &lt;li&gt;Lower entry statement&lt;/li&gt;
      &lt;li&gt;Lower alternate return&lt;/li&gt;
      &lt;li&gt;Lower allocated intrinsic&lt;/li&gt;
      &lt;li&gt;Add lowering for the following character related intrinsics: len, len_trim, lge, lgt, lle and llt&lt;/li&gt;
      &lt;li&gt;Adds lowering for min/max intrinsics: max, maxloc, maxval, minloc, minval&lt;/li&gt;
      &lt;li&gt;
        &lt;table&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td&gt;Lower random_[init&lt;/td&gt;
              &lt;td&gt;number&lt;/td&gt;
              &lt;td&gt;seed] intrinsics&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
      &lt;li&gt;Lower date_and_time and cpu_time intrinsics&lt;/li&gt;
      &lt;li&gt;Lower system_clock intrinsic&lt;/li&gt;
      &lt;li&gt;Add support for lowering of the ibset intrinsic&lt;/li&gt;
      &lt;li&gt;Lower transfer instrinsic&lt;/li&gt;
      &lt;li&gt;Lower adjustl and adjustr intrinsics&lt;/li&gt;
      &lt;li&gt;Lower count intrinsic&lt;/li&gt;
      &lt;li&gt;Add lowering for the set_exponent intrinsic&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Driver
    &lt;ul&gt;
      &lt;li&gt;Add support for -debug-dump-pft&lt;/li&gt;
      &lt;li&gt;Add support for -S and implement -c/-emit-obj&lt;/li&gt;
      &lt;li&gt;Add support for -mllvm&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;[mlir]Generating enums in accordance with the guidelines&lt;/li&gt;
      &lt;li&gt;Added basic connect to lower OpenMP constructs&lt;/li&gt;
      &lt;li&gt;Support for dump OpenMP/OpenACC declarative directives PFT in module&lt;/li&gt;
      &lt;li&gt;Add OpenMP and OpenACC flags to bbc&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Allow data transfer stmt control list errors to be caught&lt;/li&gt;
  &lt;li&gt;Extension: don’t require commas between most edit descriptors in formats&lt;/li&gt;
  &lt;li&gt;Fix result type of “procedure(abs) :: f”&lt;/li&gt;
  &lt;li&gt;Catch READ/WRITE on direct-access file without REC=&lt;/li&gt;
  &lt;li&gt;Honor RECL= in list-directed/namelist output&lt;/li&gt;
  &lt;li&gt;Accommodate module subprograms defined in the same module&lt;/li&gt;
  &lt;li&gt;Extend ProvenanceRange::Suffix() to handle crash case&lt;/li&gt;
  &lt;li&gt;Remove bogus messages for actual/dummy procedure argument compatibility&lt;/li&gt;
  &lt;li&gt;Support PDT type descriptors in codegen&lt;/li&gt;
  &lt;li&gt;Handle optional TARGET associate in ASSOCIATED runtime&lt;/li&gt;
  &lt;li&gt;Generate PDT runtime type info in the type definition scope&lt;/li&gt;
  &lt;li&gt;Accommodate arrays with a zero-extent dimension in location folding&lt;/li&gt;
  &lt;li&gt;Avoid crash case in provenance mapping&lt;/li&gt;
  &lt;li&gt;Make per-argument intrinsic error messages more localized&lt;/li&gt;
  &lt;li&gt;Use faster path for default formatted character input&lt;/li&gt;
  &lt;li&gt;Runtime validation of SPREAD(DIM=dim) argument&lt;/li&gt;
  &lt;li&gt;Make uninitialized allocatable components explicitly NULL() in structure constructors&lt;/li&gt;
  &lt;li&gt;Fix module file missing USE for shadowed derived type&lt;/li&gt;
  &lt;li&gt;Add nonfatal message classes&lt;/li&gt;
  &lt;li&gt;Distinguish usage and portability warning messages&lt;/li&gt;
  &lt;li&gt;Use unix logical representation for fir.logical&lt;/li&gt;
  &lt;li&gt;Fix extent computation in finalization&lt;/li&gt;
  &lt;li&gt;Fix processing ModuleLikeUnit evaluationList&lt;/li&gt;
  &lt;li&gt;Do not return true for pointer sub-object in IsPointerObject&lt;/li&gt;
  &lt;li&gt;Fix DYLIB builds&lt;/li&gt;
  &lt;li&gt;Improve runtime crash messages&lt;/li&gt;
  &lt;li&gt;Add runtime support for GET_COMMAND&lt;/li&gt;
  &lt;li&gt;IEEE_ARITHMETIC must imply USE IEEE_EXCEPTIONS&lt;/li&gt;
  &lt;li&gt;LBOUND() edge case: empty dimension&lt;/li&gt;
  &lt;li&gt;Hanlde COMPLEX 2/3/10 in runtime TypeCode(cat, kind)&lt;/li&gt;
  &lt;li&gt;fulfill -Msave/-fno-automatic in main programs too&lt;/li&gt;
  &lt;li&gt;Relax fir.rebox verifier with characters&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes are recorded and available upon request &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;. Please contact Alexis Perry-Holby at aperry@lanl.gov for document access.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;We are looking for new contributors. Please do not hesitate to contact us if you are interested. We will help you get up to speed.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The “State of Fortran” paper by Kedward et al. has been accepted for publication in the IEEE journal Computing in Science and Engineering (CiSE).
You can read the pre-print on &lt;a href=&quot;https://arxiv.org/abs/2203.15110&quot;&gt;arXiv&lt;/a&gt;, or find the paper in Early Access on the &lt;a href=&quot;https://ieeexplore.ieee.org/document/9736688&quot;&gt;CiSE website&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;The contributor application window for this year’s &lt;a href=&quot;https://summerofcode.withgoogle.com&quot;&gt;Google Summer of Code&lt;/a&gt; is approaching fast.
It opens &lt;strong&gt;April 4&lt;/strong&gt; and closes &lt;strong&gt;April 19&lt;/strong&gt;.
See the &lt;a href=&quot;https://summerofcode.withgoogle.com/programs/2022/organizations/fortran-lang&quot;&gt;Fortran-lang GSoC 2022 page&lt;/a&gt; for information about the projects and how to apply.
To learn more about GSoC and what has changed since last year, please see the &lt;a href=&quot;https://opensource.googleblog.com/2021/11/expanding-google-summer-of-code-in-2022.html&quot;&gt;GSoC 2022 announcement&lt;/a&gt;.
If you’d like to participate, please let us know and we’ll help you get started.&lt;/li&gt;
  &lt;li&gt;We had our 24th Fortran Monthly call on March 15.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/hekwzPzIfu8&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fortran-lang/fpm-docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/minpack&quot;&gt;fortran-lang/minpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/test-drive&quot;&gt;fortran-lang/test-drive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;March 01 2022&quot; data-enddate=&quot;March 31 2022&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: March 2022</title>
        <link href="https://fortran-lang.org/newsletter/2022/03/09/Fortran-Newsletter-March-2022/"/>
        <updated>2022-03-09T00:00:00+00:00</updated>
        <id>/news/newsletter/2022/03/09/Fortran-Newsletter-March-2022</id>
        <content type="html">&lt;p&gt;Welcome to the March edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in the fortran-lang.org repo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/369&quot;&gt;#369&lt;/a&gt;:
Resolves Issue #217&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/359&quot;&gt;#359&lt;/a&gt;:
Fix time calculation in the PRs script&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/347&quot;&gt;#347&lt;/a&gt; (WIP):
Fortran Intrinsics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt;
if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt;
for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/624&quot;&gt;#624&lt;/a&gt;:
[stdlib_math] Minor update to &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_math&lt;/code&gt; module and document&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-1&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/625&quot;&gt;#625&lt;/a&gt; (WIP):
Gamma special function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/611&quot;&gt;#611&lt;/a&gt; (WIP):
Hash maps&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/604&quot;&gt;#604&lt;/a&gt; (WIP):
Add get_argument, get_variable and set_variable&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/580&quot;&gt;#580&lt;/a&gt; (WIP):
Add terminal and color escape sequences&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/552&quot;&gt;#552&lt;/a&gt; (WIP):
fixed bug in stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/536&quot;&gt;#536&lt;/a&gt; (WIP):
Fix conversion warnings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/520&quot;&gt;#520&lt;/a&gt; (WIP):
[stdlib_io] add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display variable values formatted).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/517&quot;&gt;#517&lt;/a&gt; (WIP):
adding SPEC_TEMPLATE.md #504&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/514&quot;&gt;#514&lt;/a&gt; (WIP):
pop, drop &amp;amp; get with basic range feature for stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/652&quot;&gt;#652&lt;/a&gt;:
get user name and email using git config if available else use defaults&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/654&quot;&gt;#654&lt;/a&gt;:
Ignore hidden source files&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/622&quot;&gt;#622&lt;/a&gt;:
Cleanup the backend output&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/648&quot;&gt;#648&lt;/a&gt;:
Add note about relocation of manifest reference&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/issues/42&quot;&gt;fpm-docs#42&lt;/a&gt;:
Dutch translation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/48&quot;&gt;fpm-docs#48&lt;/a&gt;:
Chinese translation improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/52&quot;&gt;fpm-docs#52&lt;/a&gt;:
Update plugin tutorial&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-2&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/665&quot;&gt;#665&lt;/a&gt; (WIP):
add clean command&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/653&quot;&gt;#653&lt;/a&gt; (WIP):
Enable profiles in toml&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/608&quot;&gt;#608&lt;/a&gt; (WIP):
–env switch lets you specify the prefix of the compiler-related environment variables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/51&quot;&gt;fpm-docs#51&lt;/a&gt; (WIP):
Add page about fpm logo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://fpm.fortran-lang.org/en/tutorial&quot;&gt;fpm packaging guide&lt;/a&gt;
to learn how to build your package with fpm, and the &lt;a href=&quot;https://fpm.fortran-lang.org/en/spec/manifest.html&quot;&gt;manifest reference&lt;/a&gt;
to learn what are all the things that you can specify in the fpm.toml file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;FIR
    &lt;ul&gt;
      &lt;li&gt;Initial lowering for empty program&lt;/li&gt;
      &lt;li&gt;Upstream partial lowering of COMMAND_ARGUMENT_COUNT intrinsic&lt;/li&gt;
      &lt;li&gt;Add lowering placeholders&lt;/li&gt;
      &lt;li&gt;Add lowering for basic empty SUBROUTINE&lt;/li&gt;
      &lt;li&gt;Upstream partial lowering of EXIT intrinsic&lt;/li&gt;
      &lt;li&gt;Lower basic STOP statement&lt;/li&gt;
      &lt;li&gt;Lower PAUSE statement&lt;/li&gt;
      &lt;li&gt;Add lowering for integer constant&lt;/li&gt;
      &lt;li&gt;Lower integer constant code for STOP stmt&lt;/li&gt;
      &lt;li&gt;Add fir.array_access op&lt;/li&gt;
      &lt;li&gt;Add fir.array_amend operation definition&lt;/li&gt;
      &lt;li&gt;Handle logical constant value for quiet in STOP stmt&lt;/li&gt;
      &lt;li&gt;Upstream partial lowering of GET_COMMAND_ARGUMENT intrinsic&lt;/li&gt;
      &lt;li&gt;Basic local variable lowering&lt;/li&gt;
      &lt;li&gt;Add lowering for ASCII character constant&lt;/li&gt;
      &lt;li&gt;Handle character constant for error code in STOP stmt&lt;/li&gt;
      &lt;li&gt;Upstream partial lowering of GET_ENVIRONMENT_VARIABLE intrinsic&lt;/li&gt;
      &lt;li&gt;Add missing CFI case for REAL and COMPLEX&lt;/li&gt;
      &lt;li&gt;Add support for lowering the goto statement&lt;/li&gt;
      &lt;li&gt;Add type conversion for !fir.box&lt;none&gt;&lt;/none&gt;&lt;/li&gt;
      &lt;li&gt;Add FIRInlinerInterface&lt;/li&gt;
      &lt;li&gt;Lower simple RETURN statement&lt;/li&gt;
      &lt;li&gt;Upstream fix to allocmem codegen to deal with missing dimensions for sequence of character types&lt;/li&gt;
      &lt;li&gt;Lower basic function with scalar integer/logical return value&lt;/li&gt;
      &lt;li&gt;Enable scalar real type in lowering&lt;/li&gt;
      &lt;li&gt;Enable complex type in function lowering&lt;/li&gt;
      &lt;li&gt;Handle lowering of ranked array&lt;/li&gt;
      &lt;li&gt;Lower simple scalar assignment&lt;/li&gt;
      &lt;li&gt;Lower scalar negation&lt;/li&gt;
      &lt;li&gt;Lower basic binary operation for scalars&lt;/li&gt;
      &lt;li&gt;Initial patch to lower a Fortran intrinsic&lt;/li&gt;
      &lt;li&gt;Lower real constant&lt;/li&gt;
      &lt;li&gt;Lower complex constant&lt;/li&gt;
      &lt;li&gt;Lower function and subroutine calls&lt;/li&gt;
      &lt;li&gt;Handle allocatable dummy arguments&lt;/li&gt;
      &lt;li&gt;Lower allocatable assignment for scalar&lt;/li&gt;
      &lt;li&gt;Simple array assignment lowering&lt;/li&gt;
      &lt;li&gt;Lower simple character return&lt;/li&gt;
      &lt;li&gt;Lower Fortran intrinsic to a runtime call/llvm intrinsic&lt;/li&gt;
      &lt;li&gt;Lower integer comparison operation&lt;/li&gt;
      &lt;li&gt;Lower real comparison operations&lt;/li&gt;
      &lt;li&gt;Lower logical comparison and logical operations&lt;/li&gt;
      &lt;li&gt;Lower power operations&lt;/li&gt;
      &lt;li&gt;Add complex operations lowering tests&lt;/li&gt;
      &lt;li&gt;Lower basic IO statement&lt;/li&gt;
      &lt;li&gt;Handle dynamic array lowering&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Driver
    &lt;ul&gt;
      &lt;li&gt;Add support for &lt;code class=&quot;highlighter-rouge&quot;&gt;-emit-mlir&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Add support for &lt;code class=&quot;highlighter-rouge&quot;&gt;-emit-llvm&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Make &lt;code class=&quot;highlighter-rouge&quot;&gt;flang-new&lt;/code&gt; always generate run-time type info&lt;/li&gt;
      &lt;li&gt;Add support for &lt;code class=&quot;highlighter-rouge&quot;&gt;--target&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;--triple&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;Added OpenMP 5.0 specification based semantic checks for atomic update construct&lt;/li&gt;
      &lt;li&gt;The device expression must evaluate to a non-negative integer value&lt;/li&gt;
      &lt;li&gt;Remove clauses from OpenMP Dialect that are handled by the flang frontend instead:
        &lt;ul&gt;
          &lt;li&gt;private, firstprivate, lastprivate, shared, default, copyin, copyprivate&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Runtime
    &lt;ul&gt;
      &lt;li&gt;Implement a runtime routine to report fatal errors with source position&lt;/li&gt;
      &lt;li&gt;Rename the runtime routine that reports a fatal user error&lt;/li&gt;
      &lt;li&gt;runtime perf: larger I/O buffer growth increments&lt;/li&gt;
      &lt;li&gt;Add runtime interface for GET_COMMAND&lt;/li&gt;
      &lt;li&gt;Upstream runtime changes for inquiry intrinsics&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Improve error message (initialized variable in pure subprogram)&lt;/li&gt;
  &lt;li&gt;Accept BOZ literals for some actual arguments&lt;/li&gt;
  &lt;li&gt;Accept sparse argument keyword names for MAX/MIN&lt;/li&gt;
  &lt;li&gt;Accept INDEX(…, BACK=array)&lt;/li&gt;
  &lt;li&gt;Fix OPEN/WRITE(SIGN=’SUPPRESS’)&lt;/li&gt;
  &lt;li&gt;Handle FLUSH(unknown unit)&lt;/li&gt;
  &lt;li&gt;Allow explicit ‘+’ in NAMELIST input subscripts&lt;/li&gt;
  &lt;li&gt;Extension: skip over NAMELIST groups&lt;/li&gt;
  &lt;li&gt;Add array operations documentation&lt;/li&gt;
  &lt;li&gt;Fix crash from USE-associated defined I/O subprograms&lt;/li&gt;
  &lt;li&gt;Allow INQUIRE() on a child unit in user-defined I/O procedure&lt;/li&gt;
  &lt;li&gt;Don’t drop format string for external child I/O&lt;/li&gt;
  &lt;li&gt;Support DECIMAL=’COMMA’ mode in namelist I/O&lt;/li&gt;
  &lt;li&gt;Update tco tool pipline and add translation to LLVM IR&lt;/li&gt;
  &lt;li&gt;Add MemoryAllocation pass to the pipeline&lt;/li&gt;
  &lt;li&gt;Add ieee_is_normal/ieee_is_negative to ieee_arithmetic module.&lt;/li&gt;
  &lt;li&gt;Add a custom target for the “flang” wrapper script.&lt;/li&gt;
  &lt;li&gt;split character procedure arguments in target-rewrite pass&lt;/li&gt;
  &lt;li&gt;Expand the semantics test for co_sum&lt;/li&gt;
  &lt;li&gt;Correct interpretation of RECL=&lt;/li&gt;
  &lt;li&gt;Distinguish intrinsic from non-intrinsic modules&lt;/li&gt;
  &lt;li&gt;Make NEWUNIT= use a range suitable for INTEGER(KIND=1) and recycle unit numbers&lt;/li&gt;
  &lt;li&gt;Modify right modes for READ/WRITE vs OPEN&lt;/li&gt;
  &lt;li&gt;Add a semantics test for co_broadcast&lt;/li&gt;
  &lt;li&gt;catch implicit interface incompatibility with global scope symbol&lt;/li&gt;
  &lt;li&gt;Add an assert to guard against nullptr dereferencing&lt;/li&gt;
  &lt;li&gt;Fix FlangOptimizerTests link on Solaris&lt;/li&gt;
  &lt;li&gt;Handle “type(foo) function f” when foo is defined in f&lt;/li&gt;
  &lt;li&gt;Refine pointer/target test for ASSOCIATED intrinsic&lt;/li&gt;
  &lt;li&gt;Allow mixed association of procedure pointers and targets&lt;/li&gt;
  &lt;li&gt;Fix edge case in USE-associated generics&lt;/li&gt;
  &lt;li&gt;Fail at link time if derived type descriptors were not generated&lt;/li&gt;
  &lt;li&gt;Allow for deferred-length character in EstablishDescriptor&lt;/li&gt;
  &lt;li&gt;Allow DATA initialization of derived types w/ allocatable components&lt;/li&gt;
  &lt;li&gt;Accept NULL(mold=x) as constant component value in constant structure constructor&lt;/li&gt;
  &lt;li&gt;Ensure a characterized ENTRY in a PURE subprogram is also marked PURE&lt;/li&gt;
  &lt;li&gt;Accept structure constructor value for polymorphic component&lt;/li&gt;
  &lt;li&gt;Remove deprecated parser/printer/verifier utilities&lt;/li&gt;
  &lt;li&gt;Accept pointer assignment w/ remapping to function result&lt;/li&gt;
  &lt;li&gt;Allow extension cases of EQUIVALENCE with optional warnings&lt;/li&gt;
  &lt;li&gt;Handle CALL C_F_POINTER(without SHAPE=)&lt;/li&gt;
  &lt;li&gt;Make source location more accurate for actual arguments&lt;/li&gt;
  &lt;li&gt;Add Win32 to the list of supported triples&lt;/li&gt;
  &lt;li&gt;Allow tabs as white space in formats&lt;/li&gt;
  &lt;li&gt;Do not print format tabs&lt;/li&gt;
  &lt;li&gt;Catch I/O of bad derived type at compile time&lt;/li&gt;
  &lt;li&gt;Allow more concurrently open NEWUNIT= values, with recycling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes are recorded and available upon request &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;. Please contact Alexis Perry-Holby at aperry@lanl.gov for document access.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;LFortran is participating in GSoC, please see &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/wikis/GSoC%202022%20Student%20Instructions&quot;&gt;GSoC 2022 Student Instructions for LFortran&lt;/a&gt; for instructions how to apply&lt;/li&gt;
  &lt;li&gt;19 Merge Requests merged&lt;/li&gt;
  &lt;li&gt;New ASR optimizations&lt;/li&gt;
  &lt;li&gt;Addes support for fma (fused-multiply add) in LLVM&lt;/li&gt;
  &lt;li&gt;Semantic improves to compile more of stdlib&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking for new contributors. Please do not hesitate to contact us if you are interested. We will help you get up to speed.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Fortran-lang has been selected as a mentoring organization for Google Summer of Code 2022!
Thanks to everybody who helped prepare the application.
&lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;GSoC&lt;/a&gt; is Google’s global, online program that allows newcomers to open-source to work on a project and get paid for it. 
See the &lt;a href=&quot;https://summerofcode.withgoogle.com/programs/2022/organizations/fortran-lang&quot;&gt;Fortran-lang GSoC 2022 page&lt;/a&gt; for information about the projects and how to apply.
Applications for contributors open &lt;strong&gt;April 4&lt;/strong&gt; and close &lt;strong&gt;April 19&lt;/strong&gt;.
To learn more about GSoC and what has changed since last year, please see the &lt;a href=&quot;https://opensource.googleblog.com/2021/11/expanding-google-summer-of-code-in-2022.html&quot;&gt;GSoC 2022 announcement&lt;/a&gt;.
If you’d like to participate as a contributor or a mentor, please let us know in this thread and we’ll help you get started.&lt;/li&gt;
  &lt;li&gt;Fortran-lang community now maintains a modernized fork of the classic library
&lt;a href=&quot;https://github.com/fortran-lang/minpack&quot;&gt;minpack&lt;/a&gt;. Give it a try!&lt;/li&gt;
  &lt;li&gt;We had our 23rd Fortran Monthly call on February 15.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/oi0F-4QSdIY&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
  &lt;li&gt;US Fortran Standards Committee meeting #226 started on February 28.
See the draft agenda &lt;a href=&quot;https://j3-fortran.org/doc/year/22/agenda226.txt&quot;&gt;here&lt;/a&gt;
and the submitted papers &lt;a href=&quot;https://j3-fortran.org/doc/meeting/226&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fortran-lang/fpm-docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/minpack&quot;&gt;fortran-lang/minpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/test-drive&quot;&gt;fortran-lang/test-drive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;February 01 2022&quot; data-enddate=&quot;February 28 2022&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: February 2022</title>
        <link href="https://fortran-lang.org/newsletter/2022/02/01/Fortran-Newsletter-February-2022/"/>
        <updated>2022-02-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2022/02/01/Fortran-Newsletter-February-2022</id>
        <content type="html">&lt;p&gt;Welcome to the February 2022 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;Here’s what’s new and ongoing in the fortran-lang.org repo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/369&quot;&gt;#369&lt;/a&gt;:
Resolves Issue #217&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/359&quot;&gt;#359&lt;/a&gt;:
Fix time calculation in the PRs script&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/347&quot;&gt;#347&lt;/a&gt; (WIP):
Fortran Intrinsics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt;
if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt;
for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt;:
Probability Distribution and Statistical Functions – Exponential Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/605&quot;&gt;#605&lt;/a&gt;:
[stdlib_math] Add function &lt;code class=&quot;highlighter-rouge&quot;&gt;diff&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/613&quot;&gt;#613&lt;/a&gt;:
Ignore hash testing binaries and logs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/617&quot;&gt;#617&lt;/a&gt;:
Made format constant public&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/622&quot;&gt;#622&lt;/a&gt;:
Fix Gauss quadrature&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-1&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/611&quot;&gt;#611&lt;/a&gt; (WIP):
Hash maps&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/604&quot;&gt;#604&lt;/a&gt; (WIP):
Add get_argument, get_variable and set_variable&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/580&quot;&gt;#580&lt;/a&gt; (WIP):
Add terminal and color escape sequences&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/552&quot;&gt;#552&lt;/a&gt; (WIP):
fixed bug in stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/536&quot;&gt;#536&lt;/a&gt; (WIP):
Fix conversion warnings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/520&quot;&gt;#520&lt;/a&gt; (WIP):
[stdlib_io] add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display variable values formatted).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/517&quot;&gt;#517&lt;/a&gt; (WIP):
adding SPEC_TEMPLATE.md #504&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/514&quot;&gt;#514&lt;/a&gt; (WIP):
pop, drop &amp;amp; get with basic range feature for stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/630&quot;&gt;#630&lt;/a&gt;:
allow backfilling of current directory in fpm-new subcommand&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/646&quot;&gt;#646&lt;/a&gt;:
Respect user provided main-files&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/645&quot;&gt;#645&lt;/a&gt;:
Update module output directory command for flang-new/f18&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/47&quot;&gt;fpm-docs#47&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/46&quot;&gt;fpm-docs#46&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/45&quot;&gt;fpm-docs#45&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/44&quot;&gt;fpm-docs#44&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/41&quot;&gt;fpm-docs#41&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/39&quot;&gt;fpm-docs#39&lt;/a&gt;:
French translation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/43&quot;&gt;fpm-docs#43&lt;/a&gt;:
Add testing workflow for source examples&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/40&quot;&gt;fpm-docs#40&lt;/a&gt;:
Update Spanish translation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/37&quot;&gt;fpm-docs#37&lt;/a&gt;:
zh_CN: Update Chinese translations&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-2&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/654&quot;&gt;#654&lt;/a&gt; (WIP):
Ignore hidden source files&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/653&quot;&gt;#653&lt;/a&gt; (WIP):
Enable profiles in toml&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/652&quot;&gt;#652&lt;/a&gt; (WIP):
Get user name and email using got config if available else use defaults&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/648&quot;&gt;#648&lt;/a&gt; (WIP):
Add note about relocation of manifest reference&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/622&quot;&gt;#622&lt;/a&gt; (WIP):
Cleanup the backend output&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/608&quot;&gt;#608&lt;/a&gt; (WIP):
–env switch lets you specify the prefix of the compiler-related environment variables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/issues/42&quot;&gt;fpm-docs#42&lt;/a&gt; (WIP):
Dutch translation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs/pull/48&quot;&gt;fpm-docs#48&lt;/a&gt; (WIP):
Chinese translation improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://fpm.fortran-lang.org/en/tutorial&quot;&gt;fpm packaging guide&lt;/a&gt;
to learn how to build your package with fpm, and the &lt;a href=&quot;https://fpm.fortran-lang.org/en/spec/manifest.html&quot;&gt;manifest reference&lt;/a&gt;
to learn what are all the things that you can specify in the fpm.toml file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;FIR
    &lt;ul&gt;
      &lt;li&gt;Keep runtime function name in comment&lt;/li&gt;
      &lt;li&gt;Add a conversion for !fir.coordinate_of&lt;/li&gt;
      &lt;li&gt;Add a new memory allocation rewrite pass.&lt;/li&gt;
      &lt;li&gt;Correct and reenable test that was removed by MLIR.&lt;/li&gt;
      &lt;li&gt;Fix overallocation by fir-to-llvm-ir pass&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;Add some semantic checks for threadprivate and declare target directives&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Simplify RaggedArrayHeader and make it plain C struct&lt;/li&gt;
  &lt;li&gt;Fix folding of ac-implied-do indices in structure constructors&lt;/li&gt;
  &lt;li&gt;Avoid code duplication in mixed expressions&lt;/li&gt;
  &lt;li&gt;Add test with shape for allocmem and freemem&lt;/li&gt;
  &lt;li&gt;Make the frontend driver error out when requesting multiple actions&lt;/li&gt;
  &lt;li&gt;Add semantics tests for co_reduce, co_min, and co_max&lt;/li&gt;
  &lt;li&gt;Use GNUInstallDirs to support custom installation dirs.&lt;/li&gt;
  &lt;li&gt;Enable support for conversion of recursive record types&lt;/li&gt;
  &lt;li&gt;Separate temporary and user-specified object files&lt;/li&gt;
  &lt;li&gt;update to reflect MLIR LLVM::GEPOp changes&lt;/li&gt;
  &lt;li&gt;Do not lose call in shape inquiry on function reference&lt;/li&gt;
  &lt;li&gt;Fix the documentation on how to build flang&lt;/li&gt;
  &lt;li&gt;Add tests for converting arrays and refs to arrays&lt;/li&gt;
  &lt;li&gt;Make the “flang” wrapper script check the Bash version&lt;/li&gt;
  &lt;li&gt;Fix handling of space between # and name in preprocessor stringification&lt;/li&gt;
  &lt;li&gt;RESHAPE(PAD=) can be arbitrary array rank&lt;/li&gt;
  &lt;li&gt;Any type can appear in a structure constructor for an unlimited polymorphic allocatable component&lt;/li&gt;
  &lt;li&gt;Implement semantics for DEC STRUCTURE/RECORD&lt;/li&gt;
  &lt;li&gt;Extension: initialization of LOGICAL with INTEGER &amp;amp; vice versa&lt;/li&gt;
  &lt;li&gt;Allow initialization in blank COMMON&lt;/li&gt;
  &lt;li&gt;Support extension intrinsic function variations on ABS&lt;/li&gt;
  &lt;li&gt;Allow pointers to non-sequence types in sequence types&lt;/li&gt;
  &lt;li&gt;“CFI” types for Fortran REAL and COMPLEX kinds 2, 3, 10, 16&lt;/li&gt;
  &lt;li&gt;Legacy extension: non-character formats&lt;/li&gt;
  &lt;li&gt;Signal runtime error on WRITE after ENDFILE&lt;/li&gt;
  &lt;li&gt;Don’t blank-fill remaining lines in internal output&lt;/li&gt;
  &lt;li&gt;Accept ENTRY names in generic interfaces&lt;/li&gt;
  &lt;li&gt;Support substring references in NAMELIST input&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes are recorded and available upon request &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;. Please contact Alexis Perry-Holby at aperry@lanl.gov for document access.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Compiling &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1638&quot;&gt;stdlib: Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;AINT&lt;/code&gt; intrinsic Procedure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1644&quot;&gt;Draft: Sprint Bug fixing to compile stdlib with LFortran&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Addition of ASR Optimization Passes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1647&quot;&gt;Added pass for converting division to multiplication operation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1649&quot;&gt;Adding LLVM backend for flip sign&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;libasr&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1620&quot;&gt;Move more header files into libasr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1621&quot;&gt;Move exception.h to libasr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1622&quot;&gt;Move string_utils.h/cpp to libasr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1623&quot;&gt;Move location.h to libasr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1624&quot;&gt;Move stacktrace.h/cpp to libasr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1625&quot;&gt;Move colors.h and asr_scopes.h to libasr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1626&quot;&gt;Move bwriter.h and modfile.h to libasr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1627&quot;&gt;Move config.h to libasr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1628&quot;&gt;CI: do not run parent cmake in libasr test&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1629&quot;&gt;Split serialization.h/cpp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1630&quot;&gt;Nullify in ASR, LLVM, scalar types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1631&quot;&gt;Remove unused SymbolTable::get_hash()&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1632&quot;&gt;Separate evaluators into LFortran and libasr parts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1633&quot;&gt;utils.h and parser.h split into lfortran/libasr parts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1634&quot;&gt;Expose rl_path from libasr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1635&quot;&gt;CI: build libasr in an isolated directory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1636&quot;&gt;Use the libasr’s CMakeLists in LFortran’s one&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1645&quot;&gt;Refactored &lt;code class=&quot;highlighter-rouge&quot;&gt;libasr/pass&lt;/code&gt; framework and some bug fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Miscellaneous&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1639&quot;&gt;fixes for windows compilation (defining NOMINMAX), installation-instructions for Windows/Visual Studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1643&quot;&gt;Update gitignore&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1646&quot;&gt;Update ASR from LPython&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1648&quot;&gt;Abstracting out, visit_Program, visit_Subroutine, visit_Function, state variables from passes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1637&quot;&gt;Draft: Add a test for pywrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1640&quot;&gt;Fix order deps ordered&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/1641&quot;&gt;link to static zlib to avoid runtime dependency&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/certik&quot;&gt;Ondřej Čertík&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/czgdp18071&quot;&gt;Gagandeep Singh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/dpoe&quot;&gt;Dominic Poerio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/tobias-loew&quot;&gt;Tobias Loew&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/Thirumalai-Shaktivel&quot;&gt;Thirumalai Shaktivel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking for new contributors. Please do not hesitate to contact us if you are interested. We will help you get up to speed.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;fpm has a new documentation website hosted at
&lt;a href=&quot;https://fpm.fortran-lang.org/&quot;&gt;fpm.fortran-lang.org&lt;/a&gt;.
This website will provide user-oriented tutorials and how-to guides, as well
as developer-oriented reference documents and specifications.
We welcome all contributions to the fpm documentation, including translations
to other languages.
Please visit the &lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fpm-docs repo&lt;/a&gt; to
get started.&lt;/li&gt;
  &lt;li&gt;We had our 22st Fortran Monthly call on January 17.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/93AObg7HsqM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fortran-lang/fpm-docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/test-drive&quot;&gt;fortran-lang/test-drive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;January 01 2022&quot; data-enddate=&quot;February 01 2022&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: January 2022</title>
        <link href="https://fortran-lang.org/newsletter/2022/01/01/Fortran-Newsletter-January-2022/"/>
        <updated>2022-01-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2022/01/01/Fortran-Newsletter-January-2022</id>
        <content type="html">&lt;p&gt;Happy New Year and welcome to the January 2022 edition of the monthly Fortran 
newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;Here’s what’s new and ongoing in the fortran-lang.org repo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/349&quot;&gt;#349&lt;/a&gt;:
Newsletter draft for December 2021&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/350&quot;&gt;#350&lt;/a&gt;:
Updated CaNS item so that it shows the version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/353&quot;&gt;#353&lt;/a&gt;:
Add MCST LCC C, C++ and Fortran compiler&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/351&quot;&gt;#351&lt;/a&gt;:
Use HEAD to reference default branch&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/355&quot;&gt;#355&lt;/a&gt;:
2021 review article draft&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/356&quot;&gt;#356&lt;/a&gt; (WIP):
Adding Fortran Error Handler to packages index&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/347&quot;&gt;#347&lt;/a&gt; (WIP):
Fortran Intrinsics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt;
if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt;
for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/500&quot;&gt;#500&lt;/a&gt;:
Selection algorithms&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/586&quot;&gt;#586&lt;/a&gt;:
Update of stdlib_stats.md&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/581&quot;&gt;#581&lt;/a&gt;:
Add routines for saving/loading arrays in npy format&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/590&quot;&gt;#590&lt;/a&gt;:
Update changelog&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/588&quot;&gt;#588&lt;/a&gt;:
Error on no tests in CTest&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/585&quot;&gt;#585&lt;/a&gt;:
stdlib_selection: correction of typos and addition of some checks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/591&quot;&gt;#591&lt;/a&gt;:
Fix compilation errors with makefiles due to command-line variable assignments&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt;:
Probability Distribution and Statistical Functions – Normal Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/584&quot;&gt;#584&lt;/a&gt;:
Replace the call to sort by select in stdlib_stats_median&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/593&quot;&gt;#593&lt;/a&gt;:
Probability Distribution and Statistical Functions – Uniform Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/594&quot;&gt;#594&lt;/a&gt;:
Minor update to makefile installation instructions&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/596&quot;&gt;#596&lt;/a&gt;:
Rename references to default branch&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/600&quot;&gt;#600&lt;/a&gt;:
Fix iomsg allocation in save_npy&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/488&quot;&gt;#488&lt;/a&gt;:
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;is_close&lt;/code&gt; routines.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/597&quot;&gt;#597&lt;/a&gt;:
Add getline to read whole line from formatted unit&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/498&quot;&gt;#498&lt;/a&gt;:
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;arg/argd/argpi&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/603&quot;&gt;#603&lt;/a&gt;:
Implement trueloc/falseloc&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/573&quot;&gt;#573&lt;/a&gt;:
Revised Hash functions incorporating changes in the main Stdlib repository.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/609&quot;&gt;#609&lt;/a&gt;:
Consistent spec titles&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/610&quot;&gt;#610&lt;/a&gt;:
Fixed tables in stdlib_hash_procedures.md&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/499&quot;&gt;#499&lt;/a&gt;:
[stdlib_linalg] matrix property checks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/613&quot;&gt;#613&lt;/a&gt;:
Ignore hash testing binaries and logs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-1&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/611&quot;&gt;#611&lt;/a&gt; (WIP):
Hash maps&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/605&quot;&gt;#605&lt;/a&gt; (WIP):
[stdlib_math] Add function &lt;code class=&quot;highlighter-rouge&quot;&gt;diff&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/604&quot;&gt;#604&lt;/a&gt; (WIP):
Add get_argument, get_variable and set_variable&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/580&quot;&gt;#580&lt;/a&gt; (WIP):
Add terminal and color escape sequences&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/552&quot;&gt;#552&lt;/a&gt; (WIP):
fixed bug in stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/536&quot;&gt;#536&lt;/a&gt; (WIP):
Fix conversion warnings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/520&quot;&gt;#520&lt;/a&gt; (WIP):
[stdlib_io] add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display variable values formatted).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/517&quot;&gt;#517&lt;/a&gt; (WIP):
adding SPEC_TEMPLATE.md #504&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/514&quot;&gt;#514&lt;/a&gt; (WIP):
pop, drop &amp;amp; get with basic range feature for stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Exponential Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/634&quot;&gt;#634&lt;/a&gt;:
Better extraction of the Fortran compiler from the MPI wrapper&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-2&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/642&quot;&gt;#642&lt;/a&gt; (WIP):
Replace polymorphic assignment with move_alloc&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/630&quot;&gt;#630&lt;/a&gt; (WIP):
allow backfilling of current directory in fpm-new subcommand&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/622&quot;&gt;#622&lt;/a&gt; (WIP):
Cleanup the backend output&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/608&quot;&gt;#608&lt;/a&gt; (WIP):
–env switch lets you specify the prefix of the compiler-related environment variables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://fpm.fortran-lang.org/en/tutorial&quot;&gt;fpm packaging guide&lt;/a&gt;
to learn how to build your package with fpm, and the &lt;a href=&quot;https://fpm.fortran-lang.org/en/spec/manifest.html&quot;&gt;manifest reference&lt;/a&gt;
to learn what are all the things that you can specify in the fpm.toml file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;FIR
    &lt;ul&gt;
      &lt;li&gt;Add fir.box_isarray, fir.box_isptr and fir.box_isalloc conversion.&lt;/li&gt;
      &lt;li&gt;Add !fir.vector type conversion&lt;/li&gt;
      &lt;li&gt;Add type conversion for &lt;code class=&quot;highlighter-rouge&quot;&gt;fir.boxchar&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Add !fir.alloca conversion&lt;/li&gt;
      &lt;li&gt;Add placeholder conversion pattern for disptach operations&lt;/li&gt;
      &lt;li&gt;Add fir.select_case conversion&lt;/li&gt;
      &lt;li&gt;Add !fir.field type conversion&lt;/li&gt;
      &lt;li&gt;Transform &lt;code class=&quot;highlighter-rouge&quot;&gt;IsPresentOpConversion&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;AbsentOpConversion&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Add type conversion for FIR heap type&lt;/li&gt;
      &lt;li&gt;Add type conversion for FIR integer kind&lt;/li&gt;
      &lt;li&gt;Add !fir.len type conversion&lt;/li&gt;
      &lt;li&gt;Transform &lt;code class=&quot;highlighter-rouge&quot;&gt;fir.emboxchar&lt;/code&gt; to a sequence of LLVM MLIR&lt;/li&gt;
      &lt;li&gt;Add fir.select_type conversion placeholder&lt;/li&gt;
      &lt;li&gt;Remove extra return in SelectTypeOpConversion&lt;/li&gt;
      &lt;li&gt;Transform &lt;code class=&quot;highlighter-rouge&quot;&gt;fir.unboxchar&lt;/code&gt; to a sequence of LLVM MLIR&lt;/li&gt;
      &lt;li&gt;Add fir.global_len conversion placeholder&lt;/li&gt;
      &lt;li&gt;Add the FIR LLVMPointer Type&lt;/li&gt;
      &lt;li&gt;Add fir.cmpc conversion&lt;/li&gt;
      &lt;li&gt;Add fir.gentypedesc conversion&lt;/li&gt;
      &lt;li&gt;Transform &lt;code class=&quot;highlighter-rouge&quot;&gt;fir.boxchar_len&lt;/code&gt; to a sequence of LLVM MLIR&lt;/li&gt;
      &lt;li&gt;Add missing &lt;code class=&quot;highlighter-rouge&quot;&gt;HasParent&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;fir_DTEntryOp&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Add fir.string_lit conversion&lt;/li&gt;
      &lt;li&gt;Add conversion patterns for slice, shape, shapeshift and shift ops&lt;/li&gt;
      &lt;li&gt;Add fir.box_tdesc conversion&lt;/li&gt;
      &lt;li&gt;!fir.tdesc type conversion&lt;/li&gt;
      &lt;li&gt;Add fir.constc conversion&lt;/li&gt;
      &lt;li&gt;Add fir.embox conversion&lt;/li&gt;
      &lt;li&gt;Notify conversion failure for Proc ops, types&lt;/li&gt;
      &lt;li&gt;Add tests for mlir::ComplexType conversion&lt;/li&gt;
      &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;fir.end&lt;/code&gt; conversion placeholder&lt;/li&gt;
      &lt;li&gt;Transform &lt;code class=&quot;highlighter-rouge&quot;&gt;fir.field_index&lt;/code&gt; to a sequence of LLVM MLIR&lt;/li&gt;
      &lt;li&gt;Add a factory class for creating Complex Ops&lt;/li&gt;
      &lt;li&gt;Add fir.no_reassoc conversion&lt;/li&gt;
      &lt;li&gt;Set !fir.len_param_index conversion to unimplemented&lt;/li&gt;
      &lt;li&gt;Add base for runtime builder unittests&lt;/li&gt;
      &lt;li&gt;Add fir transformational intrinsic builder&lt;/li&gt;
      &lt;li&gt;Add assignment runtime API builder&lt;/li&gt;
      &lt;li&gt;Add data flow optimization pass&lt;/li&gt;
      &lt;li&gt;Add array value copy pass&lt;/li&gt;
      &lt;li&gt;Add fir reduction builder&lt;/li&gt;
      &lt;li&gt;Add fir numeric intrinsic runtime call builder&lt;/li&gt;
      &lt;li&gt;Add fircg.ext_embox conversion&lt;/li&gt;
      &lt;li&gt;Add fir derived type runtime builder&lt;/li&gt;
      &lt;li&gt;Add fir character builder&lt;/li&gt;
      &lt;li&gt;Add fircg.ext_array_coor conversion&lt;/li&gt;
      &lt;li&gt;Upstream conversion of the XRebox Op&lt;/li&gt;
      &lt;li&gt;Convert fir.allocmem and fir.freemem operations to calls to malloc and free, respectively&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Runtime
    &lt;ul&gt;
      &lt;li&gt;Fix vector cshift runtime with non zero lower bounds&lt;/li&gt;
      &lt;li&gt;Respect NO_STOP_MESSAGE=1 in runtime&lt;/li&gt;
      &lt;li&gt;Runtime performance improvements to real formatted input&lt;/li&gt;
      &lt;li&gt;Allow write after non advancing read in IO runtime&lt;/li&gt;
      &lt;li&gt;Fix reversed comparison in RESHAPE() runtime&lt;/li&gt;
      &lt;li&gt;Define &amp;amp; implement a lowering support API IsContiguous() in runtime&lt;/li&gt;
      &lt;li&gt;Don’t close stderr in runtime (fixes STOP output)&lt;/li&gt;
      &lt;li&gt;Return arrays in Transfer runtime with SIZE argument&lt;/li&gt;
      &lt;li&gt;Fix INQUIRE(FILE=,NAME=)&lt;/li&gt;
      &lt;li&gt;Add ragged array runtime functions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Allow exterior branch to outermost WHERE construct statement&lt;/li&gt;
  &lt;li&gt;Fix ORDER= argument to RESHAPE&lt;/li&gt;
  &lt;li&gt;Fix rounding edge case in F output editing&lt;/li&gt;
  &lt;li&gt;Handle ENTRY names in IsPureProcedure() predicate&lt;/li&gt;
  &lt;li&gt;Allow implicit procedure pointers to associate with explicit procedures&lt;/li&gt;
  &lt;li&gt;Fix a bug in INQUIRE(IOLENGTH=) output&lt;/li&gt;
  &lt;li&gt;Remove default argument from function template specialization&lt;/li&gt;
  &lt;li&gt;Check ArrayRef base for contiguity in IsSimplyContiguousHelper&lt;/li&gt;
  &lt;li&gt;Deal with negative character lengths in semantics&lt;/li&gt;
  &lt;li&gt;Fix INQUIRE(PAD=) and (POSITION=) for predefined units&lt;/li&gt;
  &lt;li&gt;Add a semantics test for co_sum&lt;/li&gt;
  &lt;li&gt;Fix off-by-one results from folding MAXEXPONENT and MINEXPONENT&lt;/li&gt;
  &lt;li&gt;Skip &lt;code class=&quot;highlighter-rouge&quot;&gt;Fortran STOP:&lt;/code&gt; before message when NO_STOP_MESSAGE is set&lt;/li&gt;
  &lt;li&gt;Fix printing of constc and parsing of  #fir.real&lt;/li&gt;
  &lt;li&gt;Predefine unit 0 connected to stderr&lt;/li&gt;
  &lt;li&gt;Add -fno-automatic, refine IsSaved()&lt;/li&gt;
  &lt;li&gt;Correct the argument keyword for AIMAG(Z=…)&lt;/li&gt;
  &lt;li&gt;Inclusive language: remove instances of master&lt;/li&gt;
  &lt;li&gt;Return true in IsSymplyContiguous for allocatables&lt;/li&gt;
  &lt;li&gt;Fix usage &amp;amp; catch errors for MAX/MIN with keyword= arguments&lt;/li&gt;
  &lt;li&gt;Re-fold bounds expressions in DATA implied DO loops&lt;/li&gt;
  &lt;li&gt;Correct INQUIRE(POSITION= &amp;amp; PAD=)&lt;/li&gt;
  &lt;li&gt;Rearrange prototype &amp;amp; code placement of IsCoarray()&lt;/li&gt;
  &lt;li&gt;Replace notifyMatchFailure with TODO hard failures&lt;/li&gt;
  &lt;li&gt;TargetRewrite: Rewrite fir.address_of(func)&lt;/li&gt;
  &lt;li&gt;Fix folding of EXPONENT() intrinsic function&lt;/li&gt;
  &lt;li&gt;OPEN(RECL=) handling for sequential formatted I/O&lt;/li&gt;
  &lt;li&gt;Avoid potential deadlock in CloseAll()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes are recorded and available upon request &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;. Please contact Alexis Perry-Holby at aperry@lanl.gov for document access.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Beginning of refactoring of ASR (Abstract Semantic Representation) into a standalone library&lt;/li&gt;
  &lt;li&gt;New intrinsics: mvbits, bge, bgt, ble, blt, ibits&lt;/li&gt;
  &lt;li&gt;generic procedure resolution fixes&lt;/li&gt;
  &lt;li&gt;FreeBSD fixes&lt;/li&gt;
  &lt;li&gt;Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;.xor.&lt;/code&gt; (LFortran as well as GFortran extension)&lt;/li&gt;
  &lt;li&gt;Fixes to large integers (BigInt) handling&lt;/li&gt;
  &lt;li&gt;Added support for &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;final&lt;/code&gt; attributes in derived types/classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following people contributed code in December 2021: Ondřej Čertík, Gagandeep Singh, Harris Snyder&lt;/p&gt;

&lt;p&gt;We are looking for new contributors. Please do not hesitate to contact us if
you are interested. We will help you get up to speed.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;fpm has a new documentation website hosted at
&lt;a href=&quot;https://fpm.fortran-lang.org/&quot;&gt;fpm.fortran-lang.org&lt;/a&gt;.
This website will provide user-oriented tutorials and how-to guides, as well
as developer-oriented reference documents and specifications.
We welcome all contributions to the fpm documentation, including translations
to other languages.
Please visit the &lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fpm-docs repo&lt;/a&gt; to
get started.&lt;/li&gt;
  &lt;li&gt;We had our 21st Fortran Monthly call on December 14.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/NSvL2yrefH8&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
  &lt;li&gt;We also wrote a review of the Fortran-lang projects in 2021. Read it
&lt;a href=&quot;/pr/418/newsletter/2021/12/29/Fortran-lang-2021-in-review/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fortran-lang/fpm-docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/test-drive&quot;&gt;fortran-lang/test-drive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;December 01 2021&quot; data-enddate=&quot;January 01 2022&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran-lang: 2021 in review</title>
        <link href="https://fortran-lang.org/newsletter/2021/12/29/Fortran-lang-2021-in-review/"/>
        <updated>2021-12-29T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/12/29/Fortran-lang-2021-in-review</id>
        <content type="html">&lt;p&gt;With another year behind us, let’s review the progress that the
Fortran-lang community has made.
If you’re new to Fortran-lang, here’s a quick intro:
We’re an open source community that aims to develop modern Fortran tooling and
nurture a rich ecosystem of libraries, as well as to provide a friendly,
helpful, and inclusive space for newcomers and experienced Fortran programmers
to work together.
We started in late 2019 and have been going ever since.
If you’re first discovering (or re-discovering) Fortran through this article,
welcome, and we hope it inspires you to try Fortran for one of your projects.
In this article we summarize new developments from 2021,
from flagship and new projects to community development and outreach.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;standard-library-stdlib&quot;&gt;Standard Library (stdlib)&lt;/h2&gt;

&lt;p&gt;To date, &lt;a href=&quot;https://github.com/fortran-lang/stdlib/graphs/contributors&quot;&gt;33 people&lt;/a&gt;
have contributed code to stdlib, and more than 100 people have participated in
discussions.
More than a dozen new modules have been added in 2021:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_array&lt;/code&gt;: Provides &lt;code class=&quot;highlighter-rouge&quot;&gt;trueloc&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;falseloc&lt;/code&gt; which allow you
to index an array based on a logical condition in a functional style&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_hash&lt;/code&gt;: Provides many hash algorithms, 32- and 64-bit alike&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_math&lt;/code&gt;: Provides a number of common mathematical functions&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_random&lt;/code&gt;: Pseudo-random integer number generation&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_selection&lt;/code&gt;: Selection procedures for selecting elements from an array
given a desired range&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_sorting&lt;/code&gt;: Sorting procedures based on Rust’s sorting algorithm and
introsort by David Musser&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_specialfunctions&lt;/code&gt;: Provides the Legendre function and its derivative
in support of the Gaussian quadrature procedures&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution_normal&lt;/code&gt;: Functions to sample values from a normal
distribution&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution_uniform&lt;/code&gt;: Functions to sample values from a uniform
distribution&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_string_type&lt;/code&gt;: Provides a &lt;code class=&quot;highlighter-rouge&quot;&gt;string_type&lt;/code&gt; derived type that alleviates
some limitations of the variable-length &lt;code class=&quot;highlighter-rouge&quot;&gt;character&lt;/code&gt; variables. &lt;code class=&quot;highlighter-rouge&quot;&gt;string_type&lt;/code&gt;
is compatible with all intrinsic procedures that operate on &lt;code class=&quot;highlighter-rouge&quot;&gt;character&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stringlist_type&lt;/code&gt;: A derived type that is a 1-dimensional list of
strings&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_strings&lt;/code&gt;: Provides a number of inquiry and manipulation procedures that
complement the intrinsic set&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_version&lt;/code&gt;: Allows querying the version of the stdlib library build&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;which brings us to a total of 23 modules in stdlib.
You can read about these modules in more detail on the
&lt;a href=&quot;https://stdlib.fortran-lang.org&quot;&gt;stdlib API docs website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Besides the new modules, procedures, and derived types, there have been a few
key improvements in terms of stdlib delivery:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You can now use stdlib as a dependency in your fpm projects,
see &lt;a href=&quot;https://github.com/fortran-lang/stdlib#build-with-fortran-langfpm&quot;&gt;here&lt;/a&gt;.
This significantly lowers the bar for getting started with stdlib.&lt;/li&gt;
  &lt;li&gt;We had our first stdlib release (0.1.0) on October 4. As of now we don’t have
a set release schedule, and plan to publish a new release when there is
significant new functionality.
As stdlib matures and becomes more widely used, we expect releases to become
more frequent.&lt;/li&gt;
  &lt;li&gt;We now maintain a
  &lt;a href=&quot;https://github.com/fortran-lang/stdlib/blob/HEAD/CHANGELOG.md&quot;&gt;change log&lt;/a&gt; where every change to the API is documented.
  This is a useful document to reference when you want to know what’s been
  added to the stdlib since the latest release.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you haven’t tried stdlib yet, please do and let us know what you think
and how we can improve it.
Our vision for stdlib is to provide basic utilities that most Fortran projects use,
as well as wider numerical capabilities with the scope of NumPy and SciPy.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager-fpm&quot;&gt;Fortran Package Manager (fpm)&lt;/h2&gt;

&lt;p&gt;Fortran Package Manager (fpm) is the package manager and build system for
Fortran.
Its key goal is to make developing, distributing, and reusing Fortran
libraries and applications as easy and as fun as possible.
In 2020, the big change for fpm was the transition from the prototype
implemented in Haskell to a pure Fortran implementation.
Fpm has since been used in increasingly more and ever larger Fortran projects.&lt;/p&gt;

&lt;p&gt;To date, &lt;a href=&quot;https://github.com/fortran-lang/fpm/graphs/contributors&quot;&gt;22 people&lt;/a&gt;
have contributed code to fpm.
In 2021 fpm has advanced from v0.1.3 to v0.5.0.
Key additions this year include (release version in parentheses):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CLI arguments for linker, archiver, and C compiler (0.5.0)&lt;/li&gt;
  &lt;li&gt;Support for MPI and LFortran (0.4.0)&lt;/li&gt;
  &lt;li&gt;Support for installed library modules via &lt;code class=&quot;highlighter-rouge&quot;&gt;external-modules&lt;/code&gt; in the manifest
(0.3.0)&lt;/li&gt;
  &lt;li&gt;Automatic discovery of manifest files in parent directories (0.3.0)&lt;/li&gt;
  &lt;li&gt;Support for reading package version from file (0.3.0)&lt;/li&gt;
  &lt;li&gt;Support for include directories (0.2.0)&lt;/li&gt;
  &lt;li&gt;Support for &lt;code class=&quot;highlighter-rouge&quot;&gt;--flag&lt;/code&gt; CLI option to specify compiler flags (0.2.0)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm build --show-model&lt;/code&gt; displays the internal representation of a package
(0.1.4)&lt;/li&gt;
  &lt;li&gt;Allow hyphen in new package names (0.1.4)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm new&lt;/code&gt; now supports &lt;code class=&quot;highlighter-rouge&quot;&gt;--full&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--bare&lt;/code&gt; to specify level of scaffolding
(0.1.4)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out also these fpm plugins:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/brocolis/fpm-search&quot;&gt;fpm-search&lt;/a&gt;:
Adds the &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm search&lt;/code&gt; command for searching for registered fpm packages from
the command line.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/urbanjost/fpm-man&quot;&gt;fpm-man&lt;/a&gt;:
Adds the &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm man&lt;/code&gt; command for displaying man-style help pages about Fortran
intrinsics and other language features.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the time of writing, there are almost 200 projects now using fpm.
If you haven’t tried fpm yet, please do!
It has truly been a game-changing tool for many of us.&lt;/p&gt;

&lt;p&gt;We have many ideas that we want to pursue, such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First-class integration with other package managers such as Spack and Conda&lt;/li&gt;
  &lt;li&gt;First-class integration with build systems like CMake and Meson&lt;/li&gt;
  &lt;li&gt;Improving &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fpm’s package registry&lt;/a&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are always looking for new contributors.
If any of these projects interest you, please join us.&lt;/p&gt;

&lt;h2 id=&quot;lfortran&quot;&gt;LFortran&lt;/h2&gt;

&lt;center&gt;
&lt;a href=&quot;https://lfortran.org&quot;&gt;
&lt;img src=&quot;/pr/418/assets/img/Fortran-lang-2021-in-review/lfortran-logo-300x300.png&quot; /&gt;
&lt;/a&gt;
&lt;/center&gt;

&lt;p&gt;Though not technically a Fortran-lang project,
&lt;a href=&quot;https://lfortran.org&quot;&gt;LFortran&lt;/a&gt; has been growing close to the Fortran-lang
community and projects largely thanks to its creator and lead developer 
&lt;a href=&quot;https://github.com/certik&quot;&gt;Ondřej Čertík&lt;/a&gt; also being one of the founding
members of Fortran-lang.
LFortran has been developing rapidly this year and was released as a
&lt;a href=&quot;https://lfortran.org/blog/2021/09/lfortran-minimum-viable-product-mvp/&quot;&gt;Minimum Viable Product (MVP)&lt;/a&gt; in September.
LFortran currently parses all of Fortran 2018 and compiles a significant
subset of the language.
16 people have contributed code so far, and many more have reported bugs or participated in discussions.
If you haven’t tried LFortran yet, please do and let us know how it can best
improve for your use case.
You can help speed up LFortran’s development by contributing code and/or
documentation directly, or by donating funds to the project via
&lt;a href=&quot;https://numfocus.org/project/lfortran&quot;&gt;NumFOCUS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Follow LFortran on Twitter at &lt;a href=&quot;https://twitter.com/lfortranorg&quot;&gt;@lfortranorg&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;fortran-langorg-discourse-and-social-media&quot;&gt;fortran-lang.org, Discourse, and social media&lt;/h2&gt;

&lt;p&gt;A major addition to the Fortran website this year is the
&lt;a href=&quot;https://fortran-lang.org/learn/best_practices&quot;&gt;Fortran Best Practices mini-book&lt;/a&gt;.
This is a port and an update to the well-known
&lt;a href=&quot;https://www.fortran90.org&quot;&gt;fortran90.org&lt;/a&gt; by
&lt;a href=&quot;https://github.com/certik&quot;&gt;Ondřej Čertík&lt;/a&gt;.
It provides a plethora of tips on how to write simple and idiomatic Fortran
for numerical tasks, and how to avoid some common gotchas.
Give it a read and let us know how it can be improved.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Fortran Discourse&lt;/a&gt; is as active
as ever, with new users joining daily.
There are currently 338 active users out of a total of 537 registered users.
The Fortran Discourse is a great place to ask for help with Fortran code, post
a Fortran job opening, and discuss anything Fortran-related.&lt;/p&gt;

&lt;p&gt;We also continue to release the monthly newsletter where we
document the progress month-by-month, as well as post about any notable events
in the Fortran world.
This newsletter is a great way to stay up to date with Fortran-lang.
If you’re also on Twitter, follow our account
&lt;a href=&quot;https://twitter.com/fortranlang&quot;&gt;@fortranlang&lt;/a&gt; for daily bite-size news and
updates, as well as the new &lt;a href=&quot;https://twitter.com/FortranTip&quot;&gt;@FortranTip&lt;/a&gt;
account, managed by &lt;a href=&quot;https://github.com/beliavsky&quot;&gt;Beliavsky&lt;/a&gt;, which brings
daily Fortran tips to your Twitter feed.&lt;/p&gt;

&lt;p&gt;Finally, we meet on monthly video calls to discuss issues and topics related to all
Fortran-lang projects.
The calls are advertised on Fortran Discourse and are open to everyone.
Don’t hesitate to join the call to meet other Fortran-lang participants and take part
in different discussions.&lt;/p&gt;
&lt;h2 id=&quot;new-projects&quot;&gt;New projects&lt;/h2&gt;

&lt;p&gt;In addition to the flagship projects summarized above, a few new projects
started or were adopted by Fortran-lang this year.&lt;/p&gt;

&lt;h3 id=&quot;fftpack&quot;&gt;fftpack&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fftpack&lt;/a&gt; is a classic collection of
subroutines to perform the Fast Fourier Transform on real and complex data.
It is based on the classic
&lt;a href=&quot;http://www.netlib.org/fftpack/&quot;&gt;FFTPACK library from Netlib&lt;/a&gt;.
fftpack was adopted by Fortran-lang in an effort to provide:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A community-maintained FFT library&lt;/li&gt;
  &lt;li&gt;Bug fixes to the existing codebase&lt;/li&gt;
  &lt;li&gt;Modern interfaces on top of the existing API&lt;/li&gt;
  &lt;li&gt;fpm package for easy use as a dependency.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;test-drive&quot;&gt;test-drive&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/test-drive&quot;&gt;Test-drive&lt;/a&gt; is a simple and 
easy-to-use testing framework developed by
&lt;a href=&quot;https://github.com/awvwgk&quot;&gt;Sebastian Ehlert&lt;/a&gt;.
It follows a simple functional style to collect and run your tests in parallel
and print a minimal and clean diagnostic printout to the standard output. 
Test-drive is currently used by both stdlib and fpm for their own test suites.
Give test-drive a test drive for your next Fortran project!&lt;/p&gt;

&lt;h3 id=&quot;fpm-docs&quot;&gt;fpm-docs&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fpm-docs&lt;/a&gt; is a brand new user
documentation website for fpm, developed by
&lt;a href=&quot;https://github.com/awvwgk&quot;&gt;Sebastian Ehlert&lt;/a&gt;.
Its key aim is to provide community-maintained documentation across four
target audiences/use cases:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt;: for learning how to use fpm for Fortran development&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How-to guides&lt;/strong&gt;: recipes for specific and concrete problems&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Design documents&lt;/strong&gt;: resources that document the design of various aspects of
fpm&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;References&lt;/strong&gt;: specification documents of fpm components&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;
&lt;a href=&quot;https://fpm.fortran-lang.org&quot;&gt;
&lt;img src=&quot;/pr/418/assets/img/Fortran-lang-2021-in-review/fpm-docs.png&quot; width=&quot;100%&quot; /&gt;
&lt;/a&gt;
&lt;/center&gt;

&lt;p&gt;As the fpm user docs are now hosted at
&lt;a href=&quot;https://fpm.fortran-lang.org&quot;&gt;fpm.fortran-lang.org&lt;/a&gt;, the API docs are now
located at &lt;a href=&quot;https://fortran-lang.github.io/fpm/&quot;&gt;fortran-lang.github.io/fpm/&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;google-summer-of-code-2021&quot;&gt;Google Summer of Code 2021&lt;/h2&gt;

&lt;p&gt;2021 has been the first year for Fortran-lang to participate in the
&lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code&lt;/a&gt; program.
Together with NumFOCUS and LFortran, Fortran-lang had six students who worked on a 
variety of projects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Aman-Godara&quot;&gt;Aman Godara&lt;/a&gt; (Improving strings in stdlib)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chetankarwa&quot;&gt;Chetan Karwa&lt;/a&gt; (Linked lists in stdlib)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/czgdp1807&quot;&gt;Gagandeep Singh&lt;/a&gt; (Arrays and allocatables in LFortran)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kubajj&quot;&gt;Jakub Jelínek&lt;/a&gt; (Compiler arguments in fpm)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rgoswami.me/&quot;&gt;Rohit Goswami&lt;/a&gt; (Compiling dftatom with LFortran)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Thirumalai-Shaktivel&quot;&gt;Thirumalai Shaktivel&lt;/a&gt; (AST generation in LFortran)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can read in more detail about their projects
&lt;a href=&quot;https://summerofcode.withgoogle.com/archive/2021/organizations/6542461173760000&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A big thank you to all students, mentors, and administrators, for their great
work, and of course, to the Google Summer of Code program for making
possible for students to participate.&lt;/p&gt;

&lt;p&gt;We plan to apply for Google Summer of Code in 2022 as well.
The program is no longer limited to students and anybody 18 or older can apply
to work on an open source project and get paid for it.
If you’re interested participating in the program in 2022 with Fortran-lang,
don’t hesitate to contact us and we’ll guide you toward applying.&lt;/p&gt;

&lt;h2 id=&quot;conferences-and-papers&quot;&gt;Conferences and papers&lt;/h2&gt;

&lt;h3 id=&quot;fortrancon-2021&quot;&gt;FortranCon 2021&lt;/h3&gt;

&lt;p&gt;Like in 2020, the Fortran event of this year was
&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/14/&quot;&gt;FortranCon 2021&lt;/a&gt;, the international
Fortran conference, held on September 23-24.
The keynote speaker this year was &lt;a href=&quot;https://github.com/rouson&quot;&gt;Damian Rouson&lt;/a&gt;,
the head of the
&lt;a href=&quot;https://crd.lbl.gov/divisions/amcr/computer-science-amcr/class/&quot;&gt;Computer Languages and Systems Software (CLaSS)&lt;/a&gt;
group at the Lawrence Berkeley National Lab. 
Fortran-lang had a dedicated session (a Fortran-lang minisymposium) on the
second day of the conference, with the talks about specific Fortran-lang
projects as well as the Google Summer of Code student presentations.
FortranCon was hosted at the University of Zurich (UZH), and organized by
&lt;a href=&quot;https://github.com/dev-zero&quot;&gt;Tiziano Müller&lt;/a&gt; from UZH and
&lt;a href=&quot;https://github.com/alazzaro&quot;&gt;Alfio Lazzaro&lt;/a&gt; from Hewlett-Packard Enterprise.
You can watch all FortranCon 2021 talks &lt;a href=&quot;https://www.youtube.com/playlist?list=PLeKbr7eYHjt5UaV9zQtY24oEbne9_uFni&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;packagingcon-2021&quot;&gt;PackagingCon 2021&lt;/h3&gt;

&lt;p&gt;Another big event for Fortran-lang was
&lt;a href=&quot;https://packaging-con.org/&quot;&gt;PackagingCon 2021&lt;/a&gt;, a conference dedicated to
package management software and its community of developers.
&lt;a href=&quot;https://github.com/awvwgk&quot;&gt;Sebastian Ehlert&lt;/a&gt; presented fpm–you can watch the
recording below:&lt;/p&gt;

&lt;center&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/YG8zEM1lAVM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/center&gt;

&lt;h3 id=&quot;papers&quot;&gt;Papers&lt;/h3&gt;

&lt;p&gt;This year two papers have been written about Fortran-lang projects.
The first paper documents the motivation and goals of
Fortran-lang: “Toward Modern Fortran Tooling and a Thriving Developer
Community” by Milan Curcic, Ondřej Čertík, Brad Richardson, Sebastian Ehlert,
Laurence Kedward, Arjen Markus, Ivan Pribec, and Jérémie Vandenplas
(&lt;a href=&quot;https://arxiv.org/abs/2109.07382&quot;&gt;https://arxiv.org/abs/2109.07382&lt;/a&gt;).&lt;/p&gt;

&lt;center&gt;
&lt;a href=&quot;https://arxiv.org/abs/2109.07382&quot;&gt;
&lt;img width=&quot;600&quot; src=&quot;/pr/418/assets/img/Fortran-lang-2021-in-review/fortran-lang-paper.png&quot; /&gt;
&lt;/a&gt;
&lt;/center&gt;

&lt;p&gt;If Fortran-lang has been helpful in your work and if you want to cite this paper,
here’s the citation info:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bibtex&quot;&gt;@article{curcic2021toward,
  title={Toward Modern Fortran Tooling and a Thriving Developer Community},
  author={Curcic, Milan and
          {\v{C}}ert{\'\i}k, Ond{\v{r}}ej and
          Richardson, Brad and
          Ehlert, Sebastian and
          Kedward, Laurence and
          Markus, Arjen and
          Pribec, Ivan and
          Vandenplas, J{\'e}r{\'e}mie},
  journal={arXiv preprint arXiv:2109.07382},
  year={2021}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have also submitted a paper draft to IEEE’s
&lt;a href=&quot;https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=5992&quot;&gt;Computing in Science &amp;amp; Engineering (CiSE)&lt;/a&gt;
journal, titled “The State of Fortran” and led by
&lt;a href=&quot;https://github.com/lkedward&quot;&gt;Laurence Kedward&lt;/a&gt;.
For this paper, we have
&lt;a href=&quot;https://fortran-lang.discourse.group/t/fortran-lang-community-paper/1232&quot;&gt;publicly invited on Discourse&lt;/a&gt;
anybody in the Fortran-lang community to participate.
Once published, this will be another paper that you can cite.
Stay tuned for its publication.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;2021 is behind us as another productive year.&lt;/li&gt;
  &lt;li&gt;Fortran-lang flagship projects such as
&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;stdlib&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fpm&lt;/a&gt;,
&lt;a href=&quot;https://fortran-lang.org&quot;&gt;fortran-lang.org&lt;/a&gt;, and
&lt;a href=&quot;https://lfortran.org&quot;&gt;LFortran&lt;/a&gt; continue to grow and gain traction.&lt;/li&gt;
  &lt;li&gt;New Fortran-lang projects include
&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fftpack&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/test-drive&quot;&gt;test-drive&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/fortran-lang/fpm-docs&quot;&gt;fpm-docs&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Fortran-lang participated in the
&lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code&lt;/a&gt; program for
the first time, and had 6 students working on projects across stdlib, fpm,
and LFortran.&lt;/li&gt;
  &lt;li&gt;We had several presentations of Fortran-lang projects at
&lt;a href=&quot;https://www.youtube.com/playlist?list=PLeKbr7eYHjt5UaV9zQtY24oEbne9_uFni&quot;&gt;FortranCon 2021&lt;/a&gt; and
&lt;a href=&quot;https://www.youtube.com/watch?v=YG8zEM1lAVM&quot;&gt;PackagingCon 2021&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;New Fortran-lang &lt;a href=&quot;https://arxiv.org/abs/2109.07382&quot;&gt;paper&lt;/a&gt; is out and 
another is in review.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thanks&quot;&gt;Thanks&lt;/h2&gt;

&lt;p&gt;We thank all people who contributed to Fortran-lang projects and discussions
on GitHub, Fortran Discourse, Fortran-lang mailing list, Twitter, and 
elsewhere.
It wouldn’t have been possible without you all.&lt;/p&gt;

&lt;div class=&quot;language-fortran highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fortran_lang_2021&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: December 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/12/01/Fortran-Newsletter-December-2021/"/>
        <updated>2021-12-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/12/01/Fortran-Newsletter-December-2021</id>
        <content type="html">&lt;p&gt;Welcome to the December 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;Here’s what’s new and ongoing in the fortran-lang.org repo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/348&quot;&gt;#348&lt;/a&gt;:
Fix typo in author field&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/347&quot;&gt;#347&lt;/a&gt; (WIP):
Fortran Intrinsics&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Internationalization for fortran-lang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt;
if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt;
for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/558&quot;&gt;#558&lt;/a&gt;:
Pin specific fpm version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/556&quot;&gt;#556&lt;/a&gt;:
fix some FORD links&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/494&quot;&gt;#494&lt;/a&gt;:
Add testing module to allow better structuring of test suites&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/562&quot;&gt;#562&lt;/a&gt;:
Minor update &lt;code class=&quot;highlighter-rouge&quot;&gt;pure/elemental&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;string_type&lt;/code&gt; module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/565&quot;&gt;#565&lt;/a&gt;:
Make support for quadruple precision optional&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/566&quot;&gt;#566&lt;/a&gt;:
Create a call for reviewers pull request template&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/578&quot;&gt;#578&lt;/a&gt;:
Update error in case fypp preprocessor is not found&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/579&quot;&gt;#579&lt;/a&gt;:
Add module for handling version information of stdlib&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-1&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/581&quot;&gt;#581&lt;/a&gt; (WIP):
Add routines for saving/loading arrays in npy format&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/580&quot;&gt;#580&lt;/a&gt; (WIP):
Add terminal and color escape sequences&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/573&quot;&gt;#573&lt;/a&gt; (WIP):
Revised Hash functions incorporating changes in the main Stdlib repository.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/552&quot;&gt;#552&lt;/a&gt; (WIP):
fixed bug in stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/536&quot;&gt;#536&lt;/a&gt; (WIP):
Fix conversion warnings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/520&quot;&gt;#520&lt;/a&gt; (WIP):
[stdlib_io] add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display variable values formatted).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/517&quot;&gt;#517&lt;/a&gt; (WIP):
adding SPEC_TEMPLATE.md #504&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/514&quot;&gt;#514&lt;/a&gt; (WIP):
pop, drop &amp;amp; get with basic range feature for stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/500&quot;&gt;#500&lt;/a&gt; (WIP):
Selection algorithms&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/499&quot;&gt;#499&lt;/a&gt; (WIP):
[stdlib_linalg] matrix property checks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;arg/argd/argpi&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/488&quot;&gt;#488&lt;/a&gt; (WIP):
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;is_close&lt;/code&gt; routines.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/353&quot;&gt;#353&lt;/a&gt; (WIP):
Initial checkin for a module for tolerant comparison of reals&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Exponential Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Normal Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/releases/tag/v0.5.0&quot;&gt;v0.5.0&lt;/a&gt;:
Alpha release update&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/598&quot;&gt;#598&lt;/a&gt;:
Update README.md compiler, archiver, &amp;amp; link flags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/569&quot;&gt;#569&lt;/a&gt;:
Add workflow for continuous delivery&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/602&quot;&gt;#602&lt;/a&gt;:
fix(fpm_compiler): intel windows release flag was incorrect&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/607&quot;&gt;#607&lt;/a&gt;:
Repair –list option and correct obsolete descriptions of the –list option&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/612&quot;&gt;#612&lt;/a&gt;:
Fix modules listing (for install)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/613&quot;&gt;#613&lt;/a&gt;:
Add: critical section to mkdir in backend&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/616&quot;&gt;#616&lt;/a&gt;:
Add: workflow to make installer on push and release&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/614&quot;&gt;#614&lt;/a&gt;:
Bump version to 0.5.0&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm/pull/7&quot;&gt;setup-fpm#7&lt;/a&gt;:
Fix Latest Option&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-2&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/622&quot;&gt;#622&lt;/a&gt; (WIP):
Cleanup the backend output&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/608&quot;&gt;#608&lt;/a&gt; (WIP):
–env switch lets you specify the prefix of the compiler-related environment variables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/main/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt;
to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/main/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt;
to learn what are all the things that you can specify in the fpm.toml file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;Use the ultimate symbol in a call to the IsPointer function&lt;/li&gt;
      &lt;li&gt;Add parsing/sema/serialization for ‘bind’ clause.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;FIR
    &lt;ul&gt;
      &lt;li&gt;Add base of the FIR to LLVM IR pass&lt;/li&gt;
      &lt;li&gt;Add various FIR to LLVM IR conversion patterns:
        &lt;ul&gt;
          &lt;li&gt;fir.unreachable&lt;/li&gt;
          &lt;li&gt;fir.insert_on_range&lt;/li&gt;
          &lt;li&gt;fir.zero_bits&lt;/li&gt;
          &lt;li&gt;fir.select and fir.select_rank&lt;/li&gt;
          &lt;li&gt;fir.extract_value and fir.insert_value&lt;/li&gt;
          &lt;li&gt;types - fir.box, fir.logical, fir.char, fir.ptr&lt;/li&gt;
          &lt;li&gt;fir.box_rank, fir.box_addr, fir.box_dims, fir.box_elesize&lt;/li&gt;
          &lt;li&gt;fir.convert&lt;/li&gt;
          &lt;li&gt;fir.call&lt;/li&gt;
          &lt;li&gt;fir.store and fir.load&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Add substr information to fircg.ext_embox and fircg.ext_rebox operations&lt;/li&gt;
      &lt;li&gt;Use notifyMatchFailure in fir.zero_bits conversion&lt;/li&gt;
      &lt;li&gt;Restrict array type on fir.insert_on_range&lt;/li&gt;
      &lt;li&gt;Add test for FIR types conversion&lt;/li&gt;
      &lt;li&gt;Use contralized values for indexing box&lt;/li&gt;
      &lt;li&gt;Add complex operations conversion from FIR LLVM IR&lt;/li&gt;
      &lt;li&gt;Add TargetRewrite pass and TargetRewrite: Rewrite COMPLEX values&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Runtime
    &lt;ul&gt;
      &lt;li&gt;Read environment variables directly&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;flang-omp-report
    &lt;ul&gt;
      &lt;li&gt;Removed unnecessary comments in flang-omp-report plugin tests&lt;/li&gt;
      &lt;li&gt;Remove the loop workarounds for nowait clause&lt;/li&gt;
      &lt;li&gt;Add flang-omp-report summarising script&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Checks for pointers to intrinsic functions&lt;/li&gt;
  &lt;li&gt;Fold SPREAD&lt;/li&gt;
  &lt;li&gt;Improve error message for misuse of NULL(mold) as data statement constant&lt;/li&gt;
  &lt;li&gt;Fix crash on “call system_clock(count_max=j)”&lt;/li&gt;
  &lt;li&gt;Fix combined folding of FINDLOC/MAXLOC/MINLOC&lt;/li&gt;
  &lt;li&gt;Implement GET_ENVIRONMENT_VARIABLE(VALUE)&lt;/li&gt;
  &lt;li&gt;Remove builder that takes SSA value instead of Attribute on ExtractValueOp, InsetValueOp, and InsertOnRangeOp&lt;/li&gt;
  &lt;li&gt;Remove getModel&amp;lt;Fortran::ISO::CFI_dim_t&amp;gt; in DescriptorModel.h&lt;/li&gt;
  &lt;li&gt;Set the addendum when establishing pointer section in descriptor&lt;/li&gt;
  &lt;li&gt;Fix error in characteristics check at procedure pointer assignment&lt;/li&gt;
  &lt;li&gt;Initial parsing/sema for ‘align’ clause&lt;/li&gt;
  &lt;li&gt;Don’t reference non-invariant symbols in shape expressions&lt;/li&gt;
  &lt;li&gt;Make subscript list argument a nullable pointer&lt;/li&gt;
  &lt;li&gt;Distinguish error/warning cases for bad jumps into constructs&lt;/li&gt;
  &lt;li&gt;Fix folding of EPSILON()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes are recorded and available upon request &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;. Please contact Alexis Perry-Holby at aperry@lanl.gov for document access.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;32 Merge Requests merged in November 2021&lt;/li&gt;
  &lt;li&gt;Support for same name interface and subroutine/function&lt;/li&gt;
  &lt;li&gt;Compile-time evaluation for bit intrinsics&lt;/li&gt;
  &lt;li&gt;Implement the &lt;code class=&quot;highlighter-rouge&quot;&gt;repeat&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;shape&lt;/code&gt; intrinsics&lt;/li&gt;
  &lt;li&gt;Variadic support for &lt;code class=&quot;highlighter-rouge&quot;&gt;min&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;max&lt;/code&gt; intrinsics&lt;/li&gt;
  &lt;li&gt;Implement the scalar &lt;code class=&quot;highlighter-rouge&quot;&gt;random_number&lt;/code&gt; function&lt;/li&gt;
  &lt;li&gt;Fixes and improved error message for &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;write&lt;/code&gt; statements&lt;/li&gt;
  &lt;li&gt;Support the &lt;code class=&quot;highlighter-rouge&quot;&gt;final&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;intrinsic&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt; attributes&lt;/li&gt;
  &lt;li&gt;Implement the &lt;code class=&quot;highlighter-rouge&quot;&gt;ieee_arithmetic&lt;/code&gt; intrinsic module&lt;/li&gt;
  &lt;li&gt;Support for the &lt;code class=&quot;highlighter-rouge&quot;&gt;abstract&lt;/code&gt; class&lt;/li&gt;
  &lt;li&gt;Support for &lt;code class=&quot;highlighter-rouge&quot;&gt;assignment(=)&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt; statement&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking for new contributors. Please do not hesitate to contact us if
you are interested. We will help you get up to speed.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Sebastian Ehlert presented the Fortran Package Manager at the PackagingCon 2021 conference.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/YG8zEM1lAVM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
  &lt;li&gt;Recordings of all FortranCon 2021 presentations are now available to view in
the &lt;a href=&quot;https://www.youtube.com/playlist?list=PLeKbr7eYHjt5UaV9zQtY24oEbne9_uFni&quot;&gt;FortranCon YouTube Channel&lt;/a&gt;.
Enjoy!&lt;/li&gt;
  &lt;li&gt;We had our 20th Fortran Monthly call on November 15.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/S2kKwmg8OjE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;November 01 2021&quot; data-enddate=&quot;November 30 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: November 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/11/01/Fortran-Newsletter-November-2021/"/>
        <updated>2021-11-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/11/01/Fortran-Newsletter-November-2021</id>
        <content type="html">&lt;p&gt;Welcome to the November 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had several updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/345&quot;&gt;#345&lt;/a&gt;:
Fix title in learning resources&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/341&quot;&gt;#341&lt;/a&gt;:
Add Cantera to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/329&quot;&gt;#329&lt;/a&gt;:
Quantum Information book, WSL GUI, and typos&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/340&quot;&gt;#340&lt;/a&gt;:
Minor fixes in Best Practices&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Internationalization for fortran-lang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt;
if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt;
for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/releases/tag/v0.1.0&quot;&gt;0.1.0&lt;/a&gt;:
Initial version of the Fortran standard library&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/543&quot;&gt;#543&lt;/a&gt;:
Fix string concat&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-1&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/554&quot;&gt;#554&lt;/a&gt; (WIP):
Hash functions&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/552&quot;&gt;#552&lt;/a&gt; (WIP):
Fix bug in stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/536&quot;&gt;#536&lt;/a&gt; (WIP):
Fix conversion warnings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/520&quot;&gt;#520&lt;/a&gt; (WIP):
[stdlib_io] add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt; (display your data).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/517&quot;&gt;#517&lt;/a&gt; (WIP):
adding SPEC_TEMPLATE.md&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/514&quot;&gt;#514&lt;/a&gt; (WIP):
pop, drop &amp;amp; get with basic range feature for stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/500&quot;&gt;#500&lt;/a&gt; (WIP):
Selection algorithms&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/499&quot;&gt;#499&lt;/a&gt; (WIP):
[stdlib_linalg] matrix property checks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;arg/argd/argpi&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/494&quot;&gt;#494&lt;/a&gt; (WIP):
Add testing module to allow better structuring of test suites&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/488&quot;&gt;#488&lt;/a&gt; (WIP):
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;is_close&lt;/code&gt; routines.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/353&quot;&gt;#353&lt;/a&gt; (WIP):
Initial checkin for a module for tolerant comparison of reals&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Exponential Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Normal Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/597&quot;&gt;#597&lt;/a&gt;:
Add LFortran optimization flag to release profile&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/595&quot;&gt;#595&lt;/a&gt;:
List names without suffix (mainly for Windows)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/590&quot;&gt;#590&lt;/a&gt;:
Change link command on Windows with &lt;code class=&quot;highlighter-rouge&quot;&gt;ifort&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;ifx&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/575&quot;&gt;#575&lt;/a&gt;:
Enable multiple build output directories&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/587&quot;&gt;#587&lt;/a&gt;:
Bootstrapping instructions version update&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-2&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/598&quot;&gt;#598&lt;/a&gt; (WIP):
Update README.md compiler, archiver, &amp;amp; link flags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/569&quot;&gt;#569&lt;/a&gt; (WIP):
Add workflow for continuous delivery&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/main/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt;
to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/main/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt;
to learn what are all the things that you can specify in the fpm.toml file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Runtime
    &lt;ul&gt;
      &lt;li&gt;Front-end and runtime support for CALL EXIT and ABORT&lt;/li&gt;
      &lt;li&gt;Fix formatted real input regression w/ spaces&lt;/li&gt;
      &lt;li&gt;Add runtime interface for GET_ENVIRONMENT_VARIABLE&lt;/li&gt;
      &lt;li&gt;More work on SYSTEM_CLOCK runtime API and implementation&lt;/li&gt;
      &lt;li&gt;Implement GET_ENVIRONMENT_VARIABLE(LENGTH)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;Added OpenMP 5.0 specification based semantic checks for sections construct and test case for simd construct&lt;/li&gt;
      &lt;li&gt;Added test case for OpenMP 5.0 specification based semantic checks for parallel sections construct&lt;/li&gt;
      &lt;li&gt;Added OpenMP 5.0 specification based semantic checks for CRITICAL construct name resolution&lt;/li&gt;
      &lt;li&gt;Checks for THREADPRIVATE and DECLARE TARGET Directives&lt;/li&gt;
      &lt;li&gt;Initial parsing/sema for append_args clause for ‘declare variant’&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;FIR
    &lt;ul&gt;
      &lt;li&gt;Add typeparams to fir.array_update, fir.array_fetch and fir.array_merge_store operations. Add optional slice operands to fir.array_merge_store op.&lt;/li&gt;
      &lt;li&gt;Updated various ops - fir.extract_value, fir.insert_value, fir.allocmem, fir.alloca, fir.field_index, fir.freemem, fir.store&lt;/li&gt;
      &lt;li&gt;Move the parsers, printers and builders from the TableGen file to the .cpp file&lt;/li&gt;
      &lt;li&gt;Update fir.alloca op - Add pinned attributes and specific builders&lt;/li&gt;
      &lt;li&gt;Add ops: fir.char_convert and fir.array_modify&lt;/li&gt;
      &lt;li&gt;Add passes: external name interop, affine promotion, affine demotion, character conversion, abstract result conversion, cfg conversion&lt;/li&gt;
      &lt;li&gt;Add fir.convert canonicalization patterns&lt;/li&gt;
      &lt;li&gt;Add the DoLoopHelper&lt;/li&gt;
      &lt;li&gt;Add IfBuilder and utility functions&lt;/li&gt;
      &lt;li&gt;Add FIRBuilder utility functions&lt;/li&gt;
      &lt;li&gt;Add character utility functions in FIRBuilder&lt;/li&gt;
      &lt;li&gt;Add Character helper&lt;/li&gt;
      &lt;li&gt;Add utility function to FIRBuilder and MutableBox&lt;/li&gt;
      &lt;li&gt;Add substring to fir.slice operation&lt;/li&gt;
      &lt;li&gt;Avoid slice with substr in fir.array_load, fir.array_coor and fir.array_merge_store&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Driver
    &lt;ul&gt;
      &lt;li&gt;Error if uuidgen is not installed&lt;/li&gt;
      &lt;li&gt;Fix erroneous &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Add actions that execute despite semantic errors&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;flang-omp-report
    &lt;ul&gt;
      &lt;li&gt;replace std::vector’s with llvm::SmallVector&lt;/li&gt;
      &lt;li&gt;Switch from std::string to StringRef (where possible)&lt;/li&gt;
      &lt;li&gt;replace std::map with llvm::DenseMap&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Make builtin types more easily accessible; use them&lt;/li&gt;
  &lt;li&gt;Fix test regression from SQRT folding&lt;/li&gt;
  &lt;li&gt;Fold FINDLOC, MAXLOC, MINLOC, LGE/LGT/LLE/LLT, BTEST intrinsic functions&lt;/li&gt;
  &lt;li&gt;Take into account SubprogramDetails in GetInterfaceSymbol&lt;/li&gt;
  &lt;li&gt;Add debug dump method to evaluate::Expr and semantics::Symbol&lt;/li&gt;
  &lt;li&gt;Add a wrapper for Fortran main program&lt;/li&gt;
  &lt;li&gt;Improve runtime interface with C99 complex&lt;/li&gt;
  &lt;li&gt;Better error recovery for missing THEN in ELSE IF&lt;/li&gt;
  &lt;li&gt;Define IEEE_SCALB, IEEE_NEXT_AFTER, IEEE_NEXT_DOWN, IEEE_NEXT_UP&lt;/li&gt;
  &lt;li&gt;Catch mismatched parentheses in prescanner&lt;/li&gt;
  &lt;li&gt;Error checking for IBCLR/IBSET and ISHFT/SHIFT[ALR]&lt;/li&gt;
  &lt;li&gt;Document behavior for nonspecified/ambiguous cases&lt;/li&gt;
  &lt;li&gt;Add two negative tests for needExternalNameMangling&lt;/li&gt;
  &lt;li&gt;Expunge bogus semantic check for ELEMENTAL without dummies&lt;/li&gt;
  &lt;li&gt;Admit NULL() in generic procedure resolution cases&lt;/li&gt;
  &lt;li&gt;Fix bogus folding error for ISHFT(x, negative)&lt;/li&gt;
  &lt;li&gt;Emit unformatted headers &amp;amp; footers even with RECL=&lt;/li&gt;
  &lt;li&gt;Enforce rest of semantic constraint C919&lt;/li&gt;
  &lt;li&gt;Extension to distinguish specific procedures&lt;/li&gt;
  &lt;li&gt;Support NAMELIST input of short arrays&lt;/li&gt;
  &lt;li&gt;Fix generic resolution case&lt;/li&gt;
  &lt;li&gt;Speed common runtime cases of DOT_PRODUCT &amp;amp; MATMUL&lt;/li&gt;
  &lt;li&gt;Fix crash on empty formatted external READs&lt;/li&gt;
  &lt;li&gt;Extension: allow tabs in output format strings&lt;/li&gt;
  &lt;li&gt;Fix DOT_PRODUCT for logical&lt;/li&gt;
  &lt;li&gt;Fix NAMELIST input bug with multiple subscript triplets&lt;/li&gt;
  &lt;li&gt;Support legacy usage of ‘A’ edit descriptors for integer &amp;amp; real&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes are recorded and available upon request &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;. Please contact Alexis Perry-Holby at aperry@lanl.gov for document access.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;155 Merge Requests merged in October 2021&lt;/li&gt;
  &lt;li&gt;AST to ASR transformation simplified and unified&lt;/li&gt;
  &lt;li&gt;Many new intrinsics added&lt;/li&gt;
  &lt;li&gt;Rust style error messages, add first warnings and style suggestions&lt;/li&gt;
  &lt;li&gt;Fixed bugs in location information&lt;/li&gt;
  &lt;li&gt;C preprocessor added&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking for new contributors. Please do not hesitate to contact us if
you are interested. We will help you get up to speed.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We have adopted two new Fortran-lang guidelines:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/.github/blob/main/GOVERNANCE.md&quot;&gt;Governance document&lt;/a&gt; that describes how Fortran-lang projects are managed&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://fortran-lang.discourse.group/t/welcome-to-discourse/7#administration-moderation-and-editing-3&quot;&gt;Administration, moderation, and editing guide&lt;/a&gt; for Fortran Discourse
Both documents are part of an effort to increase transparency between Fortran-lang administrators and the rest of the community.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The US Fortran Standards Committee (J3) held the meeting 225 October 18-27, 2021.
The meeting was virtual and on Mondays and Wednesdays only.
Discussions focused on resolving any outstanding issues to the Fortran 202X features.
Here are the links to the meeting &lt;a href=&quot;https://j3-fortran.org/doc/year/21/agenda225.txt&quot;&gt;agenda&lt;/a&gt;,
&lt;a href=&quot;https://j3-fortran.org/doc/year/21/minutes225.txt&quot;&gt;minutes&lt;/a&gt;,
and &lt;a href=&quot;https://j3-fortran.org/doc/meeting/225&quot;&gt;papers&lt;/a&gt;.
See also the &lt;a href=&quot;https://j3-fortran.org/doc/year/21/21-206.txt&quot;&gt;Fortran-lang and LFortran liaison report to J3&lt;/a&gt;
submitted by Ondřej Čertík and Milan Curcic.&lt;/li&gt;
  &lt;li&gt;We had our 19th Fortran Monthly call on October 19.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/4gOoEzMEh6g&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;October 01 2021&quot; data-enddate=&quot;October 31 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: October 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/10/01/Fortran-Newsletter-October-2021/"/>
        <updated>2021-10-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/10/01/Fortran-Newsletter-October-2021</id>
        <content type="html">&lt;p&gt;Welcome to the October 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had several updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/305&quot;&gt;#305&lt;/a&gt;:
September newsletter draft&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/300&quot;&gt;#300&lt;/a&gt;:
Add QCxMS to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/302&quot;&gt;#302&lt;/a&gt;:
Update Silverfrost compiler description.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/307&quot;&gt;#307&lt;/a&gt;:
Fixed typo&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/308&quot;&gt;#308&lt;/a&gt;:
remove excess ‘mpi’ tag from fortran2018-examples&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/246&quot;&gt;#246&lt;/a&gt;:
Transferring fortran90.org “Fortran Best Practices” into a mini-book&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/314&quot;&gt;#314&lt;/a&gt;:
grammar and spelling from issue #313&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/317&quot;&gt;#317&lt;/a&gt;:
more grammar, spelling, and rewording for Fortran Best Practices&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/324&quot;&gt;#324&lt;/a&gt;:
replaced “be found be found” with “be found”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/320&quot;&gt;#320&lt;/a&gt;:
Alternative approach to avoiding integer division&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/328&quot;&gt;#328&lt;/a&gt;:
Add incompact3d to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/333&quot;&gt;#333&lt;/a&gt;:
Add fparser to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/335&quot;&gt;#335&lt;/a&gt;:
Adding two more packages to the index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/334&quot;&gt;#334&lt;/a&gt;:
Add pFlogger to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/336&quot;&gt;#336&lt;/a&gt;:
One more package&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/329&quot;&gt;#329&lt;/a&gt; (WIP):
Quantum Information book, WSL GUI, and typos&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Draft: Internationalization for fortran-lang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt;
if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt;
for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/509&quot;&gt;#509&lt;/a&gt;:
fixed typo&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/503&quot;&gt;#503&lt;/a&gt;:
refactor documentation regarding consistency&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/511&quot;&gt;#511&lt;/a&gt;:
Correctly set CMAKE_INSTALL_MODULEDIR cache variable&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/513&quot;&gt;#513&lt;/a&gt;:
Update issue templates&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/523&quot;&gt;#523&lt;/a&gt;:
Rename config.yaml -&amp;gt; config.yml&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/508&quot;&gt;#508&lt;/a&gt;:
github-ci: add fpm support&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/475&quot;&gt;#475&lt;/a&gt;:
Generating sorting subroutines specific to &lt;code class=&quot;highlighter-rouge&quot;&gt;character&lt;/code&gt; type with fypp&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/525&quot;&gt;#525&lt;/a&gt;:
Add files generated by tests to gitignore&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/529&quot;&gt;#529&lt;/a&gt;:
Add maintainer entry to fpm manifest&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/530&quot;&gt;#530&lt;/a&gt;:
Make it clearer how the user can control compiler optimization&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/528&quot;&gt;#528&lt;/a&gt;:
Reduce redundancy caused by optional arguments&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example/pull/3&quot;&gt;#3&lt;/a&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib-cmake-example&lt;/code&gt;):
Add example integration with test-drive&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-1&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/543&quot;&gt;#543&lt;/a&gt; (WIP):
Fix string concat&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add function gcd&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/538&quot;&gt;#538&lt;/a&gt; (WIP):
Bump stdlib version to 0.1.0&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/537&quot;&gt;#537&lt;/a&gt; (WIP):
Add a changelog for the current features of stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/536&quot;&gt;#536&lt;/a&gt; (WIP):
Fix conversion warnings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/521&quot;&gt;#521&lt;/a&gt; (WIP):
Ensure module output directory is generated in configure stage&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/520&quot;&gt;#520&lt;/a&gt; (WIP):
[stdlib_io] add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display your data).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/517&quot;&gt;#517&lt;/a&gt; (WIP):
adding SPEC_TEMPLATE.md #504&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/514&quot;&gt;#514&lt;/a&gt; (WIP):
pop, drop &amp;amp; get with basic range feature for stringlist&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/500&quot;&gt;#500&lt;/a&gt; (WIP):
Selection algorithms&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/499&quot;&gt;#499&lt;/a&gt; (WIP):
[stdlib_linalg] matrix property checks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;arg/argd/argpi&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/494&quot;&gt;#494&lt;/a&gt; (WIP):
Add testing module to allow better structuring of test suites&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/488&quot;&gt;#488&lt;/a&gt; (WIP):
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;is_close&lt;/code&gt; routines.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/455&quot;&gt;#455&lt;/a&gt; (WIP):
stdlib_hash: waterhash algorithm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/452&quot;&gt;#452&lt;/a&gt; (WIP):
Implementation of a map data type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/353&quot;&gt;#353&lt;/a&gt; (WIP):
Initial checkin for a module for tolerant comparison of reals&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Exponential Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Normal Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Uniform Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/521&quot;&gt;#521&lt;/a&gt;:
expand tabs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/557&quot;&gt;#557&lt;/a&gt;:
Update installer script to update subprojects first&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/558&quot;&gt;#558&lt;/a&gt;:
Add issue templates&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/565&quot;&gt;#565&lt;/a&gt;:
Default branch renaming aftermath&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/562&quot;&gt;#562&lt;/a&gt;:
Add new distributions where fpm is available to README&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/563&quot;&gt;#563&lt;/a&gt;:
Add workflow to create single source fpm version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/564&quot;&gt;#564&lt;/a&gt;:
Separate upload stage in CI testing&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/572&quot;&gt;#572&lt;/a&gt;:
Build no tests by default&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/549&quot;&gt;#549&lt;/a&gt;:
Allow setting, archiver, C compiler flags and linker flags from commandline&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/578&quot;&gt;#578&lt;/a&gt;:
help text was truncated&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/579&quot;&gt;#579&lt;/a&gt;:
Fix dir not getting removed after testing fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/584&quot;&gt;#584&lt;/a&gt;:
Actually read environment variables&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-2&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/575&quot;&gt;#575&lt;/a&gt; (WIP):
Enable multiple build output directories&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/569&quot;&gt;#569&lt;/a&gt; (WIP):
Add workflow for continuous delivery&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt;
to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt;
to learn what are all the things that you can specify in the fpm.toml file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Driver and CMake integration:
    &lt;ul&gt;
      &lt;li&gt;flang-omp-report plugin - first full fledged frontend plugin has been contributed&lt;/li&gt;
      &lt;li&gt;CMake integration - waiting on a new PR&lt;/li&gt;
      &lt;li&gt;Code-generation work is ongoing - task list has been presented to the community for discussion and approval&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;FIR (Fortran IR - a dialect of MLIR):
    &lt;ul&gt;
      &lt;li&gt;Fortran 95 lowering and runtime support is nearing completion&lt;/li&gt;
      &lt;li&gt;Code upstreaming has begun again&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;Merged: Critical, collapse clause, Fixes for SNAP.&lt;/li&gt;
      &lt;li&gt;In review: Firstprivate, Ordered, MLIR definitions for a few target side constructs, semantic checks for atomic, critical, sections, simd&lt;/li&gt;
      &lt;li&gt;OpenMP 5.0 metadirective&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Runtime
    &lt;ul&gt;
      &lt;li&gt;Change complex type define in runtime for clang-cl&lt;/li&gt;
      &lt;li&gt;Implement READ(SIZE=) and INQUIRE(IOLENGTH=) in runtime&lt;/li&gt;
      &lt;li&gt;GET_COMMAND_ARGUMENT runtime implementation, handling the LENGTH, VALUE, STATUS and ERRMSG parameters.&lt;/li&gt;
      &lt;li&gt;COMMAND_ARGUMENT_COUNT runtime implementation&lt;/li&gt;
      &lt;li&gt;Add POSIX implementation for SYSTEM_CLOCK&lt;/li&gt;
      &lt;li&gt;Fix WRITE after BACKSPACE on variable-length file&lt;/li&gt;
      &lt;li&gt;Implement Posix version of DATE_AND_TIME runtime&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ported test scripts to Python, enables testing on Windows&lt;/li&gt;
  &lt;li&gt;More precise checks for NULL() operands&lt;/li&gt;
  &lt;li&gt;Enforce array conformance in actual arguments to ELEMENTALs&lt;/li&gt;
  &lt;li&gt;Constant folding for COUNT, SQRT, HYPOT, CABS, CSHIFT, EOSHIFT, PACK, UNPACK, and TRANSPOSE&lt;/li&gt;
  &lt;li&gt;Make this_image() an intrinsic function&lt;/li&gt;
  &lt;li&gt;Revamp C1502 checking of END INTERFACE [generic-spec]&lt;/li&gt;
  &lt;li&gt;Accept SIZE(assumed-rank, DIM=n)&lt;/li&gt;
  &lt;li&gt;Validate SIZE(x,DIM=n) dimension for assumed-size array x&lt;/li&gt;
  &lt;li&gt;Catch errors with intrinsic array inquiry functions&lt;/li&gt;
  &lt;li&gt;Correct overflow detection in folding of real-&amp;gt;integer conversions&lt;/li&gt;
  &lt;li&gt;Upgrade warning to error in case of PURE procedure&lt;/li&gt;
  &lt;li&gt;Enforce fixed form rules about END continuation&lt;/li&gt;
  &lt;li&gt;Enforce specification function rules on callee, not call&lt;/li&gt;
  &lt;li&gt;Catch error: base of DATA statement object can’t be a pointer&lt;/li&gt;
  &lt;li&gt;Represent parentheses around derived types&lt;/li&gt;
  &lt;li&gt;Enforce constraint: defined ass’t in WHERE must be elemental&lt;/li&gt;
  &lt;li&gt;Catch branching into FORALL/WHERE constructs&lt;/li&gt;
  &lt;li&gt;Implement semantic checks for ELEMENTAL subprograms&lt;/li&gt;
  &lt;li&gt;Signal EOR in non advancing IO and move to next record&lt;/li&gt;
  &lt;li&gt;Extension: reduced scope for some implied DO loop indices&lt;/li&gt;
  &lt;li&gt;Take result length into account in ApplyElementwise folding&lt;/li&gt;
  &lt;li&gt;Apply double precision KindCode in specific proc interface&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes are recorded and available upon request &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;. Please contact Alexis Perry-Holby at aperry@lanl.gov for document access.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;81
&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&amp;amp;state=merged&quot;&gt;merged&lt;/a&gt;
Merge Requests in September 2021&lt;/li&gt;
  &lt;li&gt;LFortran Minimum Viable Product (MVP) &lt;a href=&quot;https://lfortran.org/blog/2021/09/lfortran-minimum-viable-product-mvp/&quot;&gt;released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;LFortran 0.13.0, 0.13.1 and 0.14.0 released in September&lt;/li&gt;
  &lt;li&gt;The following people have contributed code to LFortran in September:
    &lt;ul&gt;
      &lt;li&gt;Ondřej Čertík&lt;/li&gt;
      &lt;li&gt;Gagandeep Singh&lt;/li&gt;
      &lt;li&gt;Carlos Une&lt;/li&gt;
      &lt;li&gt;Thirumalai Shaktivel&lt;/li&gt;
      &lt;li&gt;Harris M. Snyder&lt;/li&gt;
      &lt;li&gt;Sebastian Ehlert&lt;/li&gt;
      &lt;li&gt;Mengjia Lyu&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Many people have reported bugs (thank you all!)&lt;/li&gt;
  &lt;li&gt;Main features implemented in September:
    &lt;ul&gt;
      &lt;li&gt;Operator overloading (ASR, LLVM)&lt;/li&gt;
      &lt;li&gt;Goto (ASR, LLVM)&lt;/li&gt;
      &lt;li&gt;Runtime library improvements: &lt;code class=&quot;highlighter-rouge&quot;&gt;iand&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;len&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;trim&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;len_trim&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Interactive mode: get complex numbers, intrinsic functions working
(Windows, macOS, Linux)&lt;/li&gt;
      &lt;li&gt;New driver options: –fast, –symtab-only, –target&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking for new contributors. Please do not hesitate to contact us if
you are interested. We will help you get up to speed.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 16th Fortran Monthly call on September 22.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ssqjsdBmnqc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
  &lt;li&gt;The second international Fortran Conference (FortranCon) 2021 was held virtually on September 23-24
Video recordings of the talks will be made available soon.
For more information, visit the &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/14/&quot;&gt;FortranCon website&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;September 01 2021&quot; data-enddate=&quot;September 30 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: September 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/09/01/Fortran-Newsletter-September-2021/"/>
        <updated>2021-09-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/09/01/Fortran-Newsletter-September-2021</id>
        <content type="html">&lt;p&gt;Welcome to the September 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had several updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/303&quot;&gt;#303&lt;/a&gt;:
Add NJOY to package index&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/302&quot;&gt;#302&lt;/a&gt; (WIP):
Update Silverfrost compiler description.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/300&quot;&gt;#300&lt;/a&gt; (WIP):
Add QCxMS to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/246&quot;&gt;#246&lt;/a&gt; (WIP):
Transferring fortran90.org “Fortran Best Practices” into a mini-book&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Internationalization for fortran-lang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/467&quot;&gt;#467&lt;/a&gt;:
Implemented move_alloc for string_type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/470&quot;&gt;#470&lt;/a&gt;:
Revival string list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/481&quot;&gt;#481&lt;/a&gt;:
[stdlib_linalg] Update eye function.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/493&quot;&gt;#493&lt;/a&gt;:
Update copyright and remove old artifact&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/444&quot;&gt;#444&lt;/a&gt;:
Add format_string routine to format other types to strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/483&quot;&gt;#483&lt;/a&gt;:
Remove GCC Fortran MinGW 8.4.0 from known to work list&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-1&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/501&quot;&gt;#501&lt;/a&gt; (WIP):
Minor updates to README.md&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/500&quot;&gt;#500&lt;/a&gt; (WIP):
Selection algorithms&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/499&quot;&gt;#499&lt;/a&gt; (WIP):
[stdlib_linalg] matrix property checks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;arg/argd/argpi&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/494&quot;&gt;#494&lt;/a&gt; (WIP):
Add testing module to allow better structuring of test suites&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/491&quot;&gt;#491&lt;/a&gt; (WIP):
Stdlib linked list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/488&quot;&gt;#488&lt;/a&gt; (WIP):
[stdlib_math] add &lt;code class=&quot;highlighter-rouge&quot;&gt;is_close&lt;/code&gt; routines.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/478&quot;&gt;#478&lt;/a&gt; (WIP):
[stdlib_linalg] Add zeros, ones function.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/475&quot;&gt;#475&lt;/a&gt; (WIP):
Generating sorting subroutines specific to &lt;code class=&quot;highlighter-rouge&quot;&gt;character&lt;/code&gt; type with fypp&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/455&quot;&gt;#455&lt;/a&gt; (WIP):
stdlib_hash: waterhash algorithm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/452&quot;&gt;#452&lt;/a&gt; (WIP):
Implementation of a map data type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/445&quot;&gt;#445&lt;/a&gt; (WIP):
[stdlib_io] &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display your data)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/437&quot;&gt;#437&lt;/a&gt; (WIP):
[FPM] add fpm support&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/353&quot;&gt;#353&lt;/a&gt; (WIP):
Initial checkin for a module for tolerant comparison of reals&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Exponential Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Normal Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Uniform Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/releases/tag/v0.4.0&quot;&gt;Version 0.4.0&lt;/a&gt;:
Alpha release update&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/546&quot;&gt;#546&lt;/a&gt;:
Update version for release 0.4.0&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/548&quot;&gt;#548&lt;/a&gt;:
Fix build on MacOS/ARM64&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/527&quot;&gt;#527&lt;/a&gt;:
Add objects for handling compiler and archiver&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/536&quot;&gt;#536&lt;/a&gt;:
Always call &lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; in fpm new when backfilling&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/533&quot;&gt;#533&lt;/a&gt;:
Allow extra section in package manifest&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/528&quot;&gt;#528&lt;/a&gt;:
Generate &lt;code class=&quot;highlighter-rouge&quot;&gt;build/.gitignore&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-2&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/539&quot;&gt;#539&lt;/a&gt; (WIP):
Add parent packages into dependency tree&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/521&quot;&gt;#521&lt;/a&gt; (WIP):
Expand tabs in source parsing&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/506&quot;&gt;#506&lt;/a&gt; (WIP):
Initial implementation of implicit_none&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;fftpack&quot;&gt;FFTPACK&lt;/h2&gt;

&lt;p&gt;Zuo Zhihua (&lt;a href=&quot;https://github.com/zoziha&quot;&gt;@zoziha&lt;/a&gt;) and Ondřej Čertík (&lt;a href=&quot;https://github.com/certik&quot;&gt;@certik&lt;/a&gt;) started maintaining the public domain project FFTPACK under the Fortran-lang namespace.
The project is readily available for usage in with fpm.&lt;/p&gt;

&lt;p&gt;Here is what is new in FFTPACK:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack/pull/10&quot;&gt;#10&lt;/a&gt;:
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;(i)qct/dcosqi/dcosqf/dcosqb&lt;/code&gt; interfaces for quarter wave data.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack/pull/7&quot;&gt;#7&lt;/a&gt;:
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;dzffti/dzfftf/dzfftb&lt;/code&gt; interfaces&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack/pull/4&quot;&gt;#4&lt;/a&gt;:
Improve fft interface for &lt;code class=&quot;highlighter-rouge&quot;&gt;complex&lt;/code&gt; sequences: &lt;code class=&quot;highlighter-rouge&quot;&gt;(i)fft/zffti/zfftf/zfftb&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack/pull/6&quot;&gt;#6&lt;/a&gt;:
Add  &lt;code class=&quot;highlighter-rouge&quot;&gt;(i)rfft/dffti/dfftf/dfftb&lt;/code&gt; interface and ready to move to &lt;code class=&quot;highlighter-rouge&quot;&gt;fortran-lang&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack/pull/5&quot;&gt;#5&lt;/a&gt;:
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;fftshift/ifftshift&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack/pull/3&quot;&gt;#3&lt;/a&gt;:
Add CI: fpm.yml&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-progress-3&quot;&gt;Work in progress&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack/pull/11&quot;&gt;#11&lt;/a&gt; (WIP):
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;(i)dct/dcosti/dcost&lt;/code&gt; interfaces.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feedback and ideas for this project are welcome.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;flang&quot;&gt;Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Driver and CMake integration:
    &lt;ul&gt;
      &lt;li&gt;The new driver has replaced the old, hence f18 has been deleted.&lt;/li&gt;
      &lt;li&gt;flang-new (aka. the new driver) now drives the flang bash script before an external compiler is called.&lt;/li&gt;
      &lt;li&gt;Code-generation work is ongoing.&lt;/li&gt;
      &lt;li&gt;Work is now proceeding to enable CMake to recognize the compiler and set the appropriate options for build configurations.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;FIR (Fortran IR - a dialect of MLIR):
    &lt;ul&gt;
      &lt;li&gt;Fortran 95 lowering and runtime support is nearing completion, particularly of intrinsics&lt;/li&gt;
      &lt;li&gt;Code upstreaming will begin again in earnest once F95 is deemed complete&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;Nesting of region semantic checks&lt;/li&gt;
      &lt;li&gt;enter_data MLIR to LLVM IR lowering&lt;/li&gt;
      &lt;li&gt;Semantic checks for allocate directive&lt;/li&gt;
      &lt;li&gt;Lowering for various modifiers for the schedule clause&lt;/li&gt;
      &lt;li&gt;Pretty printer and parser for omp.target operation&lt;/li&gt;
      &lt;li&gt;Semantic checks for linear, nested barrier, allocate directive&lt;/li&gt;
      &lt;li&gt;Progress with firstprivate, critical, collapse, ordered, reduction&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Lift -Werror checks into local functions&lt;/li&gt;
  &lt;li&gt;Document the flang wrapper script&lt;/li&gt;
  &lt;li&gt;Fix the extent calculation when upper bounds are less than lower bounds&lt;/li&gt;
  &lt;li&gt;Fix list-directed plural repeated null values at end of record&lt;/li&gt;
  &lt;li&gt;Fix build failure on MacOS involving std::clock_t&lt;/li&gt;
  &lt;li&gt;Fix error messages on Windows.&lt;/li&gt;
  &lt;li&gt;Disable Plugins in out-of-tree builds&lt;/li&gt;
  &lt;li&gt;Correct off-by-one error in SET_EXPONENT&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes are recorded and available upon request &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;. Please contact Alexis Perry-Holby at aperry@lanl.gov for document access.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;168
&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&amp;amp;state=merged&quot;&gt;merged&lt;/a&gt;
Merge Requests in August 2021&lt;/li&gt;
  &lt;li&gt;The following people have contributed code to LFortran in August:
    &lt;ul&gt;
      &lt;li&gt;Ondřej Čertík&lt;/li&gt;
      &lt;li&gt;Thirumalai Shaktivel&lt;/li&gt;
      &lt;li&gt;Rohit Goswami&lt;/li&gt;
      &lt;li&gt;Gagandeep Singh&lt;/li&gt;
      &lt;li&gt;Andrew Best&lt;/li&gt;
      &lt;li&gt;Carlos Une&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sebastian Ehlert got LFortran working with fpm&lt;/li&gt;
  &lt;li&gt;Many people have reported bugs (thank you all!)&lt;/li&gt;
  &lt;li&gt;Our 3 Google Summer of Code (GSoC) students have successfully finished their
projects. Here are their final reports:
    &lt;ul&gt;
      &lt;li&gt;Gagandeep Singh: &lt;a href=&quot;https://czgdp1807.github.io/2021/08/16/z_final_report.html&quot;&gt;https://czgdp1807.github.io/2021/08/16/z_final_report.html&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Thirumalai Shaktivel: &lt;a href=&quot;https://gist.github.com/Thirumalai-Shaktivel/c2a1aaa5239e792e499eaa8942987519&quot;&gt;https://gist.github.com/Thirumalai-Shaktivel/c2a1aaa5239e792e499eaa8942987519&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Rohit Goswami: &lt;a href=&quot;https://rgoswami.me/posts/gsoc21-fin-reprot/&quot;&gt;https://rgoswami.me/posts/gsoc21-fin-reprot/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;lfortran-0120-was-released-on-august-15&quot;&gt;LFortran 0.12.0 was released on August 15&lt;/h4&gt;

&lt;p&gt;Changes since the last release.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fixed all issues in the parser that were reported (AST)
    &lt;ul&gt;
      &lt;li&gt;multiple loop single end do&lt;/li&gt;
      &lt;li&gt;arithmetic if&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Comments and empty lines are now represented in AST and formatted correctly (AST)&lt;/li&gt;
  &lt;li&gt;The formatter (&lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran fmt&lt;/code&gt;) now uses the minimal amount of parentheses in expressions&lt;/li&gt;
  &lt;li&gt;Initial fixed-form parser (AST)&lt;/li&gt;
  &lt;li&gt;Initial class support (ASR, LLVM)&lt;/li&gt;
  &lt;li&gt;Allocate / deallocate, allocatable arrays (ASR, LLVM)&lt;/li&gt;
  &lt;li&gt;Associate block (ASR, LLVM)&lt;/li&gt;
  &lt;li&gt;Runtime library refactoring (ASR, LLVM)
    &lt;ul&gt;
      &lt;li&gt;Split into builtin, pure and impure&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iso_fortran_env&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;iso_c_binding&lt;/code&gt; intrinsic modules added&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Compile time evaluation (ASR, LLVM)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Commits (&lt;code class=&quot;highlighter-rouge&quot;&gt;git shortlog -ns v0.11.0..v0.12.0&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   369  Ondřej Čertík
    85  Thirumalai Shaktivel
    79  Gagandeep Singh
    75  Rohit Goswami
    20  Andrew Best
     4  Dominic Poerio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;updates-in-master-since-the-last-release&quot;&gt;Updates in master since the last release:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;LFortran can now compile binaries on Windows&lt;/li&gt;
  &lt;li&gt;C interoperation works on all platforms (including Windows and MSVC)&lt;/li&gt;
  &lt;li&gt;Runtime library improvements
    &lt;ul&gt;
      &lt;li&gt;Complex intrinsics fixed on all platforms&lt;/li&gt;
      &lt;li&gt;All trigonometric functions now use the Fortran &lt;code class=&quot;highlighter-rouge&quot;&gt;impure&lt;/code&gt; interface in the runtime library&lt;/li&gt;
      &lt;li&gt;More intrinsics implemented&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Initial implementation of classes and methods&lt;/li&gt;
  &lt;li&gt;LFortran now works with &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; and compiles the hello world project and a few other example projects&lt;/li&gt;
  &lt;li&gt;Parser improvements: team and sync statements&lt;/li&gt;
  &lt;li&gt;Improved handling of character types as function arguments and return values&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking for new contributors, so if you are interested, please &lt;a href=&quot;https://lfortran.org/&quot;&gt;get in
touch with us&lt;/a&gt;! We would be happy to do a video call
with you to get you started.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 15th Fortran Monthly call on August 17.
You can watch the recording below:
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/496oZFYcA00&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;FortranCon 2021 will be held virtually from September 23-24, 2021.
Registration is free of charge and is due by September 15.
The second call for abstracts is due September 1.
For more information, visit the &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/14/&quot;&gt;FortranCon website&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Our Google Summer of Code program for 2021 is coming to a close.
Read about our students and their progress so far on Discourse: &lt;a href=&quot;https://fortran-lang.discourse.group/c/gsoc-2021/11&quot;&gt;https://fortran-lang.discourse.group/c/gsoc-2021/11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fftpack&quot;&gt;fortran-lang/fftpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;August 01 2021&quot; data-enddate=&quot;August 31 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: August 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/08/01/Fortran-Newsletter-August-2021/"/>
        <updated>2021-08-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/08/01/Fortran-Newsletter-August-2021</id>
        <content type="html">&lt;p&gt;Welcome to the August 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had several updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/281&quot;&gt;#281&lt;/a&gt;:
July newsletter&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/274&quot;&gt;#274&lt;/a&gt;:
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;convert_FORTRAN_case&lt;/code&gt; formatter to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/277&quot;&gt;#277&lt;/a&gt;:
Add projects for Fortran-lua interfacing to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/284&quot;&gt;#284&lt;/a&gt;:
PRs script updates&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/286&quot;&gt;#286&lt;/a&gt;:
Installation process for GFortran on OpenBSD&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/288&quot;&gt;#288&lt;/a&gt;:
Add Flatiron institute multipole libraries to the package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/289&quot;&gt;#289&lt;/a&gt;:
Small fix in packages index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/291&quot;&gt;#291&lt;/a&gt;:
Bump addressable from 2.7.0 to 2.8.0&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/293&quot;&gt;#293&lt;/a&gt;:
add Apogee and Edinburgh compilers&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/290&quot;&gt;#290&lt;/a&gt;:
Add arrayfire-fortran to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/294&quot;&gt;#294&lt;/a&gt;:
compilers: use more objective tone&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/296&quot;&gt;#296&lt;/a&gt;:
my software with at least 5 stars&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/297&quot;&gt;#297&lt;/a&gt;:
Fix insecure workflow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/246&quot;&gt;#246&lt;/a&gt; (WIP):
Transferring fortran90.org “Fortran Best Practices” into a mini-book&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Draft: Internationalization for fortran-lang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in stdlib:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/436&quot;&gt;#436&lt;/a&gt;:
implemented low-level &lt;code class=&quot;highlighter-rouge&quot;&gt;replace_all&lt;/code&gt; function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/454&quot;&gt;#454&lt;/a&gt;:
added &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_math&lt;/code&gt; to specs/index.md&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/453&quot;&gt;#453&lt;/a&gt;:
implemented count function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/441&quot;&gt;#441&lt;/a&gt;:
implemented pad function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/456&quot;&gt;#456&lt;/a&gt;:
slice function’s documentation made user friendly&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/459&quot;&gt;#459&lt;/a&gt;:
Fix CMake variable usage&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/420&quot;&gt;#420&lt;/a&gt;:
First implementation of real-valued linspace.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/468&quot;&gt;#468&lt;/a&gt;:
Update CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/469&quot;&gt;#469&lt;/a&gt;:
CMake: corrections and updates&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/426&quot;&gt;#426&lt;/a&gt;:
Addition of a subroutine to compute the median of array elements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/474&quot;&gt;#474&lt;/a&gt;:
Bug fix: Allocatable argument ‘x’ is not allocated #472&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/481&quot;&gt;#481&lt;/a&gt; (WIP):
[&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_linalg&lt;/code&gt;] Update eye function.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/480&quot;&gt;#480&lt;/a&gt; (WIP):
[&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_math&lt;/code&gt;] Add seq function.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/478&quot;&gt;#478&lt;/a&gt; (WIP):
[&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_linalg&lt;/code&gt;] Add zeros, ones, ex function.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/477&quot;&gt;#477&lt;/a&gt; (WIP):
[&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_linalg&lt;/code&gt;] Add empty function.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/475&quot;&gt;#475&lt;/a&gt; (WIP):
Generating sorting subroutines specific to character type with fypp&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/473&quot;&gt;#473&lt;/a&gt; (WIP):
Error stop improvements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/470&quot;&gt;#470&lt;/a&gt; (WIP):
Revival string list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/467&quot;&gt;#467&lt;/a&gt; (WIP):
implemented &lt;code class=&quot;highlighter-rouge&quot;&gt;move_alloc&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;string_type&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/455&quot;&gt;#455&lt;/a&gt; (WIP):
&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_hash&lt;/code&gt;: waterhash algorithm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/452&quot;&gt;#452&lt;/a&gt; (WIP):
Implementation of a map data type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/445&quot;&gt;#445&lt;/a&gt; (WIP):
[feature] &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt;(display your data) &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;format_string&lt;/code&gt;(format other type to string, see #444)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/444&quot;&gt;#444&lt;/a&gt; (WIP):
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;format_string&lt;/code&gt; routine to format other types to strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/437&quot;&gt;#437&lt;/a&gt; (WIP):
[FPM] add fpm support&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/353&quot;&gt;#353&lt;/a&gt; (WIP):
Initial checkin for a module for tolerant comparison of reals&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Exponential Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Normal Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Uniform Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/157&quot;&gt;#157&lt;/a&gt; (WIP):
Update CMAKE files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/507&quot;&gt;#507&lt;/a&gt;:
optimize file listing&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/511&quot;&gt;#511&lt;/a&gt;:
check name used for package, executable, test, or example&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/516&quot;&gt;#516&lt;/a&gt;:
initialize allocatable strings before using in a comparison&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/517&quot;&gt;#517&lt;/a&gt;:
Fix run&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/522&quot;&gt;#522&lt;/a&gt;:
remove warnings and fix truncated help text&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/523&quot;&gt;#523&lt;/a&gt;:
Fix compilation error in ifort&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/525&quot;&gt;#525&lt;/a&gt; (WIP):
proposal to close #525 by generating build/.gitignore&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/527&quot;&gt;#527&lt;/a&gt; (WIP):
Add objects for handling compiler and archiver&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/521&quot;&gt;#521&lt;/a&gt; (WIP):
expand tabs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/506&quot;&gt;#506&lt;/a&gt; (WIP):
Draft: initial implementation of &lt;code class=&quot;highlighter-rouge&quot;&gt;implicit_none&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Draft - Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;Updates for July 2021:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;90 &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&amp;amp;state=merged&quot;&gt;merged&lt;/a&gt; MRs, this month we have crossed 1000 total merged MRs, 12 total contributors&lt;/li&gt;
  &lt;li&gt;Parser: we asked the community to test it, several people have reported about
15 bugs, we have fixed all of them (AST)&lt;/li&gt;
  &lt;li&gt;Initial fixed form parser (AST)&lt;/li&gt;
  &lt;li&gt;Classes and class procedures (ASR, LLVM)&lt;/li&gt;
  &lt;li&gt;Many common array usage now works, including allocatable (ASR, LLVM)&lt;/li&gt;
  &lt;li&gt;Associate construct (ASR, LLVM)&lt;/li&gt;
  &lt;li&gt;Compile time evaluation of constant expressions (ASR)&lt;/li&gt;
  &lt;li&gt;7 people contributed code:
    &lt;ul&gt;
      &lt;li&gt;Ondřej Čertík&lt;/li&gt;
      &lt;li&gt;Thirumalai Shaktivel&lt;/li&gt;
      &lt;li&gt;Gagandeep Singh&lt;/li&gt;
      &lt;li&gt;Rohit Goswami&lt;/li&gt;
      &lt;li&gt;Dominic Poerio&lt;/li&gt;
      &lt;li&gt;Andrew Best&lt;/li&gt;
      &lt;li&gt;Sebastian Ehlert&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are looking for new contributors, so if you are interested, please &lt;a href=&quot;https://lfortran.org/&quot;&gt;get in
touch with us&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 14th Fortran Monthly call on July 20.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/9goA20JAHls&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;FortranCon 2021 will be held virtually from September 23-24, 2021.
Registration is free of charge and is due by September 15.
The first call for abstracts is due August 1, and the second is due September 1.
For more information, visit the &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/14/&quot;&gt;FortranCon website&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Work is well under way started for our Google Summer of Code program. Read about our students and their progress so far on Discourse: &lt;a href=&quot;https://fortran-lang.discourse.group/c/gsoc-2021/11&quot;&gt;https://fortran-lang.discourse.group/c/gsoc-2021/11&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;June 01 2021&quot; data-enddate=&quot;June 30 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: July 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/07/01/Fortran-Newsletter-July-2021/"/>
        <updated>2021-07-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/07/01/Fortran-Newsletter-July-2021</id>
        <content type="html">&lt;p&gt;Welcome to the July 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had several updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/276&quot;&gt;#276&lt;/a&gt;:
Add LATTE tight-binding molecular dynamics code to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/275&quot;&gt;#275&lt;/a&gt;:
Add crest program to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/255&quot;&gt;#255&lt;/a&gt;:
Quickstart edits&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/273&quot;&gt;#273&lt;/a&gt;:
Add the SNaC package to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/272&quot;&gt;#272&lt;/a&gt;:
Add QUICK to package index&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/277&quot;&gt;#277&lt;/a&gt; (WIP):
Add projects for Fortran-lua interfacing to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/274&quot;&gt;#274&lt;/a&gt; (WIP):
Add convert_FORTRAN_case formatter to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/246&quot;&gt;#246&lt;/a&gt; (WIP):
Transferring fortran90.org “Fortran Best Practices” into a mini-book&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Draft: Internationalization for fortran-lang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/313&quot;&gt;#313&lt;/a&gt;:
Legendre polynomials and gaussian quadrature&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/432&quot;&gt;#432&lt;/a&gt;:
Outer product&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/439&quot;&gt;#439&lt;/a&gt;:
Reduce time spent on sorting tests&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/440&quot;&gt;#440&lt;/a&gt;:
Make maximum rank an option&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/433&quot;&gt;#433&lt;/a&gt;:
Implemented low level find function for string matching&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/414&quot;&gt;#414&lt;/a&gt;:
Implemented intelligent slice functionality&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/428&quot;&gt;#428&lt;/a&gt;:
Fix issue with stdlib_sorting&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/419&quot;&gt;#419&lt;/a&gt;:
Allow modification of install directory for module files&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/430&quot;&gt;#430&lt;/a&gt;:
Remove support for GCC 7 and 8&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/424&quot;&gt;#424&lt;/a&gt;:
Add separate logical kind parameters&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/445&quot;&gt;#445&lt;/a&gt; (WIP):
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;disp&lt;/code&gt; function to display your data&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/444&quot;&gt;#444&lt;/a&gt; (WIP):
Add &lt;code class=&quot;highlighter-rouge&quot;&gt;format_string&lt;/code&gt; to format other type to string&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/441&quot;&gt;#441&lt;/a&gt; (WIP):
Implement pad function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/437&quot;&gt;#437&lt;/a&gt; (WIP):
[FPM] add fpm support&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/436&quot;&gt;#436&lt;/a&gt; (WIP):
Implement low-level replace_all function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/426&quot;&gt;#426&lt;/a&gt; (WIP):
Addition of a subroutine to compute the median of array elements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/420&quot;&gt;#420&lt;/a&gt; (WIP):
First implementation of real-valued linspace.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Sorting string’s characters according to their ASCII values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/353&quot;&gt;#353&lt;/a&gt; (WIP):
Initial checkin for a module for tolerant comparison of reals&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/333&quot;&gt;#333&lt;/a&gt; (WIP):
Provide abstract base class for a string object&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/311&quot;&gt;#311&lt;/a&gt; (WIP):
String list new&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/286&quot;&gt;#286&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Beta Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Gamma Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Exponential Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Normal Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP):
Probability Distribution and Statistical Functions – Uniform Distribution Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of COO / CSR sparse format&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/157&quot;&gt;#157&lt;/a&gt; (WIP):
Update CMAKE files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Alpha release update:&lt;/strong&gt; Last month saw the release of &lt;strong&gt;v0.3.0&lt;/strong&gt; for &lt;em&gt;fpm&lt;/em&gt; which includes a number of &lt;a href=&quot;https://github.com/fortran-lang/fpm/releases/tag/v0.3.0&quot;&gt;new features and bug fixes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is what is new in &lt;em&gt;fpm&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/504&quot;&gt;#504&lt;/a&gt;:
install.sh, README.md: Update version number, single source file extension&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/501&quot;&gt;#501&lt;/a&gt;:
Bump version for new release&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/491&quot;&gt;#491&lt;/a&gt;:
Catch execute_command_line errors and print useful messages&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/500&quot;&gt;#500&lt;/a&gt;:
Allow reading version number from file&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/497&quot;&gt;#497&lt;/a&gt;:
correct for equal sign in flag options to fix #495&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/449&quot;&gt;#449&lt;/a&gt;:
Response files with ar on Windows&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/490&quot;&gt;#490&lt;/a&gt;:
Minor fix to module parsing&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/489&quot;&gt;#489&lt;/a&gt;:
Redirect output when searching for archiver&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/484&quot;&gt;#484&lt;/a&gt;:
Add support for invoking simple plugins&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/483&quot;&gt;#483&lt;/a&gt;:
Allow fpm to change the working directory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP):
First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/505&quot;&gt;#505&lt;/a&gt; (WIP):
quiet mode for #502&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/498&quot;&gt;#498&lt;/a&gt; (WIP):
Draft - Compiler flags profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;49 Merge Requests &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&amp;amp;state=merged&quot;&gt;merged&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Highlights
    &lt;ul&gt;
      &lt;li&gt;Improvements to array support in the LLVM backend and at the ASR level:
array sections, allocatable arrays, and other improvements&lt;/li&gt;
      &lt;li&gt;Many parser fixes (&lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran fmt&lt;/code&gt; works on more projects): block data,
common block, equivalence, custom operator declaration, flush, critical and
event statements&lt;/li&gt;
      &lt;li&gt;More runtime functions: minval, maxval, real, sum, abs&lt;/li&gt;
      &lt;li&gt;Optional human readable mod files&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 13th Fortran Monthly call on June 15.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/YRVLAlQpE5g&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;Joint J3/WG5 (Fortran Standards Committees) meeting was held virtually from June 21-30 (Mondays and Wednesdays only). You can find all the papers that were discussed &lt;a href=&quot;https://j3-fortran.org/doc/meeting/224&quot;&gt;here&lt;/a&gt;. Highlights from the meeting:
    &lt;ul&gt;
      &lt;li&gt;Conditional expressions syntax for Fortran 202X (&lt;a href=&quot;https://j3-fortran.org/doc/year/21/21-157r2.txt&quot;&gt;paper&lt;/a&gt;).&lt;/li&gt;
      &lt;li&gt;Protected components specifications and syntax for Fortran 202X (&lt;a href=&quot;https://j3-fortran.org/doc/year/21/21-168.txt&quot;&gt;paper&lt;/a&gt;).&lt;/li&gt;
      &lt;li&gt;The generics feature planned for Fortran 202Y was discussed at depth (&lt;a href=&quot;https://j3-fortran.org/doc/year/21/21-144r4.txt&quot;&gt;paper&lt;/a&gt;).&lt;/li&gt;
      &lt;li&gt;Jeff Hammond (NVidia Corporation) is the new J3 member as a voting alternate to Bryce Adelstein-Lelbach.&lt;/li&gt;
      &lt;li&gt;Target year for Fortran 202X is 2023, subject to change.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;FortranCon 2021 will be held virtually from September 23-24, 2021. For more information, visit the &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/14/&quot;&gt;FortranCon website&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Work has started for our Google Summer of Code program. You read about our students and their progress so far on Discourse: &lt;a href=&quot;https://fortran-lang.discourse.group/c/gsoc-2021/11&quot;&gt;https://fortran-lang.discourse.group/c/gsoc-2021/11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;June 01 2021&quot; data-enddate=&quot;June 30 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: June 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/06/01/Fortran-Newsletter-June-2021/"/>
        <updated>2021-06-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/06/01/Fortran-Newsletter-June-2021</id>
        <content type="html">&lt;p&gt;Welcome to the June 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had several updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/269&quot;&gt;#269&lt;/a&gt;:
Grammar and typo fixes in main page and quickstart minibook&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/261&quot;&gt;#261&lt;/a&gt;:
Script for summarizing PRs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/259&quot;&gt;#259&lt;/a&gt;:
MapTran3D, RPNcalc, Gemini3D and Blocktran were added to the package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/253&quot;&gt;#253&lt;/a&gt;:
Fixed grammar in Easy to learn section&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/255&quot;&gt;#255&lt;/a&gt; (WIP):
Quickstart edits&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/246&quot;&gt;#246&lt;/a&gt; (WIP):
Transferring fortran90.org “Fortran Best Practise” into a mini-book&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Internationalization for fortran-lang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/417&quot;&gt;#417&lt;/a&gt;:
Add GCC-11 to workflow&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/415&quot;&gt;#415&lt;/a&gt;:
Corrected Ubuntu version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/407&quot;&gt;#407&lt;/a&gt;:
Changed to_title to to_sentence and implemented correct to_title&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/359&quot;&gt;#359&lt;/a&gt;:
Add general contributing guidelines to stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/355&quot;&gt;#355&lt;/a&gt;:
Implement clip function&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/420&quot;&gt;#420&lt;/a&gt; (WIP):
First implementation of real-valued linspace.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/419&quot;&gt;#419&lt;/a&gt; (WIP):
Allow modification of install directory for module files&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/418&quot;&gt;#418&lt;/a&gt; (WIP):
Improved support for NAG&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/414&quot;&gt;#414&lt;/a&gt; (WIP):
Implemented intelligent slice functionality&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/408&quot;&gt;#408&lt;/a&gt; (WIP):
Addition of the stdlib_sorting module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Add sort to stdlib_string_type module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/353&quot;&gt;#353&lt;/a&gt; (WIP):
Initial checkin for a module for tolerant comparison of reals&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/333&quot;&gt;#333&lt;/a&gt; (WIP):
Provide abstract base class for a string object&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/313&quot;&gt;#313&lt;/a&gt; (WIP):
Legendre polynomials and Gaussian quadrature&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/311&quot;&gt;#311&lt;/a&gt; (WIP):
Implementation of a module for handling lists of strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; modules.
It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of sparse matrices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here is what is new in &lt;em&gt;fpm&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/450&quot;&gt;#450&lt;/a&gt;:
Remove coarray flag from intel debug settings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/423&quot;&gt;#423&lt;/a&gt;:
Use default instead of master to reference the repository HEAD&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP):
First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/483&quot;&gt;#483&lt;/a&gt; (WIP):
Allow fpm to change the working directory&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/451&quot;&gt;#451&lt;/a&gt; (WIP):
Refactor: use objects to represent compilers and archiver&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/449&quot;&gt;#449&lt;/a&gt; (WIP):
Response files with ar on Windows&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/444&quot;&gt;#444&lt;/a&gt; (WIP):
Allow to find include files / modules in CPATH environment variable&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/364&quot;&gt;#364&lt;/a&gt; (WIP):
Plugin alpha version&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;39 Merge Requests &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&amp;amp;state=merged&quot;&gt;merged&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Features that can now be compiled (in the LLVM backend):
    &lt;ul&gt;
      &lt;li&gt;More nested functions and callbacks (the context is properly propagated)&lt;/li&gt;
      &lt;li&gt;Runtime: size, lbound, ubound&lt;/li&gt;
      &lt;li&gt;Return statement&lt;/li&gt;
      &lt;li&gt;More array operations and declarations&lt;/li&gt;
      &lt;li&gt;Array initializer expressions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Features in ASR only (semantics):
    &lt;ul&gt;
      &lt;li&gt;Runtime intrinsics: min, max, allocated&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Features in AST only (syntax):
    &lt;ul&gt;
      &lt;li&gt;Co-arrays&lt;/li&gt;
      &lt;li&gt;Methods&lt;/li&gt;
      &lt;li&gt;Enumerations&lt;/li&gt;
      &lt;li&gt;Attributes in &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;BOZ constants&lt;/li&gt;
      &lt;li&gt;Forall&lt;/li&gt;
      &lt;li&gt;More interfaces&lt;/li&gt;
      &lt;li&gt;Import&lt;/li&gt;
      &lt;li&gt;Implicit statements&lt;/li&gt;
      &lt;li&gt;Select type&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following people contributed code in May 2021:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gagandeep Singh (&lt;a href=&quot;https://github.com/czgdp1807&quot;&gt;@czgdp1807&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Thirumalai Shaktivel (&lt;a href=&quot;https://github.com/Thirumalai-Shaktivel&quot;&gt;@Thirumalai-Shaktivel&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ondřej Čertík (&lt;a href=&quot;https://github.com/certik&quot;&gt;@certik&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Dominic Poerio (&lt;a href=&quot;https://gitlab.com/dpoe&quot;&gt;@dpoe&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 12th Fortran Monthly call on May 20.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/06hVFA8ApG4&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;Google Summer of Code program has announced the allocation of students to each project.
Fortran-lang received six studens (one through &lt;a href=&quot;https://numfocus.org/&quot;&gt;NumFOCUS&lt;/a&gt;) who will work across three subprojects: stdlib, fpm, and LFortran.
Congratulations and welcome to students
&lt;a href=&quot;https://github.com/aman-godara&quot;&gt;Aman Godara&lt;/a&gt;,
&lt;a href=&quot;https://github.com/haozeke&quot;&gt;Rohit Goswami&lt;/a&gt;,
&lt;a href=&quot;https://github.com/kubajj&quot;&gt;Jakub Jelínek&lt;/a&gt;,
&lt;a href=&quot;https://github.com/chetankarwa&quot;&gt;Chetan Karwa&lt;/a&gt;,
&lt;a href=&quot;https://gitlab.com/Thirumalai-Shaktivel&quot;&gt;Thirumalai Shaktivel&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/czgdp1807&quot;&gt;Gagandeep Singh&lt;/a&gt;.
Read the full post &lt;a href=&quot;https://fortran-lang.org/newsletter/2021/05/18/Welcome-GSoC-students/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;May 01 2021&quot; data-enddate=&quot;May 31 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran-lang welcomes new students to Google Summer of Code 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/05/18/Welcome-GSoC-students/"/>
        <updated>2021-05-18T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/05/18/Welcome-GSoC-students</id>
        <content type="html">&lt;p&gt;We’re happy to announce six students that will work on Fortran projects under
the Google Summer of Code 2021 program:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aman-godara&quot;&gt;Aman Godara&lt;/a&gt; will work on strings in the
&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;Fortran Standard Library&lt;/a&gt;. Aman’s
mentors will be &lt;a href=&quot;https://github.com/awvwgk&quot;&gt;Sebastian Ehlert&lt;/a&gt; and
&lt;a href=&quot;https://github.com/milancurcic&quot;&gt;Milan Curcic&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/haozeke&quot;&gt;Rohit Goswami&lt;/a&gt; will work on the
&lt;a href=&quot;https://lfortran.org&quot;&gt;LFortran&lt;/a&gt; compiler, specifically toward the capability
to compile a complex physics package. Rohit’s mentor will be
&lt;a href=&quot;https://github.com/certik&quot;&gt;Ondřej Čertík&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kubajj&quot;&gt;Jakub Jelínek&lt;/a&gt; will work on handling compiler
arguments in the
&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;Fortran Package Manager&lt;/a&gt;. Jakub’s
mentors will be &lt;a href=&quot;https://github.com/lkedward&quot;&gt;Laurence Kedward&lt;/a&gt; and
&lt;a href=&quot;https://github.com/everythingfunctional&quot;&gt;Brad Richardson&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chetankarwa&quot;&gt;Chetan Karwa&lt;/a&gt; will work on the linked list
support in the
&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;Fortran Standard Library&lt;/a&gt;. Chetan’s
mentors will be &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;Arjen Markus&lt;/a&gt; and
&lt;a href=&quot;https://github.com/milancurcic&quot;&gt;Milan Curcic&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/Thirumalai-Shaktivel&quot;&gt;Thirumalai Shaktivel&lt;/a&gt; will work
on the Abstract Syntax Tree generation in the &lt;a href=&quot;https://lfortran.org&quot;&gt;LFortran&lt;/a&gt;
compiler. Thirumalai’s mentor will be
&lt;a href=&quot;https://github.com/certik&quot;&gt;Ondřej Čertík&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/czgdp1807&quot;&gt;Gagandeep Singh&lt;/a&gt; will work on the support
of arrays and allocatables in the &lt;a href=&quot;https://lfortran.org&quot;&gt;LFortran&lt;/a&gt; compiler.
Gagandeep’s mentor will be &lt;a href=&quot;https://github.com/certik&quot;&gt;Ondřej Čertík&lt;/a&gt;.
Gagandeep was accepted under the NumFOCUS application to GSoC.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is the first year that Fortran-lang applied for Google Summer of Code, and
we’re beyond excited that our project was allocated this many student slots.
You can follow students’ progress in their weekly reports in the &lt;a href=&quot;https://fortran-lang.discourse.group/&quot;&gt;Fortran Discourse&lt;/a&gt; forum.&lt;/p&gt;

&lt;p&gt;Thank you, Google, for your support of Fortran and open source software!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: May 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/05/01/Fortran-Newsletter-May-2021/"/>
        <updated>2021-05-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/05/01/Fortran-Newsletter-May-2021</id>
        <content type="html">&lt;p&gt;Welcome to the May 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had several updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/244&quot;&gt;#244&lt;/a&gt;:
Add a first year announcement&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/236&quot;&gt;#236&lt;/a&gt;:
Add dl_poly_4 to package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/220&quot;&gt;#220&lt;/a&gt;:
Include learn resources to online courses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Internationalization for fortran-lang&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/246&quot;&gt;#246&lt;/a&gt; (WIP):
Transferring fortran90.org “Fortran Best Practise” into a mini-book&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/391&quot;&gt;#391&lt;/a&gt;:
Add issue templates&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/388&quot;&gt;#388&lt;/a&gt;:
Changed filenames for bitset tests&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/384&quot;&gt;#384&lt;/a&gt;:
Implement starts_with and ends_with functions&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/367&quot;&gt;#367&lt;/a&gt;:
Add Intel compiler workflow for OSX&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/360&quot;&gt;#360&lt;/a&gt;:
Summarize build toolchain workflow and implied rules&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/343&quot;&gt;#343&lt;/a&gt;:
Implement strip and chomp as supplement to trim&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/336&quot;&gt;#336&lt;/a&gt;:
Add functions to convert integer/logical values to character values&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of sparse matrices.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; modules.
It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/311&quot;&gt;#311&lt;/a&gt; (WIP):
Implementation of a module for handling lists of strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/313&quot;&gt;#313&lt;/a&gt; (WIP):
Legendre polynomials and Gaussian quadrature&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/333&quot;&gt;#333&lt;/a&gt; (WIP):
Provide abstract base class for a string object&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/349&quot;&gt;#349&lt;/a&gt; (WIP):
Simplify test makefile&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/353&quot;&gt;#353&lt;/a&gt; (WIP):
Initial checkin for a module for tolerant comparison of reals&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/355&quot;&gt;#355&lt;/a&gt; (WIP):
Implement clip function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/359&quot;&gt;#359&lt;/a&gt; (WIP):
Add general contributing guidelines to stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Add sort to stdlib_string_type module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/372&quot;&gt;#372&lt;/a&gt; (WIP):
Correct implementation of to_title&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/386&quot;&gt;#386&lt;/a&gt; (WIP):
Start the addition of the module stdlib_sorting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and &lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues?q=is%3Apr+is%3Aopen+label%3A%22reviewers+needed%22&quot;&gt;reviewing pull requests&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/420&quot;&gt;#420&lt;/a&gt;:
Phase out Haskell fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/468&quot;&gt;#468&lt;/a&gt;:
Identify OpenBSD&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/465&quot;&gt;#465&lt;/a&gt;:
Fix typo in README&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/442&quot;&gt;#442&lt;/a&gt;:
Use lib instead of ar on Windows&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/440&quot;&gt;#440&lt;/a&gt;:
Minor edits to README&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/438&quot;&gt;#438&lt;/a&gt;:
Add external-modules key to build table for non-fpm modules&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/437&quot;&gt;#437&lt;/a&gt;:
Remove coarray single from default Intel flags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/433&quot;&gt;#433&lt;/a&gt;:
Fix to allow compiling C with Intel CC&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/431&quot;&gt;#431&lt;/a&gt;:
Use different compiler flags on differnt platforms for Intel&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/429&quot;&gt;#429&lt;/a&gt;:
Use wget if curl is missing in install.sh&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP):
First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/364&quot;&gt;#364&lt;/a&gt; (WIP):
Plugin alpha version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/423&quot;&gt;#423&lt;/a&gt; (WIP):
Use default instead of master to reference the repository HEAD&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/444&quot;&gt;#444&lt;/a&gt; (WIP):
Allow to find include files / modules in CPATH environment variable&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/449&quot;&gt;#449&lt;/a&gt; (WIP):
Response files with ar on Windows&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/450&quot;&gt;#450&lt;/a&gt; (WIP):
Remove coarray flag from intel debug settings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/451&quot;&gt;#451&lt;/a&gt; (WIP):
Refactor: use objects to represent compilers and archiver&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;A total of 5 pull requests were merged in April.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1021&quot;&gt;PR#1021 Switch to new LLVM License&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1025&quot;&gt;PR#1025 runtime: register atfork handler to re-initialize internal flangrti locks at fork&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1026&quot;&gt;PR#1026 Test case update for #895&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1030&quot;&gt;PR#1030 Update README.md&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1034&quot;&gt;PR#1034 Github Action use the prebuilt clang to build flang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenMP
    &lt;ul&gt;
      &lt;li&gt;[OPENMP5.1]Initial support for novariants clause.&lt;/li&gt;
      &lt;li&gt;[OPENMP5.1]Initial support for nocontext clause.&lt;/li&gt;
      &lt;li&gt;Add functionality to check “close nesting” of regions, which can be used for Semantic checks&lt;/li&gt;
      &lt;li&gt;[OpenMP5.1] Initial support for masked directive and filter clause&lt;/li&gt;
      &lt;li&gt;Modify semantic check for nesting of &lt;code class=&quot;highlighter-rouge&quot;&gt;ordered&lt;/code&gt; regions to include &lt;code class=&quot;highlighter-rouge&quot;&gt;close&lt;/code&gt; nesting check.&lt;/li&gt;
      &lt;li&gt;Remove &lt;code class=&quot;highlighter-rouge&quot;&gt;OmpEndLoopDirective&lt;/code&gt; handles from code.&lt;/li&gt;
      &lt;li&gt;Add General Semantic Checks for Allocate Directive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;New Driver
    &lt;ul&gt;
      &lt;li&gt;Add options for -Werror&lt;/li&gt;
      &lt;li&gt;Modify the existing test cases that use -Mstandard in f18, to use -pedantic and %flang_fc1 to share with the new driver&lt;/li&gt;
      &lt;li&gt;Add support for &lt;code class=&quot;highlighter-rouge&quot;&gt;-cpp/-nocpp&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;-fdebug-dump-provenance&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Add debug options not requiring semantic checks&lt;/li&gt;
      &lt;li&gt;Remove &lt;code class=&quot;highlighter-rouge&quot;&gt;%flang-new&lt;/code&gt; from the LIT configuration&lt;/li&gt;
      &lt;li&gt;Update the regression tests to use the new driver when enabled&lt;/li&gt;
      &lt;li&gt;Add support for &lt;code class=&quot;highlighter-rouge&quot;&gt;-fget-definition&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Move .f77 to the list of fixed-form file extensions&lt;/li&gt;
  &lt;li&gt;Runtime
    &lt;ul&gt;
      &lt;li&gt;Implement reductions&lt;/li&gt;
      &lt;li&gt;Implement numeric intrinsic functions&lt;/li&gt;
      &lt;li&gt;TRANSFER() intrinsic function&lt;/li&gt;
      &lt;li&gt;RANDOM_NUMBER, RANDOM_SEED, RANDOM_INIT&lt;/li&gt;
      &lt;li&gt;Implement IPARITY, PARITY, and FINDLOC reductions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Fix unit test failure on POWER&lt;/li&gt;
  &lt;li&gt;Improve constant folding for type parameter inquiries&lt;/li&gt;
  &lt;li&gt;Check for conflicting BIND(C) names&lt;/li&gt;
  &lt;li&gt;Enforce a limit on recursive PDT instantiations&lt;/li&gt;
  &lt;li&gt;Accept &amp;amp; fold IEEE_SELECTED_REAL_KIND&lt;/li&gt;
  &lt;li&gt;Define missing &amp;amp; needed IEEE_ARITHMETIC symbols&lt;/li&gt;
  &lt;li&gt;Handle instantiation of procedure pointer components&lt;/li&gt;
  &lt;li&gt;Fix checking of argument passing for parameterized derived types&lt;/li&gt;
  &lt;li&gt;Fix spurious errors from runtime derived type table construction&lt;/li&gt;
  &lt;li&gt;Check for attributes specific to dummy arguments&lt;/li&gt;
  &lt;li&gt;Handle structure constructors with forward references to PDTs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes will be sent to the &lt;em&gt;flang-dev&lt;/em&gt; email list and also recorded &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;98 Merge Requests merged in April&lt;/li&gt;
  &lt;li&gt;Working towards compiling the &lt;a href=&quot;https://github.com/lanl/SNAP&quot;&gt;SNAP&lt;/a&gt; proxy app (&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/issues/313&quot;&gt;#313&lt;/a&gt;):
    &lt;ul&gt;
      &lt;li&gt;Code can be parsed to AST and transformed back to source code which compiles with other compilers and works&lt;/li&gt;
      &lt;li&gt;About 3rd of the files can be transformed from AST to ASR and the modules saved&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Other improvements:
    &lt;ul&gt;
      &lt;li&gt;Runtime library (more functions work)&lt;/li&gt;
      &lt;li&gt;Nested functions&lt;/li&gt;
      &lt;li&gt;Derived types&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 11th Fortran Monthly call on April 22.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/D107yFcuZoE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;Wadud Miah (&lt;a href=&quot;https://github.com/wadudmiah&quot;&gt;@wadudmiah&lt;/a&gt;) from the University of Southampton presented a webinar on Fortran for High Performance Computing, organized by &lt;a href=&quot;https://www.excellerat.eu/&quot;&gt;Excellerat&lt;/a&gt;. You can find the slides and the recording &lt;a href=&quot;https://services.excellerat.eu/viewevent/39&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;April 01 2021&quot; data-enddate=&quot;April 30 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>First year of the Fortran website</title>
        <link href="https://fortran-lang.org/newsletter/2021/04/20/First-Year/"/>
        <updated>2021-04-20T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/04/20/First-Year</id>
        <content type="html">&lt;p&gt;In April 2020 we created a website for the Fortran language at
&lt;a href=&quot;https://fortran-lang.org/&quot;&gt;fortran-lang.org&lt;/a&gt;. In exactly one year, it grew to
be the first result when you search “Fortran” in Bing, Yahoo, DuckDuckGo,
Ecosia, Qwant, SearchEncrypt and the second result in Google (after the
Wikipedia page for Fortran).&lt;/p&gt;

&lt;p&gt;The goal of the website is to maintain a neutral place where any Fortran user
(expert or novice), compiler vendor (open source or commercial), Fortran
Standards Committee member, enthusiast, supporter or anybody else interested
is welcome to participate. Fortran was invented in 1956, and we aim to be the
stewards of the language and we welcome you to join us.&lt;/p&gt;

&lt;p&gt;Here are some of the ways that you can participate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fortran-lang.discourse.group/&quot;&gt;Fortran Discourse&lt;/a&gt; discussion forum&lt;/li&gt;
  &lt;li&gt;Contribute to &lt;a href=&quot;https://github.com/fortran-lang/fpm/&quot;&gt;fpm&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/&quot;&gt;stdlib&lt;/a&gt;,
the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;Fortran website&lt;/a&gt; or
any other project&lt;/li&gt;
  &lt;li&gt;Join our monthly Fortran call (see announcements at Discourse)&lt;/li&gt;
  &lt;li&gt;Contribute to the Fortran monthly newsletter&lt;/li&gt;
  &lt;li&gt;Follow our Fortran Twitter account
&lt;a href=&quot;https://twitter.com/fortranlang&quot;&gt;@fortranlang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you everybody for your support so far. We are looking forward for the
second year!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: April 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/04/01/Fortran-Newsletter-April-2021/"/>
        <updated>2021-04-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/04/01/Fortran-Newsletter-April-2021</id>
        <content type="html">&lt;p&gt;Welcome to the April 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had several updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/229&quot;&gt;#229&lt;/a&gt;:
Correct value of pi in quickstart mini-book&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/226&quot;&gt;#226&lt;/a&gt;:
Added DelaunaySparse to package list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/223&quot;&gt;#223&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/225&quot;&gt;#225&lt;/a&gt;:
GSoC announcement&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/222&quot;&gt;#222&lt;/a&gt;:
Avoid unclear formulation in contributing guide&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/221&quot;&gt;#221&lt;/a&gt;:
Add information about free compiler versions&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/216&quot;&gt;#216&lt;/a&gt;:
Improve tags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/207&quot;&gt;#207&lt;/a&gt;:
Correct subtitle of setting up your os&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Internationalization for fortran-lang&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/220&quot;&gt;#220&lt;/a&gt; (WIP):
Include learn resources to online courses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/320&quot;&gt;#320&lt;/a&gt;:
Implement non-fancy functional string type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/362&quot;&gt;#362&lt;/a&gt;:
Fix wording in style guide for dimension attribute&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/352&quot;&gt;#352&lt;/a&gt;:
Added TOC to README&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/346&quot;&gt;#346&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/356&quot;&gt;#356&lt;/a&gt;:
Added to_lower, to_upper, reverse and to_title function to stdlib_string_type module&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of sparse matrices.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; modules.
It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/311&quot;&gt;#311&lt;/a&gt; (WIP):
Implementation of a module for handling lists of strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/313&quot;&gt;#313&lt;/a&gt; (WIP):
Legendre polynomials and Gaussian quadrature&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/333&quot;&gt;#333&lt;/a&gt; (WIP):
Provide abstract base class for a string object&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/336&quot;&gt;#336&lt;/a&gt; (WIP):
Add functions to convert integer/logical values to character values&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/343&quot;&gt;#343&lt;/a&gt; (WIP):
Implement strip and chomp as supplement to trim&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/349&quot;&gt;#349&lt;/a&gt; (WIP):
Simplify test makefile&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/353&quot;&gt;#353&lt;/a&gt; (WIP):
Initial checkin for a module for tolerant comparison of reals&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/355&quot;&gt;#355&lt;/a&gt; (WIP):
Implement clip function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/359&quot;&gt;#359&lt;/a&gt; (WIP):
Add general contributing guidelines to stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/360&quot;&gt;#360&lt;/a&gt; (WIP):
Summarize build toolchain workflow and implied rules&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/363&quot;&gt;#363&lt;/a&gt; (WIP):
Add sort to stdlib_string_type module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/367&quot;&gt;#367&lt;/a&gt; (WIP):
Add Intel compiler workflow for OSX&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and reviewing these pull requests!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/releases/tag/v0.2.0&quot;&gt;Alpha release version 0.2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/conda-forge/fpm-feedstock&quot;&gt;Fpm is now available on conda-forge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/352&quot;&gt;#352&lt;/a&gt;:
Hacky fix for the help test&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/357&quot;&gt;#357&lt;/a&gt;:
Install script for Fortran fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/369&quot;&gt;#369&lt;/a&gt;:
Separate build targets from model structure&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/370&quot;&gt;#370&lt;/a&gt;:
Update run subcommand&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/377&quot;&gt;#377&lt;/a&gt;:
Add explicit include-dir key to manifest&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/378&quot;&gt;#378&lt;/a&gt;:
Add ford-compatible documentation to fpm_strings.f90&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/386&quot;&gt;#386&lt;/a&gt;:
Replace deprecated flags in debug_fortran option&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/390&quot;&gt;#390&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/407&quot;&gt;#407&lt;/a&gt;:
Implement –flag option for Fortran fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/397&quot;&gt;#397&lt;/a&gt;:
Add Conda install instructions to the README&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/398&quot;&gt;#398&lt;/a&gt;:
Minor fix: for setting executable link libraries&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/402&quot;&gt;#402&lt;/a&gt;:
Add fpm description and reorganize the README intro&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/404&quot;&gt;#404&lt;/a&gt;:
Correct join for null input&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/409&quot;&gt;#409&lt;/a&gt;:
Give Programs Access to Code in Subdirectories&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/414&quot;&gt;#414&lt;/a&gt;:
Add few important links to README&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/412&quot;&gt;#412&lt;/a&gt;:
Duplicate module definitions&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/413&quot;&gt;#413&lt;/a&gt;:
Add: omp_lib to intrinsic modules list&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/419&quot;&gt;#419&lt;/a&gt;:
Split workflow for Haskell and Fortran fpm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP):
First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/364&quot;&gt;#364&lt;/a&gt; (WIP):
Plugin alpha version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/420&quot;&gt;#420&lt;/a&gt; (WIP):
Phase out Haskell fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fpm-haskell&lt;/a&gt; (WIP):
Separate repository for the Haskell fpm version&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;A total of 10 pull requests were merged in February.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/996&quot;&gt;PR#996 tests: one test case supporting PR #966&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/968&quot;&gt;PR#968 Fix a clash between CONTIGUOUS and SAVE attribute in flang (issue #673)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/955&quot;&gt;PR#955 Do not issue an error when character kind 2 is used&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/975&quot;&gt;PR#975 Add the option to build release_11x branch of llvm with Github Actions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/974&quot;&gt;PR#974 Fix hash collision handling routine that didn’t work due to a fatal mistake (issue #960).&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1000&quot;&gt;PR#1000 Add ccache support to GitHub Actions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/952&quot;&gt;PR#952 Array debugging support with upgraded DISubrange&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1002&quot;&gt;PR#1002 Fix for regression introduced by PR #922 (issue #995)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/985&quot;&gt;PR#985 add asprintf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/966&quot;&gt;PR#966 Fixes to address cp2k compilation and runtime issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A total of 8 pull requests were merged in March.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/963&quot;&gt;PR#963 Fix errors on array initialisation with an implied do loop&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1007&quot;&gt;PR#1007 fix for issue #1006: stop passing unused uninitialized value&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1004&quot;&gt;PR#1004 Nested implied do loop fix for real numbers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/710&quot;&gt;PR#710 Test case for capturing procedure pointers to OpenMP parallel regions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/561&quot;&gt;PR#561 flang2: corrected fix for #424&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/778&quot;&gt;PR#778 Fixing NCAR test problems with error tolerance lower than E-12.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1010&quot;&gt;PR#1010 LLVM 12 upgrade&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/1012&quot;&gt;PR#1012 Remove release_90 from Github Actions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Driver:
    &lt;ul&gt;
      &lt;li&gt;Add options for -fdefault* and -flarge-sizes&lt;/li&gt;
      &lt;li&gt;Refine tests for module search directories&lt;/li&gt;
      &lt;li&gt;Add -fdebug-dump-parsing-log&lt;/li&gt;
      &lt;li&gt;Add -fdebug-module-writer option&lt;/li&gt;
      &lt;li&gt;Add debug dump, measure-parse-tree and pre-fir-tree options&lt;/li&gt;
      &lt;li&gt;Add -Xflang and make -test-io a frontend-only flang&lt;/li&gt;
      &lt;li&gt;Add -J and -module-dir to f18 driver&lt;/li&gt;
      &lt;li&gt;Fix -fdefault* family bug&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;FIR (Fortran IR - a dialect of MLIR):
    &lt;ul&gt;
      &lt;li&gt;Add diagnostic tests for FIR ops verifier&lt;/li&gt;
      &lt;li&gt;Add FIR Types parser diagnostic tests&lt;/li&gt;
      &lt;li&gt;Upstream the pre-FIR tree changes (The PFT has been updated to support Fortran 77)&lt;/li&gt;
      &lt;li&gt;Update flang test tool support classes&lt;/li&gt;
      &lt;li&gt;Add zero_bits, array value, and other operations&lt;/li&gt;
      &lt;li&gt;Upstream utility function valueHasFirAttribute() to be used in subsequent merges&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMP - add semantic checks for:
    &lt;ul&gt;
      &lt;li&gt;OpenMP 4.5 - 2.7.1 Do Loop restrictions for Threadprivate&lt;/li&gt;
      &lt;li&gt;Occurrence of multiple list items in aligned clause for simd directive&lt;/li&gt;
      &lt;li&gt;Flang OpenMP 4.5 - 2.15.3.6 Reduction clause&lt;/li&gt;
      &lt;li&gt;2.15.4.2 - Copyprivate clause&lt;/li&gt;
      &lt;li&gt;2.15.3.4 - Firstprivate clause&lt;/li&gt;
      &lt;li&gt;2.15.3.5 - Lastprivate clause&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Update character tests to use gtest&lt;/li&gt;
  &lt;li&gt;Adaptations to MLIR API changes&lt;/li&gt;
  &lt;li&gt;Fix call to CHECK() on overriding an erroneous type-bound procedure&lt;/li&gt;
  &lt;li&gt;Handle type-bound procedures with alternate returns&lt;/li&gt;
  &lt;li&gt;Runtime: implement INDEX intrinsic function&lt;/li&gt;
  &lt;li&gt;Fix compilation on MinGW-w64&lt;/li&gt;
  &lt;li&gt;Extension: forward refs to dummy args under IMPLICIT NONE&lt;/li&gt;
  &lt;li&gt;Detect circularly defined interfaces of procedures&lt;/li&gt;
  &lt;li&gt;Implement the related character intrinsic functions SCAN and VERIFY&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes will be sent to the &lt;em&gt;flang-dev&lt;/em&gt; email list and also recorded &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;LFortran is participating in GSoC under the NumFOCUS and Fortran-lang umbrella, if you are interested, please apply: &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/wikis/GSoC-2021-Ideas&quot;&gt;https://gitlab.com/lfortran/lfortran/-/wikis/GSoC-2021-Ideas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;7 people contributed code in the last month:
  &lt;a href=&quot;https://github.com/czgdp1807&quot;&gt;Gagandeep Singh&lt;/a&gt;,
  &lt;a href=&quot;https://dompoer.io/&quot;&gt;Dominic Poerio&lt;/a&gt;,
  &lt;a href=&quot;https://github.com/hp77-creator&quot;&gt;Himanshu Pandey&lt;/a&gt;,
  &lt;a href=&quot;https://github.com/Thirumalai-Shaktivel&quot;&gt;Thirumalai Shaktivel&lt;/a&gt;,
  &lt;a href=&quot;https://github.com/scothalverson&quot;&gt;Scot Halverson&lt;/a&gt;,
  &lt;a href=&quot;https://rgoswami.me/&quot;&gt;Rohit Goswami&lt;/a&gt;,
  &lt;a href=&quot;https://ondrejcertik.com/&quot;&gt;Ondřej Čertík&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;114 Merge Requests were &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests?scope=all&amp;amp;utf8=%E2%9C%93&amp;amp;state=merged&quot;&gt;merged&lt;/a&gt; in the past month, highlights
    &lt;ul&gt;
      &lt;li&gt;macOS support (both Intel and ARM), compilation and development of
LFortran itself (stacktraces work also)&lt;/li&gt;
      &lt;li&gt;Initial implentation of: modules (modfiles, dependencies, …),
interfaces, integer/real kinds, public/private attribute, derived types,
strings, variable initializations, pointers, modules&lt;/li&gt;
      &lt;li&gt;Many other fixes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LFortran is still in pre-alpha stage, but we are making rapid progress towards
getting it to compile more Fortran features. We are looking for contributors,
if you are interested, please get in touch and we will help you get started.
We can be contacted at Zulip Chat, mailinglist or GitLab issues (see
https://lfortran.org for links to all three).&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 10th Fortran Monthly call on March 24.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/cxDF2Sa3nvU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;This year Fortran-lang is a mentor organization for &lt;a href=&quot;https://summerofcode.withgoogle.com/organizations/6633903353233408/&quot;&gt;Google Summer of Code&lt;/a&gt;.
If you’re a student, or know students who are &lt;a href=&quot;https://developers.google.com/open-source/gsoc/faq#what_are_the_eligibility_requirements_for_participation&quot;&gt;eligible to participate&lt;/a&gt;, and you’d like to help build the Fortran ecosystem please reach out and let us know.
The student application window opened on March 29 and will close on April 13 at 14:00 Eastern Time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The 223rd meeting of the US Fortran Standards Committee concluded on March 2.
Main topics of dicussion were the planned changes for the Fortran 202X revision of the Standard.
Here’s the &lt;a href=&quot;https://j3-fortran.org/doc/meeting/223&quot;&gt;list of all submitted papers&lt;/a&gt;,
and the &lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/199&quot;&gt;summary&lt;/a&gt;
of the papers discussed and voting results.
The committee also welcomed a new member, Milan Curcic (&lt;a href=&quot;https://github.com/milancurcic&quot;&gt;@milancurcic&lt;/a&gt;),
who is the voting alternate to Gary Klimowicz (&lt;a href=&quot;https://github.com/gklimowicz&quot;&gt;@gklimowicz&lt;/a&gt;).&lt;/p&gt;

    &lt;p&gt;If you have ideas for new improvements to the language, please propose them
&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Registration is open for the upcoming free webinar on
&lt;a href=&quot;https://register.gotowebinar.com/register/7343048137688004108&quot;&gt;Fortran for High Performance Computing&lt;/a&gt;.
The webinar is organized by &lt;a href=&quot;https://www.excellerat.eu/&quot;&gt;Excellerat&lt;/a&gt;
and will be presented by Wadud Miah (&lt;a href=&quot;https://github.com/wadudmiah&quot;&gt;@wadudmiah&lt;/a&gt;) from the University of Southampton.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-haskell&quot;&gt;fortran-lang/fpm-haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-forum-article-template&quot;&gt;fortran-lang/fortran-forum-article-template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;March 01 2021&quot; data-enddate=&quot;March 31 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran-lang accepted to Google Summer of Code 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/03/09/fortran-lang-accepted-for-google-summer-of-code-2021/"/>
        <updated>2021-03-09T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/03/09/fortran-lang-accepted-for-google-summer-of-code-2021</id>
        <content type="html">&lt;p&gt;We are excited to announce that Fortran-lang has been accepted as a &lt;a href=&quot;https://summerofcode.withgoogle.com/organizations/6633903353233408&quot;&gt;Google Summer of Code (GSoC) 2021 mentoring organization&lt;/a&gt;! 🎉&lt;/p&gt;

&lt;p&gt;You can review our project ideas
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/wiki/GSoC-2021-Project-ideas&quot;&gt;here&lt;/a&gt;,
and if you have any ideas that are not mentioned, please let us know.&lt;/p&gt;

&lt;p&gt;We are looking for students to get in touch with us and to apply.
Click &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/wiki/GSoC-2021-Student-instructions&quot;&gt;here&lt;/a&gt;
for instructions on how to do so.&lt;/p&gt;

&lt;p&gt;Our main communication channel will be the &lt;a href=&quot;https://fortran-lang.discourse.group/&quot;&gt;Fortran Discourse&lt;/a&gt;.
There, we will announce a date for GSoC video calls where all prospective
students are welcome to join to ask questions, discuss, and brainstorm ideas.&lt;/p&gt;

&lt;p&gt;We look forward to a productive and fun Google Summer of Code!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: March 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/03/01/Fortran-Newsletter-March-2021/"/>
        <updated>2021-03-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/03/01/Fortran-Newsletter-March-2021</id>
        <content type="html">&lt;p&gt;Welcome to the March 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had several updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/191&quot;&gt;#191&lt;/a&gt;:
Fix author/maintainer output in fpm registry&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/193&quot;&gt;#193&lt;/a&gt;:
Rename all instances of fortran-lang.github.io to fortran-lang.org&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/196&quot;&gt;#196&lt;/a&gt;:
Update package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/199&quot;&gt;#199&lt;/a&gt;:
Fix broken link for LLVM flang&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/205&quot;&gt;#205&lt;/a&gt;:
Add more electronic structure and atomistic simulation packages&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/206&quot;&gt;#206&lt;/a&gt;:
Add books to learning section&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/208&quot;&gt;#208&lt;/a&gt;:
Fix package information&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/201&quot;&gt;#201&lt;/a&gt; (WIP):
Internationalization for fortran-lang&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/207&quot;&gt;#207&lt;/a&gt; (WIP):
Correct subtitle of setting up your os&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/271&quot;&gt;#271&lt;/a&gt;:
Probability Distribution and Statistical Functions–PRNG Module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/304&quot;&gt;#304&lt;/a&gt;:
Add supported compilers MinGW 8, 9, 10&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/310&quot;&gt;#310&lt;/a&gt;:
Extend &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_ascii&lt;/code&gt; module for handling character variables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/324&quot;&gt;#324&lt;/a&gt;:
Install setuptools for MinGW builds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of sparse matrices.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; modules.
It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/311&quot;&gt;#311&lt;/a&gt; (WIP):
Implementation of a module for handling lists of strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/320&quot;&gt;#320&lt;/a&gt; (WIP):
Implement non-fancy functional string type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/313&quot;&gt;#313&lt;/a&gt; (WIP):
Legendre polynomials and Gaussian quadrature&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help improve stdlib by testing and reviewing these pull requests!&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/316&quot;&gt;#316&lt;/a&gt;:
Update subcommand “new” to reflect the addition of support for the example/ directory&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/345&quot;&gt;#345&lt;/a&gt;:
Fpm backend with dynamic openmp scheduling&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/346&quot;&gt;#346&lt;/a&gt;:
Include root dir in path to default example setup&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/349&quot;&gt;#349&lt;/a&gt;:
Suggest to move the fpm version in the boostrapping process&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/372&quot;&gt;#372&lt;/a&gt;:
Unify release mode calling convention&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP):
First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/230&quot;&gt;#230&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/261&quot;&gt;#261&lt;/a&gt; (WIP):
Document the specification of the fpm CLI.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/352&quot;&gt;#352&lt;/a&gt; (WIP):
Hacky fix for the help test&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/357&quot;&gt;#357&lt;/a&gt; (WIP):
Install script for Fortran fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/364&quot;&gt;#364&lt;/a&gt; (WIP):
Plugin alpha version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/369&quot;&gt;#369&lt;/a&gt; (WIP):
Separate build targets from model structure&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/370&quot;&gt;#370&lt;/a&gt; (WIP):
Update run subcommand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The LFortran team is excited to announce that LFortran is now a &lt;a href=&quot;https://numfocus.org/project/lfortran&quot;&gt;NumFOCUS sponsored project&lt;/a&gt;.
Please consider donating to LFortran to accelerate its development.&lt;/li&gt;
  &lt;li&gt;4 people contributed code in the last month:
  &lt;a href=&quot;https://github.com/czgdp1807&quot;&gt;Gagandeep Singh&lt;/a&gt;,
  &lt;a href=&quot;https://dompoer.io/&quot;&gt;Dominic Poerio&lt;/a&gt;,
  &lt;a href=&quot;https://rgoswami.me/&quot;&gt;Rohit Goswami&lt;/a&gt;,
  &lt;a href=&quot;https://ondrejcertik.com/&quot;&gt;Ondřej Čertík&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Recent Merge Requests highlights:
    &lt;ul&gt;
      &lt;li&gt;Complex type support (thanks to &lt;a href=&quot;https://github.com/czgdp1807&quot;&gt;Gagandeep Singh&lt;/a&gt;):
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/654&quot;&gt;!654&lt;/a&gt;,
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/657&quot;&gt;!657&lt;/a&gt;,
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/658&quot;&gt;!658&lt;/a&gt;,
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/660&quot;&gt;!660&lt;/a&gt;,
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/663&quot;&gt;!663&lt;/a&gt;,
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/664&quot;&gt;!664&lt;/a&gt;.
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/672&quot;&gt;!672&lt;/a&gt;.&lt;/li&gt;
      &lt;li&gt;Multiline REPL (thanks to &lt;a href=&quot;https://dompoer.io/&quot;&gt;Dominic Poerio&lt;/a&gt;):
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/655&quot;&gt;!655&lt;/a&gt;,
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/662&quot;&gt;!662&lt;/a&gt;,
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/670&quot;&gt;!670&lt;/a&gt;,
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/674&quot;&gt;!674&lt;/a&gt;.&lt;/li&gt;
      &lt;li&gt;Initial support for runtime math functions:
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/667&quot;&gt;!667&lt;/a&gt;,
  &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/673&quot;&gt;!673&lt;/a&gt;,&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/648&quot;&gt;!648&lt;/a&gt;: Implement –show-stacktrace&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/666&quot;&gt;!666&lt;/a&gt;: Refactor
ImplicitCast nodes handling&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/665&quot;&gt;!665&lt;/a&gt;: Fixed
floating point printing&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 9th Fortran Monthly call on February 25.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/-Hkm7_iO1wk&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;This year Fortran-lang applied as a mentor organization for &lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code&lt;/a&gt;.
Accepted mentor organizations will be announced on March 9.
If you’re a student, or know students who are &lt;a href=&quot;https://developers.google.com/open-source/gsoc/faq#what_are_the_eligibility_requirements_for_participation&quot;&gt;eligible to participate&lt;/a&gt;, and you’d like to help build the Fortran ecosystem please reach out and let us know.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The 223rd meeting of the US Fortran Standards Committee is held virtually from
February 22 to March 2 (Monday and Tuesday only).
Main topics of dicussion are the planned changes for the Fortran 202X revision
of the Standard:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://j3-fortran.org/doc/meeting/223&quot;&gt;List&lt;/a&gt; of all submitted papers&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/199&quot;&gt;Summary&lt;/a&gt; of which papers were discussed each day and voting results&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;If you have ideas for new improvements to the language, please propose them
&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;February 01 2021&quot; data-enddate=&quot;March 31 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: February 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/02/01/Fortran-Newsletter-February-2021/"/>
        <updated>2021-02-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/02/01/Fortran-Newsletter-February-2021</id>
        <content type="html">&lt;p&gt;Welcome to the February 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had a few updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/190&quot;&gt;#190&lt;/a&gt;:
Add links to fpm contributing guidelines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/191&quot;&gt;#191&lt;/a&gt; (WIP):
Fix author/maintainer output in fpm registry&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/187&quot;&gt;#187&lt;/a&gt; (WIP):
Correct compiler page and tutorial regarding Intel oneAPI and PGI to NVIDIA&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/174&quot;&gt;#174&lt;/a&gt; (WIP):
We are searching for a representative Fortran code snippet for the website and are looking forward to suggestions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/303&quot;&gt;#303&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/301&quot;&gt;#301&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/294&quot;&gt;#294&lt;/a&gt;:
Fixes and improvements for the manual Makefile build&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/293&quot;&gt;#293&lt;/a&gt;:
Write a more verbose introduction to building stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/291&quot;&gt;#291&lt;/a&gt;:
Export package files (CMake and pkg-config)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/290&quot;&gt;#290&lt;/a&gt;:
Rename CMake project from stdlib to fortran_stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/288&quot;&gt;#288&lt;/a&gt;:
Follow GNU install conventions&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/284&quot;&gt;#284&lt;/a&gt;:
Required changes to be able to use &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt; as a subproject in CMake&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;CMake example&lt;/a&gt;:
Integration of the Fortran standard library in CMake projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/304&quot;&gt;#304&lt;/a&gt; (WIP):
Add supported compilers MinGW 8, 9, 10&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/269&quot;&gt;#269&lt;/a&gt; (WIP):
Implementation of a module for handling lists of strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/271&quot;&gt;#271&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; modules.
It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of sparse matrices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t hesitate to test and review these pull requests!&lt;/p&gt;

&lt;p&gt;Otherwise, ongoing discussions continue about usability of &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;
(&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/7&quot;&gt;#7&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/215&quot;&gt;#215&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/279&quot;&gt;#279&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/280&quot;&gt;#280&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/285&quot;&gt;#285&lt;/a&gt;),
and new implementations for &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;
(&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/135&quot;&gt;#135&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/212&quot;&gt;#212&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/234&quot;&gt;#234&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/241&quot;&gt;#241&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/258&quot;&gt;#258&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/259&quot;&gt;#259&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/262&quot;&gt;#262&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/268&quot;&gt;#268&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/277&quot;&gt;#277&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/342&quot;&gt;#342&lt;/a&gt;:
Fix broken link in contributing guidelines&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/337&quot;&gt;#337&lt;/a&gt;:
Allow hyphens in fpm project names in “fpm new”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/335&quot;&gt;#335&lt;/a&gt;:
Fix: performance regression&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/334&quot;&gt;#334&lt;/a&gt;:
Remove a name clash in the fpm testsuite&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP):
First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/230&quot;&gt;#230&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/261&quot;&gt;#261&lt;/a&gt; (WIP):
Specification of the fpm CLI.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/316&quot;&gt;#316&lt;/a&gt; (WIP):
Update subcommand “new” to reflect the addition of support for examples&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/345&quot;&gt;#345&lt;/a&gt; (WIP):
Update: fpm_backend with dynamic openmp scheduling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;There are a number of pull requests out for evaluation.&lt;/p&gt;

&lt;p&gt;A total of 12 pull requests were merged in January.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/932&quot;&gt;PR#932 Do not assume unempty derived types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/957&quot;&gt;PR#957 Support Prefetch Directive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/947&quot;&gt;PR#947 Fix gcc-10 compilaton issues&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/948&quot;&gt;PR#948 Expand CI to run with GCC-9/10 and LLVM-9/10/11&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/949&quot;&gt;PR#949 USE rename should check if renamed sptr is available in the scope&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/971&quot;&gt;PR#971 Remove dwarfdump_prolog.f90 test since it is dependent on codegen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/940&quot;&gt;PR#940 Flang should generate debug location for limited instructions in prolog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/977&quot;&gt;PR#977 Update apt data before installing sphinx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/751&quot;&gt;PR#751 Fix for len intrinsic returning int*8 in some cases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/956&quot;&gt;PR#956 Minor FileCheck pattern fixes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/978&quot;&gt;PR#978 Fix the readme to point to the correct flang-dev list&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/979&quot;&gt;PR#979 Rename direct header to avoid windows conflict&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenMP semantic checks: private, firstprivate, lastprivate, Workshare Construct, &lt;code class=&quot;highlighter-rouge&quot;&gt;DO&lt;/code&gt; loop restrictions&lt;/li&gt;
  &lt;li&gt;Detect call to abstract interface&lt;/li&gt;
  &lt;li&gt;OpenMP - add task_reduction clause, make reduction clause part of OmpClause&lt;/li&gt;
  &lt;li&gt;New Driver - adding support for various options, testing improvements, standard macro pre-definitions, fixed-form detection, CMake improvements&lt;/li&gt;
  &lt;li&gt;OpenACC - semantic checks to enforce declare directive restrictions&lt;/li&gt;
  &lt;li&gt;Internal subprogram improvements&lt;/li&gt;
  &lt;li&gt;OpenMP/OpenACC - Extend CheckNoBranching to handle branching provided by LabelEnforce&lt;/li&gt;
  &lt;li&gt;Disallow &lt;code class=&quot;highlighter-rouge&quot;&gt;INTENT&lt;/code&gt; attribute on procedure dummy arguments&lt;/li&gt;
  &lt;li&gt;Module file improvements and bug fixes&lt;/li&gt;
  &lt;li&gt;Add tests for procedure arguments with implicit interfaces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes will be sent to the &lt;em&gt;flang-dev&lt;/em&gt; email list and also recorded &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 8th Fortran Monthly call on January 19.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/QfiBUAgI3kw&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;This year fortran-lang will be applying as a mentor organisation for &lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code&lt;/a&gt;.
We have started working on the application and the project ideas; you can join the ongoing discussion &lt;a href=&quot;https://fortran-lang.discourse.group/t/google-summer-of-code-2021/658&quot;&gt;here&lt;/a&gt;.
If you’d like to help us flesh out the ideas, or have a project idea of your own, please join our upcoming video calls on February 9 and 16 (call info will be posted in the Discourse thread), or write directly in the Discourse thread.
If you’re a student, or know students who are &lt;a href=&quot;https://developers.google.com/open-source/gsoc/faq#what_are_the_eligibility_requirements_for_participation&quot;&gt;eligible to participate&lt;/a&gt;, and you’d like to help build the Fortran ecosystem please reach out and let us know.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;January 01 2021&quot; data-enddate=&quot;January 31 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: January 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/01/01/Fortran-Newsletter-January-2021/"/>
        <updated>2021-01-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/01/01/Fortran-Newsletter-January-2021</id>
        <content type="html">&lt;p&gt;Happy New Year!
Welcome to the January 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had a few updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/178&quot;&gt;#178&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/188&quot;&gt;#188&lt;/a&gt;:
Fix build preview&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/179&quot;&gt;#179&lt;/a&gt;:
Fix word spelling error in quickstart page&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/173&quot;&gt;#173&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/180&quot;&gt;#180&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/186&quot;&gt;#186&lt;/a&gt;:
Add missing packages from the list of popular Fortran projects to the package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/182&quot;&gt;#182&lt;/a&gt;:
Update compilers page following Intel oneAPI release&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/160&quot;&gt;#160&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/171&quot;&gt;#171&lt;/a&gt;:
In-depth introduction for Fortran with Make.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/187&quot;&gt;#187&lt;/a&gt; (WIP):
Correct compiler page and tutorial regarding Intel oneAPI and PGI to NVIDIA&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/174&quot;&gt;#174&lt;/a&gt; (WIP):
We are searching for a representative Fortran code snippet for the website and are looking forward to suggestions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/190&quot;&gt;#190&lt;/a&gt; (WIP):
Add links to fpm contributing guidelines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/256&quot;&gt;#256&lt;/a&gt;: Add the method &lt;code class=&quot;highlighter-rouge&quot;&gt;log_debug&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_logger&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/257&quot;&gt;#257&lt;/a&gt;: Improve CMake check for F18 error stop&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/260&quot;&gt;#260&lt;/a&gt;: Add Intel oneAPI Fortran compiler to CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/261&quot;&gt;#261&lt;/a&gt;: Add a level option to ignore logging messages&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/263&quot;&gt;#263&lt;/a&gt;, 
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/267&quot;&gt;#267&lt;/a&gt;: Minor fixes to CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/270&quot;&gt;#270&lt;/a&gt;: Add GFortran 10 to CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/275&quot;&gt;#275&lt;/a&gt;: Add MSYS2 systems to Windows CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/282&quot;&gt;#282&lt;/a&gt;: Add a note about memory issues when compiling stdlib with the support of arrays to up 15 ranks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/283&quot;&gt;#283&lt;/a&gt;: Improve the compilation load by splitting submodules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/269&quot;&gt;#269&lt;/a&gt; (WIP): Implementation of a module for handling lists of strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/271&quot;&gt;#271&lt;/a&gt; (WIP),
 &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP),
 &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP),
 &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP),
 &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP): Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; modules. It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/284&quot;&gt;#284&lt;/a&gt; (WIP): Required changes to be able to use &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt; as a subproject in CMake&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP): Initial implementation of sparse matrices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t hesitate to test and review these pull requests!&lt;/p&gt;

&lt;p&gt;Otherwise, ongoing discussions continue about usability of &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;
(&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/7&quot;&gt;#7&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/215&quot;&gt;#215&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/279&quot;&gt;#279&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/280&quot;&gt;#280&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/285&quot;&gt;#285&lt;/a&gt;),
and new implementations for &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;
(&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/135&quot;&gt;#135&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/212&quot;&gt;#212&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/234&quot;&gt;#234&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/241&quot;&gt;#241&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/258&quot;&gt;#258&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/259&quot;&gt;#259&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/262&quot;&gt;#262&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/268&quot;&gt;#268&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/277&quot;&gt;#277&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/releases/tag/v0.1.3&quot;&gt;Alpha release version 0.1.3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/marketplace/actions/setup-fpm&quot;&gt;setup-fpm action&lt;/a&gt;:
GitHub Action to setup the Fortran Package Manager on Ubuntu, MacOS and Windows runners&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/discussions&quot;&gt;Discussion board&lt;/a&gt;:
For questions &amp;amp; answers, sharing of ideas, showing off projects and, of course, discussions around fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/248&quot;&gt;#248&lt;/a&gt;:
Refactor backend for incremental rebuilds&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/251&quot;&gt;#266&lt;/a&gt;:
Dependency management and &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm update&lt;/code&gt; subcommand&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/255&quot;&gt;#255&lt;/a&gt;
Setting the compiler and specifying test or app target&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/262&quot;&gt;#262&lt;/a&gt;:
Add -fcoarray=single to default gfortran flags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/257&quot;&gt;#257&lt;/a&gt;:
Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/260&quot;&gt;#260&lt;/a&gt;:
Fix CI to test release build&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/267&quot;&gt;#267&lt;/a&gt;:
Fix enumeration of non-library link objects&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/268&quot;&gt;#268&lt;/a&gt;:
Fix dependency tracking issue in bootstrap version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/271&quot;&gt;#271&lt;/a&gt;:
Fix Windows run and test commands&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/273&quot;&gt;#273&lt;/a&gt;:
Update developer documentation (manifest + command line)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/274&quot;&gt;#274&lt;/a&gt;:
Update README with link to setup-fpm github action.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/280&quot;&gt;#280&lt;/a&gt;:
Create specification for example section&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/281&quot;&gt;#281&lt;/a&gt;:
Cleanup: Remove archived Rust prototype&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/284&quot;&gt;#284&lt;/a&gt;:
Document model and backend for developers&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/285&quot;&gt;#285&lt;/a&gt;:
CI: update naming of release binaries&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/286&quot;&gt;#286&lt;/a&gt;:
Implement check for duplicated program names&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/289&quot;&gt;#289&lt;/a&gt;:
Add support for same compilers as Fortran version to Haskell version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/291&quot;&gt;#291&lt;/a&gt;:
Initial implementation of &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm build --show-model&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/292&quot;&gt;#292&lt;/a&gt;:
Specify the correct help for &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm run -h&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/293&quot;&gt;#293&lt;/a&gt;:
Fix: missing error check after &lt;code class=&quot;highlighter-rouge&quot;&gt;new_package&lt;/code&gt; call&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/294&quot;&gt;#294&lt;/a&gt;:
Add: support for detecting .f and .F files&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/300&quot;&gt;#300&lt;/a&gt;:
Remove -coarray=single option from ifort compiler default options&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/303&quot;&gt;#303&lt;/a&gt;:
Fixes to source parsing&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/304&quot;&gt;#304&lt;/a&gt;:
Remove note on not supported dependencies in program targets&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/307&quot;&gt;#307&lt;/a&gt;:
Fix: program object file collision&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/315&quot;&gt;#315&lt;/a&gt;:
Remove: -ffast-math in gfortran default release flags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/322&quot;&gt;#322&lt;/a&gt;:
Group sources by package in the model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP):
First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/230&quot;&gt;#230&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/261&quot;&gt;#261&lt;/a&gt; (WIP):
Specification of the fpm CLI.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/316&quot;&gt;#316&lt;/a&gt; (WIP):
Update subcommand “new” to reflect the addition of support for examples&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;There are several pull requests out for evaluation.&lt;/p&gt;

&lt;p&gt;Only one pull request was merged in December:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/951&quot;&gt;PR#951 Fix for ICE in atomic instruction generation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Alexis-Perry Holby (aperry@lanl.gov) has taken over the Flang biweekly calls.
An invitation was sent to the &lt;em&gt;flang-dev&lt;/em&gt; LLVM email list on December 22nd.
Call notes will be sent to the &lt;em&gt;flang-dev&lt;/em&gt; email list and also recorded &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Semantic analysis fix for index-names of &lt;code class=&quot;highlighter-rouge&quot;&gt;FORALL&lt;/code&gt; statements&lt;/li&gt;
  &lt;li&gt;Continued work on parser support for &lt;code class=&quot;highlighter-rouge&quot;&gt;ALLOCATE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Build tidying&lt;/li&gt;
  &lt;li&gt;OpenMP semantic checks: atomic, flush&lt;/li&gt;
  &lt;li&gt;Continued work on new driver&lt;/li&gt;
  &lt;li&gt;Fix for list-directed REAL output editing&lt;/li&gt;
  &lt;li&gt;Bug fixes: USE of USE of generic, crash in folding (#48437), crash in OpenMP semantic check (#48308), &lt;code class=&quot;highlighter-rouge&quot;&gt;IMPLICIT_NONE(EXTERNAL)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;STORAGE_SIZE()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;SIZEOF()&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;C_SIZEOF()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;OpenACC: update serial construct clauses for 3.1, enforce restriction on routine directive and clauses&lt;/li&gt;
  &lt;li&gt;OpenMP: adding important clauses to OmpClause, task reduction clause&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 7th Fortran Monthly call on December 15.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/S_xQCSRlefE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://adspthepodcast.com/2021/01/01/Episode-6.html&quot;&gt;Episode 6&lt;/a&gt; of the
Algorithms+Data Structures=Programs (ADSP) Podcast discussed Fortran and
the recent fortran-lang developments.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/modern-fortran/first-year-of-fortran-lang-d8796bfa0067&quot;&gt;First year of Fortran-lang&lt;/a&gt; by Milan Curcic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;December 01 2020&quot; data-enddate=&quot;December 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: December 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/12/01/Fortran-Newsletter-December-2020/"/>
        <updated>2020-12-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/12/01/Fortran-Newsletter-December-2020</id>
        <content type="html">&lt;p&gt;Welcome to the December 2020 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had a few updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/156&quot;&gt;#156&lt;/a&gt;:
Updates to the mini-book on building Fortran programs, including the addition of
short guides on Meson and CMake.
You can read the mini-book &lt;a href=&quot;https://fortran-lang.org/learn/building_programs&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/169&quot;&gt;#169&lt;/a&gt;:
Add PSBLAS to the package index.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/160&quot;&gt;#160&lt;/a&gt; (WIP):
In-depth introduction for Fortran with Make.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/239&quot;&gt;#239&lt;/a&gt;: Implementation of bitsets in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_bitsets&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/243&quot;&gt;#243&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/245&quot;&gt;#245&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/253&quot;&gt;#252&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/255&quot;&gt;#255&lt;/a&gt;: Various improvements to &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_logger&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/245&quot;&gt;#245&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/250&quot;&gt;#250&lt;/a&gt;: Minor fixes to the CI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/240&quot;&gt;#240&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; module. It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt;: Initial implementation of sparse matrices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t hesitate to test and review these pull requests!&lt;/p&gt;

&lt;p&gt;Otherwise, ongoing discussions continue:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/220&quot;&gt;#220&lt;/a&gt;: API for file system operations: directory manipulation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/241&quot;&gt;#241&lt;/a&gt;: Include a &lt;code class=&quot;highlighter-rouge&quot;&gt;split&lt;/code&gt; function (202X feature)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/254&quot;&gt;#254&lt;/a&gt;: Proposition to add a logger for debug phases and levels among the different logs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/259&quot;&gt;#259&lt;/a&gt;: Update the instructions for building from source in README.md.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/246&quot;&gt;#246&lt;/a&gt;: Automated binary releases in CI.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/233&quot;&gt;#233&lt;/a&gt;: Allow linking with external libraries.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/224&quot;&gt;#224&lt;/a&gt;: Add a reference document for the package manifest (fpm.toml).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/221&quot;&gt;#221&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/239&quot;&gt;#239&lt;/a&gt;: Runner options for test and app executables.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/220&quot;&gt;#220&lt;/a&gt;: Implement compiler and flags settings in Haskell fpm.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/209&quot;&gt;#209&lt;/a&gt;:
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/237&quot;&gt;#237&lt;/a&gt;: Developer API docs.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/216&quot;&gt;#216&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/225&quot;&gt;#225&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/226&quot;&gt;#226&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/229&quot;&gt;#229&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/236&quot;&gt;#236&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/240&quot;&gt;#240&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/240&quot;&gt;#247&lt;/a&gt;: Other fixes and improvements.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP): First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/230&quot;&gt;#230&lt;/a&gt;,
      &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/261&quot;&gt;#261&lt;/a&gt;: Specification of the fpm CLI.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/232&quot;&gt;#232&lt;/a&gt;: Allowing the &lt;code class=&quot;highlighter-rouge&quot;&gt;extra&lt;/code&gt; section in fpm.toml.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/248&quot;&gt;#248&lt;/a&gt;: Refactor backend for incremental rebuilds.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/251&quot;&gt;#251&lt;/a&gt;: Dependency management.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/255&quot;&gt;#255&lt;/a&gt;: Setting the compiler and specifying test or app target.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/257&quot;&gt;#257&lt;/a&gt;: Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm install&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/260&quot;&gt;#260&lt;/a&gt;: Fix CI to test release build.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;We continue to evaluate and merge pull requests into Classic Flang. Recently merged pull requests into Classic Flang include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/883&quot;&gt;PR#883: Flang generated executable does not show result variable of function&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/933&quot;&gt;PR#933: Updating X-flag entries for internal command line option “-x 49”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/939&quot;&gt;PR#939: Publish Arm’s internal documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/941&quot;&gt;PR#941: [DebugInfo] Internal subprogram variable is not accessible for printing in gdb&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/942&quot;&gt;PR#942: Implement UNROLL(n) directive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/943&quot;&gt;PR#943: Enable github Actions for push to master and pull requests to master&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/945&quot;&gt;PR#945: libpgmath: Stop using pgstdinit.h&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/946&quot;&gt;PR#946: Call check_member() for PD_is_contiguous&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/951&quot;&gt;PR#951: Fix for ICE in atomic instruction generation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pull requests merged into the supporting projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/5&quot;&gt;classic flang LLVM monorepo PR#5: [Driver] Reduce downstream delta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/6&quot;&gt;classic flang LLVM monorepo PR#6: Removing a few CI pipelines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/7&quot;&gt;classic flang LLVM monorepo PR#7: Github Actions added to pre-compile artifacts for flang&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/llvm/pull/87&quot;&gt;llvm mirror PR#87: Enable github actions for llvm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang-driver/pull/94&quot;&gt;flang-driver PR#94: Enable github actions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Classic Flang biweekly call has been set up to discuss issues and plans
for the next pull requests to be validated and merged. Our next calls are Wednesday, December 16 and 30, 8:00 AM Pacific time. The notes from previous calls, upcoming agenda and a link to join the call can be found
&lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime. Significant contributions are being made for OpenMP and OpenACC support.&lt;/p&gt;

&lt;p&gt;In conjunction with the MLIR-based code from the &lt;em&gt;fir-dev&lt;/em&gt; fork (the Fortran IR used for lowering), Flang can compile and run most F77 programs, including the Fortran Compiler Validation Suite (FCVS).&lt;/p&gt;

&lt;p&gt;Pat McCormick is (still) working on an RFC for the merge of the lowering code
in the fir-dev fork into LLVM master. (This was interrupted by Supercomputing 2020 and other ECP duties.) The goal is to expedite this in a way that is acceptable to the Flang community, so we can do further work in the single master branch.&lt;/p&gt;

&lt;p&gt;Recent updates include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Johannes Doerfert has created a web page at https://flang.llvm.org; you can find call and Slack logistics there&lt;/li&gt;
  &lt;li&gt;Nichols Romero has an llvm-dev RFC for adding Fortran tests to the llvm-tests project: http://lists.llvm.org/pipermail/llvm-dev/2020-November/146873.html&lt;/li&gt;
  &lt;li&gt;Andzrej Warzynski has a flang-dev RFC regarding flang option names: http://lists.llvm.org/pipermail/flang-dev/2020-November/000588.html&lt;/li&gt;
  &lt;li&gt;Andzrej Warzynski has a cfe-dev RFC regarding refactoring clang to help flang driver become independent of clang: http://lists.llvm.org/pipermail/cfe-dev/2020-November/067263.html&lt;/li&gt;
  &lt;li&gt;Changed representation of CHARACTER data in type system to make more consistent with other types (for arrays)&lt;/li&gt;
  &lt;li&gt;Changed COMPLEX expression representation to provide better handling in lowering&lt;/li&gt;
  &lt;li&gt;More improvements for supporting Fortran 77 programs&lt;/li&gt;
  &lt;li&gt;Implemented runtime support for basic ALLOCATE/DEALLOCATE and further work&lt;/li&gt;
  &lt;li&gt;Continued implementation of table-driven runtime for derived types; posted documentation&lt;/li&gt;
  &lt;li&gt;Continued implementation of array expression lowering&lt;/li&gt;
  &lt;li&gt;Improved error checks on forward references&lt;/li&gt;
  &lt;li&gt;More updates to flang driver (option handling; -E can now be used to invoke just the Flang preprocessor)&lt;/li&gt;
  &lt;li&gt;OpenACC semantic checks for modifiers on enter/exit data, set directives&lt;/li&gt;
  &lt;li&gt;OpenACC lowering (enter/exit data, update, init, shutdown, wait directives)&lt;/li&gt;
  &lt;li&gt;OpenMP structure checker updates; semantic checks for copyin clause; schedule class&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Brian Friesen (Lawrence Berkeley National Laboratory) was selected to be the new Chair of PL22.3 (J3, US Standards Committee).
Brian will serve in his first term until November 2023. Congratulations, Brian!&lt;/li&gt;
  &lt;li&gt;We had our 6th Fortran Monthly call on November 17.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/HI-Yhn7Q8Ko&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;November 01 2020&quot; data-enddate=&quot;November 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: November 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/11/01/Fortran-Newsletter-November-2020/"/>
        <updated>2020-11-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/11/01/Fortran-Newsletter-November-2020</id>
        <content type="html">&lt;p&gt;Welcome to the November 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had a few additions and improvements to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/152&quot;&gt;#152&lt;/a&gt;:
New mini-book on setting up the Fortran development environment.
You can read it &lt;a href=&quot;https://fortran-lang.org/learn/os_setup&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/147&quot;&gt;#147&lt;/a&gt;:
Automated posting to @fortranlang Twitter using twitter-together.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/155&quot;&gt;#155&lt;/a&gt;:
Fix for a security vulnerability reported by the GitHub Security Team.&lt;/li&gt;
  &lt;li&gt;The following packages were added to the
&lt;a href=&quot;https://fortran-lang.org/packages&quot;&gt;Package Index&lt;/a&gt;:
atomsk, ddPCM, DFTB+, DFT-D4, ELPA, ELSI, FortJSON, fypp, HANDE, libmbd, libnegf,
mpifx, NTPoly, NWChem, OpenMolcas, PoisFFT, QMD-PROGRESS, scalapackfx,
tapenade, wannier90, and xtb.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/145&quot;&gt;#145&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/146&quot;&gt;#146&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/154&quot;&gt;#154&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/158&quot;&gt;#158&lt;/a&gt;:
Minor fixes and improvements.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/160&quot;&gt;#160&lt;/a&gt; (WIP):
In-depth introduction for Fortran with Make.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/156&quot;&gt;#156&lt;/a&gt; (WIP):
Updating the mini-book on building programs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;This month progress was made on a few pull requests:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/239&quot;&gt;#239&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_bitsets&lt;/code&gt; module. It provides a bitset data type.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/240&quot;&gt;#240&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; module. It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/243&quot;&gt;#243&lt;/a&gt;: A proposition to support newline characters in the message provided to the logger.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t hesitate to test and review these pull requests!&lt;/p&gt;

&lt;p&gt;Otherwise, ongoing discussions continue;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/220&quot;&gt;#220&lt;/a&gt;: API for file system operations: directory manipulation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/241&quot;&gt;#241&lt;/a&gt;: Include a &lt;code class=&quot;highlighter-rouge&quot;&gt;split&lt;/code&gt; function (202X feature)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;What’s new:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/213&quot;&gt;#213&lt;/a&gt;: Bootstrap fpm submodule support&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/208&quot;&gt;#208&lt;/a&gt;: Minor fixes to &lt;code class=&quot;highlighter-rouge&quot;&gt;list_files&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm_filesystem&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/206&quot;&gt;#206&lt;/a&gt;: Add installation script in &lt;code class=&quot;highlighter-rouge&quot;&gt;install.sh&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/193&quot;&gt;#193&lt;/a&gt;: Local and remote package dependencies (Fortran fpm can now build itself)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/190&quot;&gt;#190&lt;/a&gt;: Auto discovery of executables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/189&quot;&gt;#189&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/204&quot;&gt;#204&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/203&quot;&gt;#203&lt;/a&gt;: Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm new&lt;/code&gt; in Fortran fpm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP): First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/221&quot;&gt;#221&lt;/a&gt; (WIP): Test and executable runner options&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/220&quot;&gt;#220&lt;/a&gt; (WIP): Compiler and flags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/216&quot;&gt;#216&lt;/a&gt; (WIP): Remove bashism from install.sh&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/209&quot;&gt;#209&lt;/a&gt; (WIP): Add automatic documentation for Fortran fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/202&quot;&gt;#202&lt;/a&gt; (WIP): Create package manifest with toml-f build interface&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;We continue to evaluate and merge pull requests into the original Flang
compiler again. We pulled in several changes in October.&lt;/p&gt;

&lt;p&gt;Recently merged pull requests into Classic Flang include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/660&quot;&gt;PR#660: Enable support for simd directives&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/910&quot;&gt;PR#910: Fix f90_correct tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/922&quot;&gt;PR#922: Fix private flag overwrite in find_def_in_most_recent_scope()&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/927&quot;&gt;PR#927: f90_correct: exclude tests failing with LLVM 10 on OpenPOWER&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/930&quot;&gt;PR#930: Fix HTML docs generation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/931&quot;&gt;PR#931: [flang2] Fix segmentation faults (#421)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/932&quot;&gt;PR#932: [flang1] Do not assume unempty derived types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/938&quot;&gt;PR#938: [flang2] Fixing possible crash due to ivl being NULL in dinit.cpp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Classic Flang biweekly call has been set up to discuss issues and plans
for the next pull requests to be validated and merged. Our next calls will be
Wednesday, November 4 and 18, 8:00 AM Pacific time (note the time change).
The notes from previous calls, upcoming agenda and a link to join the call can be found
&lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime.&lt;/p&gt;

&lt;p&gt;In conjunction with the MLIR-based code from the &lt;em&gt;fir-dev&lt;/em&gt; fork (the Fortran
IR used for lowering), Flang can compile and run most F77 programs,
including the Fortran Compiler Validation Suite (FCVS).&lt;/p&gt;

&lt;p&gt;Pat McCormick is working on an RFC for the merge of the lowering code
in the fir-dev fork into LLVM master.
The goal is to expedite this in a way that is acceptable to the Flang community,
so we can do further work in the single master branch.&lt;/p&gt;

&lt;p&gt;Arm continues to contribute changes toward a full-fledged driver for flang.&lt;/p&gt;

&lt;p&gt;AMD continues to add support for OpenMP semantics and lowering.&lt;/p&gt;

&lt;p&gt;Valentin Clement continues to contribute parsing and semantics changes for
OpenACC support.&lt;/p&gt;

&lt;p&gt;Michael Kruse continues to add support for building Flang on Windows with MSVC
to the point that he can build and test Flang on Windows.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;What’s new in LFortran:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;9 Merge Requests were merged and 5 issues fixed in October 2020&lt;/li&gt;
  &lt;li&gt;We gave LFortran
&lt;a href=&quot;https://cfp.jupytercon.com/2020/schedule/presentation/169/lfortran-interactive-llvm-based-fortran-compiler-for-modern-architectures/&quot;&gt;talk&lt;/a&gt;
at JupyterCon 2020&lt;/li&gt;
  &lt;li&gt;A prototype compiler implementation of conditional expressions for the
October 2020 Fortran Standards Committee meeting
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/645&quot;&gt;!645&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Better code formatting support (&lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran fmt&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Improvements to AST&lt;/li&gt;
  &lt;li&gt;Capture stdout on Windows in a Jupyter notebook
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/642&quot;&gt;!642&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can follow LFortran on Twitter for latest updates: &lt;a href=&quot;https://twitter.com/lfortranorg&quot;&gt;@lfortranorg&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The US Fortran Standards Committee held a virtual meeting from October 12-14.
You can read the summary and the discussion &lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/185&quot;&gt;here&lt;/a&gt; and all the documents &lt;a href=&quot;https://j3-fortran.org/doc/meeting/222&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We had our 5th Fortran Monthly call on October 27.
You can watch the recording below:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/om869cZHeRU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;October 01 2020&quot; data-enddate=&quot;October 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: October 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/10/01/Fortran-Newsletter-October-2020/"/>
        <updated>2020-10-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/10/01/Fortran-Newsletter-October-2020</id>
        <content type="html">&lt;p&gt;Welcome to the October 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had only one minor change to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/136&quot;&gt;#136&lt;/a&gt;:
Small fix in the opening sentence on the compilers page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/117&quot;&gt;#117&lt;/a&gt;: Adding a
Benchmarks section, a new dedicated repository was created at
https://github.com/fortran-lang/benchmarks and many details have been
discussed in &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;issues&lt;/a&gt; there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;This month we’ve had an improvement to the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_ascii&lt;/code&gt; module,
as well as addition of logging facilities.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/238&quot;&gt;#238&lt;/a&gt;: Improvements to the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats&lt;/code&gt; module by adding explicit conversions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/228&quot;&gt;#228&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_logger&lt;/code&gt; module.
It provides a global logger instance for easy use in user applications, as well as a &lt;code class=&quot;highlighter-rouge&quot;&gt;logger_type&lt;/code&gt; derived type
if multiple concurrent loggers are needed.
See the &lt;a href=&quot;https://stdlib.fortran-lang.org/page/specs/stdlib_logger.html&quot;&gt;logger specification&lt;/a&gt;
to learn more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/239&quot;&gt;#239&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_bitsets&lt;/code&gt; module. It provides a bitset data type.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/235&quot;&gt;#235&lt;/a&gt;: Improvements to the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_ascii&lt;/code&gt; module&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Otherwise, ongoing discussions continue:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/225&quot;&gt;#225&lt;/a&gt;: Name convention for derived types in stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/224&quot;&gt;#224&lt;/a&gt;: Handling and propagating errors inside stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/221&quot;&gt;#221&lt;/a&gt;: API for a bitset data type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/201&quot;&gt;#201&lt;/a&gt;: API for file system operations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;This month has seen over a dozen additions and improvements to the Fortran implementation of fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/186&quot;&gt;#186&lt;/a&gt;: Implement version string validation and comparison&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/185&quot;&gt;#185&lt;/a&gt;: Update CI workflow&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/182&quot;&gt;#182&lt;/a&gt;: CLI interface to further development of subcommands&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/180&quot;&gt;#180&lt;/a&gt;: Recursive source discovery&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/178&quot;&gt;#178&lt;/a&gt;: Add more example packages&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/177&quot;&gt;#177&lt;/a&gt;: Allow selective testing of single suites and tests&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/175&quot;&gt;#175&lt;/a&gt;: Updated formatting of Markdown documents&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/174&quot;&gt;#174&lt;/a&gt;: Cache Haskell Stack build in CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/171&quot;&gt;#171&lt;/a&gt;: Increase test coverage of fpm manifest&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/170&quot;&gt;#170&lt;/a&gt;: Source parsing tests&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/163&quot;&gt;#163&lt;/a&gt;: Use different strategy to fetch git dependencies&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/162&quot;&gt;#162&lt;/a&gt;: Updated OS type identification&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/160&quot;&gt;#160&lt;/a&gt;: Add contributing guidelines
(you can read them &lt;a href=&quot;https://github.com/fortran-lang/fpm/CONTRIBUTING.md&quot;&gt;here&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/157&quot;&gt;#157&lt;/a&gt;: Implement reading of fpm.toml&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/155&quot;&gt;#155&lt;/a&gt;: Internal dependencies and build backend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/193&quot;&gt;#193&lt;/a&gt; (WIP): Local path dependencies&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/190&quot;&gt;#190&lt;/a&gt; (WIP): Auto discovery of executables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/189&quot;&gt;#189&lt;/a&gt; (WIP): Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm new&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;We continue to evaluate and merge pull requests into the original Flang
compiler again. We pulled in several changes in the past month.&lt;/p&gt;

&lt;p&gt;One important merge was support for LLVM 10,
which required the use of a new fork, the &lt;em&gt;classic-flang-llvm-project&lt;/em&gt;
fork of the LLVM monorepo. See
&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/1&quot;&gt;PR#1&lt;/a&gt;
for details.&lt;/p&gt;

&lt;p&gt;Other recently merged pull requests into Classic Flang include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/658&quot;&gt;PR#658: Fix in preprocessing for Flexi app&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/737&quot;&gt;PR#737: TRAILZ function added to the fortran compiler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/756&quot;&gt;PR#756: Fix ICE interf:new_symbol_and_link symbol not found&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/888&quot;&gt;PR#888: flang gen-exec does not show routine variables with parameter attribute; there are multiple pull requests that this includes (details below)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/916&quot;&gt;PR#916: Fix off-by-one error in minimum integers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/921&quot;&gt;PR#921: Correction of representation of string (character type) constants&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Classic Flang biweekly call has been set up to discuss issues and plans
for the next pull requests to be validated and merged. Our next calls will be
Wednesday, October 7 and 21, 8:30 AM Pacific time. The notes from previous
calls, upcoming agenda and a link to join the call can be found
&lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime
sufficient to compile and run Fortran 77 programs.&lt;/p&gt;

&lt;p&gt;In conjunction with the MLIR-based code from the &lt;em&gt;fir-dev&lt;/em&gt; fork (the Fortran
IR used for lowering), Flang can compile and run most F77 programs,
including the Fortran Compiler Validation Suite (FCVS).
We continue to work on refactoring necessary to upstream the &lt;em&gt;fir-dev&lt;/em&gt; fork into LLVM
flang proper.&lt;/p&gt;

&lt;p&gt;Arm has contributed changes toward a full-fledged driver for flang.&lt;/p&gt;

&lt;p&gt;AMD continues to add support for OpenMP semantics and lowering.&lt;/p&gt;

&lt;p&gt;Valentin Clement continues to contribute parsing and semantics changes for
OpenACC support. This will be the topic of the next Flang Technical Community call
on Monday, October 5, 8:30 AM Pacific Time.&lt;/p&gt;

&lt;p&gt;Michael Kruse continues to add support for building Flang on Windows with MSVC.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;What’s new in LFortran:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;59 Merge Requests were merged and 3 issues fixed in September 2020&lt;/li&gt;
  &lt;li&gt;The FortranCon 2020 LFortran video now &lt;a href=&quot;https://www.youtube.com/watch?v=tW9tUxVMnzc&quot;&gt;available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;LFortran, now imlemented in C++, has surpassed the Python prototype from a
year ago&lt;/li&gt;
  &lt;li&gt;The Jupyter notebook now works as it used to with the Python prototype&lt;/li&gt;
  &lt;li&gt;A new notebook added showcasing how to visualize AST, ASR and C++ translation
in Jupyter (&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/624&quot;&gt;!624&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;X86 backend to generate direct x86-32 machine code (very fast compilation in
Debug mode)&lt;/li&gt;
  &lt;li&gt;Further parser improvements&lt;/li&gt;
  &lt;li&gt;Initial Fortran modules support&lt;/li&gt;
  &lt;li&gt;Initial support for using GFortran modules
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/632&quot;&gt;!632&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Better compiler error messages
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/617&quot;&gt;!617&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;The interactive prompt (REPL) now understands arrow keys
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/603&quot;&gt;!603&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can follow LFortran on Twitter for latest updates: &lt;a href=&quot;https://twitter.com/lfortranorg&quot;&gt;@lfortranorg&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our fourth Fortran Monthly call on September 25.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/Ei6CAZblOro&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;September 01 2020&quot; data-enddate=&quot;September 30 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: September 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/09/01/Fortran-Newsletter-September-2020/"/>
        <updated>2020-09-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/09/01/Fortran-Newsletter-September-2020</id>
        <content type="html">&lt;p&gt;Welcome to the September 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;We continued the work on the Fortran-lang website, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/133&quot;&gt;#133&lt;/a&gt;:
Listing fpm packages on the Packages page of the website&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/117&quot;&gt;#117&lt;/a&gt;: Adding a
Benchmarks section, a new dedicated repository was created at
https://github.com/fortran-lang/benchmarks and many details have been
discussed in &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;issues&lt;/a&gt; there&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;There hasn’t been new stdlib development in August, however ongoing work and discussions continue:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/227&quot;&gt;#227&lt;/a&gt;: API proposal for logging facilities in stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/225&quot;&gt;#225&lt;/a&gt;: Name convention for derived types in stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/224&quot;&gt;#224&lt;/a&gt;: Handling and propagating errors inside stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/221&quot;&gt;#221&lt;/a&gt;: API for a bitset data type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/201&quot;&gt;#201&lt;/a&gt;: API for file system operations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Ongoing work in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/146&quot;&gt;#146&lt;/a&gt; (WIP): 
Implementing internal dependencies and build backend in the Fortran fpm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;fortran-benchmarks&quot;&gt;Fortran benchmarks&lt;/h2&gt;

&lt;p&gt;We created the &lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;benchmarks repository&lt;/a&gt; with the goal to design and implement a comprehensive set of benchmarks.
The benchmarks will aim to compare the performance of various Fortran compilers, as well as the performance of canonical algorithms implemented in Fortran and different languages.
If you’d like to contribute in any way, be it the design, implementation, or testing of benchmarks, please join the ongoing discussion &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;gfortran&quot;&gt;GFortran&lt;/h3&gt;

&lt;p&gt;GFortran 10.2 has been released, a bugfix release for 10.1.
Bugs fixed include PR94361, a memory leak with finalizers.&lt;/p&gt;

&lt;p&gt;The development version of &lt;code class=&quot;highlighter-rouge&quot;&gt;gfortran&lt;/code&gt; now supports the
full OpenMP 4.5 specification.  This will be released
with GCC 11, but of course people can already download
and test it.&lt;/p&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;We’re evaluating pull requests and merging them into the original Flang
compiler again. We pulled in 4 changes in the past couple of weeks, and expect
to merge in a few more each week. One upcoming change is the support for LLVM 10,
which requires the use of a new fork, the &lt;em&gt;classic-flang-llvm-project&lt;/em&gt;
fork of the LLVM monorepo. See
&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/1&quot;&gt;PR#1&lt;/a&gt;
for details.&lt;/p&gt;

&lt;p&gt;The Classic Flang biweekly call has been set up to discuss issues and plans
for the next pull requests to be validated and merged. Our next calls will be
Wednesday, September 9 and 23, 8:30 AM Pacific time. The notes from previous
calls, upcoming agenda and a link to join the call can be found
&lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime
sufficient to compile and run Fortran 77 programs. We are fixing bugs we find
in running FCVS and other F77 test suites (and the F77 parts of non-F77
suites).&lt;/p&gt;

&lt;p&gt;In conjunction with the MLIR-based code from the &lt;em&gt;fir-dev&lt;/em&gt; fork (the Fortran
IR used for lowering), Flang can compile and run most F77 programs. We
continue to work on refactoring necessary to upstream this fork into LLVM
flang proper.&lt;/p&gt;

&lt;p&gt;Arm is working on changes to support a driver program to replace the temporary
driver we currently use.&lt;/p&gt;

&lt;p&gt;Valentin Clement continues to contribute parsing and semantics changes for
OpenACC support.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;What’s new in LFortran:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;143 Merge Requests were merged and 22 issues fixed in August 2020&lt;/li&gt;
  &lt;li&gt;The C++ backend can now translate to C++ and compile many simple Fortran programs&lt;/li&gt;
  &lt;li&gt;The parser can now parse a large subset of Fortran (if you find something that
cannot be parsed, please &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/issues&quot;&gt;report&lt;/a&gt; a bug). Not all the information is yet
represented in the AST (so later stages of the compiler also work on a smaller
subset), but one should not get parse errors anymore for most valid codes.&lt;/li&gt;
  &lt;li&gt;Initial &lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran fmt&lt;/code&gt; subcommand for formatting Fortran files, you can
provide feedback
&lt;a href=&quot;https://fortran-lang.discourse.group/t/feedback-for-lfortran-fmt-to-format-fortran-source-code/281&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;A new command &lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran kernel&lt;/code&gt; can run LFortran as a Jupyter kernel.&lt;/li&gt;
  &lt;li&gt;LFortran itself gives a nice Python like stacktrace (on Linux and macOS) in
Debug mode when an unhandled excetion happens or a segfault.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our goal for September is to get LFortran working for a much larger subset of
Fortran and allow it to compile and run via the C++ translation backend (the
LLVM backend will follow soon after).&lt;/p&gt;

&lt;p&gt;You can follow LFortran on Twitter for latest updates: &lt;a href=&quot;https://twitter.com/lfortranorg&quot;&gt;@lfortranorg&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our fourth Fortran Monthly call on August 20.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/fiAyhHkAKFc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;August 01 2020&quot; data-enddate=&quot;August 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: August 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/08/01/Fortran-Newsletter-August-2020/"/>
        <updated>2020-08-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/08/01/Fortran-Newsletter-August-2020</id>
        <content type="html">&lt;p&gt;Welcome to the August 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;We continued the work on the Fortran-lang website, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/116&quot;&gt;#116&lt;/a&gt;: updates to the Quickstart tutorial on loop control and syntax&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/120&quot;&gt;#120&lt;/a&gt;: updated the
&lt;a href=&quot;https://fortran-lang.org/learn/&quot;&gt;Book section&lt;/a&gt; with a comprehensive list of
books about Fortran&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/121&quot;&gt;#121&lt;/a&gt;, &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/122&quot;&gt;#122&lt;/a&gt;, &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/127&quot;&gt;#127&lt;/a&gt;, &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/128&quot;&gt;#128&lt;/a&gt;: additional packages added to the Fortran-lang.org &lt;a href=&quot;https://fortran-lang.org/packages&quot;&gt;packages&lt;/a&gt; page&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/117&quot;&gt;#117&lt;/a&gt;: Adding a
Benchmarks section, a new dedicated repository was created at
https://github.com/fortran-lang/benchmarks and many details have been
discussed in &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;issues&lt;/a&gt; there&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;What’s new in the Fortran Standard Library:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/223&quot;&gt;#223&lt;/a&gt;: the structure of the Fortran Standard Library has been modified for clarity and ease of use. With these changes, both experimental and stable procedures will reside together in the same modules. The status of the procedures (experimental vs stable) are documented in the code, in the specs, and in the &lt;a href=&quot;https://stdlib.fortran-lang.org/&quot;&gt;API docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Main ongoing discussions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/225&quot;&gt;#225&lt;/a&gt;: Name convention for derived types in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/224&quot;&gt;#224&lt;/a&gt;: Handling and propagating errors inside &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/221&quot;&gt;#221&lt;/a&gt;: API for a bitset data type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/201&quot;&gt;#201&lt;/a&gt;: API for file system operations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;What’s new in fpm:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;We created the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fpm-registry&lt;/a&gt; repository,
which serves as a registry of fpm-enabled Fortran packages.
Please see the README there to learn how to contribute a package.
For now, the registry is simply a list of fpm-enabled Fortran packages that you can use as a dependency in your &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm.toml&lt;/code&gt; file.
Soon, this registry will be used to generate detailed metadata that will be used by fpm to allow you to search for packages from the command-line, e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm search &amp;lt;package&amp;gt;&lt;/code&gt; or similar.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/146&quot;&gt;#146&lt;/a&gt;: We discussed the design of the new Fortran implementation of fpm in a video call. We agreed on the need for an intermediate package model which will allow for clean separation of fpm frontends (user interface, parsing, and semantics) and fpm backends (fpm itself, CMake, Make, etc.).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/131&quot;&gt;#131&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/132&quot;&gt;#132&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/139&quot;&gt;#139&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/140&quot;&gt;#140&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/142&quot;&gt;#142&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/145&quot;&gt;#145&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/147&quot;&gt;#147&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/148&quot;&gt;#148&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/151&quot;&gt;#151&lt;/a&gt;:
We merged several pull requests toward the Fortran fpm implementation. The Haskell implementation has moved to the &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm/bootstrap&lt;/code&gt; directory, and the Fortran implementation is developed in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm/fpm&lt;/code&gt;. The Fortran fpm is, of course, an fpm package itself so it can be built by the Haskell fpm. Soon, it will be able to be build by itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in very early development, and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;fortran-benchmarks&quot;&gt;Fortran benchmarks&lt;/h2&gt;

&lt;p&gt;We created the &lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;benchmarks repository&lt;/a&gt; with the goal to design and implement a comprehensive set of benchmarks.
The benchmarks will aim to compare the performance of various Fortran compilers, as well as the performance of canonical algorithms implemented in Fortran and different languages.
If you’d like to contribute in any way, be it the design, implementation, or testing of benchmarks, please join the ongoing discussion &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h2&gt;

&lt;p&gt;We’ve begun to evaluate pull requests and merge them into the original Flang
compiler again. There is now a biweekly call to discuss issues and plans for
Classic Flang. The next call will be Wednesday, August 12, 8:30 AM Pacific time.
The notes from previous calls, upcoming agenda and a link to join the call can
be found &lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the last call, AMD reviewed their outstanding pull requests for Fortran debug
metadata enhancements.&lt;/p&gt;

&lt;h2 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h2&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime
sufficient to compile and run Fortran 77 programs. We are fixing bugs we find in
running FCVS and other test suites that use F77.&lt;/p&gt;

&lt;p&gt;We cominue upstreaming the lowering code from the fir-dev fork (MLIR-based
Fortran IR) into the llvm-project repository. Arm is working on changes to
support a driver program to replace the throwaway driver we currently have.&lt;/p&gt;

&lt;p&gt;AMD has been contributing parser and semantic processing for OpenMP constructs
like task wait, barrier and parallel constructs.&lt;/p&gt;

&lt;p&gt;Changes have been made to default parse/unparse/compile processing to default to
gfortran (not NVIDIA Fortran).&lt;/p&gt;

&lt;p&gt;Valentin Clement has been committing initial changes for OpenACC support.&lt;/p&gt;

&lt;h2 id=&quot;lfortran&quot;&gt;LFortran&lt;/h2&gt;

&lt;p&gt;What’s new in LFortran:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The initial prototype C++ backend can translate Fortran’s &lt;code class=&quot;highlighter-rouge&quot;&gt;do concurrent&lt;/code&gt; to C++’s &lt;code class=&quot;highlighter-rouge&quot;&gt;Kokkos::parallel_for&lt;/code&gt;: &lt;a href=&quot;https://twitter.com/lfortranorg/status/1280764915242811393&quot;&gt;https://twitter.com/lfortranorg/status/1280764915242811393&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;LFortran has a Twitter account for latest updates: &lt;a href=&quot;https://twitter.com/lfortranorg&quot;&gt;@lfortranorg&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Work is progressing on the production version of LFortran that is written in C++&lt;/li&gt;
  &lt;li&gt;22 Merge Requests were merged and 4 issues fixed in July 2020. Some notable ones:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/issues/163&quot;&gt;#163&lt;/a&gt;: Implement basic Fortran to C++ translation backend&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/410&quot;&gt;!410&lt;/a&gt;: Make simple calculations work via LLVM in interactive mode&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/402&quot;&gt;!402&lt;/a&gt;: Build ASR (Abstract Semantic Representation) properly for subroutines and functions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal is to get the C++ based production version of LFortran
matching most of the features from the Python prototype version and make a
public release. The long term goal is to build a modern Fortran compiler that
works with any production code and allows it to run efficiently on modern
hardware (CPUs and GPUs), both interactively and compiling to binaries, and
provide the basis for other tools such as the Fortran to C++ translation, editor
support, automatic documentation generation (and doctesting like in Python),
automatic formatting and others.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12&quot;&gt;FortranCon 2020&lt;/a&gt; was held July 2 - 4.
with many interesting talks.
See the talk schedule
&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/timetable/#20200702.detailed&quot;&gt;here&lt;/a&gt;.
All presentations have been recorded and will be soon made available online by the FortranCon organizers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We had our third Fortran Monthly call on July 16.
You can read watch the recording below:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/_ojLReFvjbs&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of the four repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;July 01 2020&quot; data-enddate=&quot;July 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: July 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/07/01/Fortran-Newsletter-July-2020/"/>
        <updated>2020-07-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/07/01/Fortran-Newsletter-July-2020</id>
        <content type="html">&lt;p&gt;Welcome to the July 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;Work has continued on the Fortran-lang website, including a new community page and additional tutorial content:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/98&quot;&gt;#98&lt;/a&gt;: updated the &lt;a href=&quot;https://fortran-lang.org/learn/quickstart/derived_types&quot;&gt;Quickstart mini-book&lt;/a&gt; tutorial with a comprehensive overview of derived types;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/99&quot;&gt;#99&lt;/a&gt;: added a second mini-book tutorial to the &lt;a href=&quot;https://fortran-lang.org/learn&quot;&gt;Learn&lt;/a&gt; page on building compiled programs and libraries;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/100&quot;&gt;#100&lt;/a&gt;: added a new top-level web-page for Fortran-lang community projects.
The page gives useful information and links for new contributors, as well as acknowledging each of our many existing contributors.
Check it out at &lt;a href=&quot;https://fortran-lang.org/community&quot;&gt;https://fortran-lang.org/community&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/101&quot;&gt;#101&lt;/a&gt;: Code style for Fortran examples in the tutorials.
See the corresponding community poll and discussion on &lt;a href=&quot;https://fortran-lang.discourse.group/t/should-tutorials-on-fortran-lang-org-follow-a-consistent-style-for-code-listings/134&quot;&gt;Discourse&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/112&quot;&gt;#112&lt;/a&gt;: Plan for core language tutorials.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/HEAD/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Did you know&lt;/strong&gt; you don’t need to know HTML or any fancy languages to contribute to the website;
all of the online tutorials and most of the website content are written in &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;markdown&lt;/a&gt;, a simple markup language for formatting text - don’t worry if you haven’t used it before, it’s very easy to pick up!&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;What’s new in the Fortran Standard Library:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/209&quot;&gt;#209&lt;/a&gt;
Implements Simpson’s rule for 1-d arrays (&lt;code class=&quot;highlighter-rouge&quot;&gt;simps&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;simps_weights&lt;/code&gt;) in the
quadrature module (&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_experimental_quadrature&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/205&quot;&gt;#205&lt;/a&gt;
Tests for and improved standard conformance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some miscellaneous fixes and improvements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/208&quot;&gt;#208&lt;/a&gt;
Fixes to support Intel Fortran compilers&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/210&quot;&gt;#210&lt;/a&gt;
Fixes to support NAG compiler&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/207&quot;&gt;#207&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/211&quot;&gt;#211&lt;/a&gt;
Other minor fixes and improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;What’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/99&quot;&gt;#99&lt;/a&gt;
fpm now lets you specify a custom build script or a Makefile to use.
This will help building packages that use a custom structure and/or external
dependencies in other languages.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/89&quot;&gt;#89&lt;/a&gt;
Allow specifying specific tests or executables to run via command-line arguments.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/85&quot;&gt;#85&lt;/a&gt;
Enables having specific dependencies for tests and executables.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/97&quot;&gt;#97&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/100&quot;&gt;#100&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/101&quot;&gt;#101&lt;/a&gt;
Minor improvements to the README.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in very early development, and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our second Fortran Monthly call on June 19.
You can read watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/i-gRNGRzugc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12&quot;&gt;FortranCon 2020&lt;/a&gt; began today (July 2),
with many interesting talks.
See the talk schedule &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/timetable/#20200702.detailed&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of the four repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;June 01 2020&quot; data-enddate=&quot;June 30 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: June 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/06/01/Fortran-Newsletter-June-2020/"/>
        <updated>2020-06-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/06/01/Fortran-Newsletter-June-2020</id>
        <content type="html">&lt;p&gt;Welcome to the June 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#fortran-lang.org&quot;&gt;fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#fortran-discourse&quot;&gt;Fortran Discourse&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#fortran-standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#package-manager&quot;&gt;Package Manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;The Fortran website has been up since mid-April, and we’ve already got great
feedback from the community.
In the past month we’ve updated the &lt;a href=&quot;/compilers&quot;&gt;Compilers&lt;/a&gt; page which is now
comprehensive and includes all major open source and commercial compilers.
The &lt;a href=&quot;/learn&quot;&gt;Learn&lt;/a&gt; page has also seen significant updates—it’s been
reorganized for easier navigation and currently features a quickstart tutorial,
Fortran books, and other online resources.&lt;/p&gt;

&lt;p&gt;If you haven’t yet, please explore the website and &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;let us know&lt;/a&gt;
if you have any suggestions for improvement.
Specifically, we’ll be focusing on the &lt;a href=&quot;/learn&quot;&gt;Learn&lt;/a&gt; page and its mini-books
in the coming months.
Please help us make them better!&lt;/p&gt;

&lt;p&gt;Here are some specific items that we worked on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/90&quot;&gt;#90&lt;/a&gt;
WIP: Mini-book on building programs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/83&quot;&gt;#83&lt;/a&gt;
Improving the structure and navigation of the &lt;a href=&quot;/learn&quot;&gt;Learn&lt;/a&gt; pages&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/46&quot;&gt;#46&lt;/a&gt;
Build website previews from pull requests&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fortran-discourse&quot;&gt;Fortran Discourse&lt;/h2&gt;

&lt;p&gt;On May 4 we launched the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Fortran Discourse&lt;/a&gt;, an online discussion board
for anything and everything Fortran related.
You can use it discuss the Fortran language, ask for help, announce events and/or personal projects, or just lurk
around. 
There are already quite a few interesting discussions going on.
Join us!&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Recently we launched a &lt;a href=&quot;https://stdlib.fortran-lang.org&quot;&gt;website&lt;/a&gt; for the API documentation of the Fortran Standard Library. 
The &lt;a href=&quot;https://stdlib.fortran-lang.org&quot;&gt;website&lt;/a&gt; is automaticaly generated by &lt;a href=&quot;https://github.com/Fortran-FOSS-Programmers/ford#readme&quot;&gt;FORD&lt;/a&gt;.
&lt;a href=&quot;https://stdlib.fortran-lang.org/page/contributing/CodeOfConduct.html&quot;&gt;Code of Conduct&lt;/a&gt;, &lt;a href=&quot;https://stdlib.fortran-lang.org/page/License.html&quot;&gt;licence&lt;/a&gt;, and &lt;a href=&quot;https://stdlib.fortran-lang.org/page/contributing/Workflow.html&quot;&gt;workflow&lt;/a&gt; for contributing to the Fortran Standard Library can also be found on the &lt;a href=&quot;https://stdlib.fortran-lang.org/&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s what’s new in the Fortran Standard Library:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/191&quot;&gt;#191&lt;/a&gt;
WIP: Function for computing Pearson correlations among elements of
an array in the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_experimental_stats&lt;/code&gt; module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt;
WIP: Procedures for sparse matrices operations. Ongoing discussion on the API can be found
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/wiki/Stdlib-Sparse-matrix-API&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/183&quot;&gt;#183&lt;/a&gt;
Automatic API-doc generation and deployment of this &lt;a href=&quot;https://stdlib.fortran-lang.org&quot;&gt;stdlib website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/170&quot;&gt;#170&lt;/a&gt;
Addition of the new functions &lt;code class=&quot;highlighter-rouge&quot;&gt;diag&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;eye&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;trace&lt;/code&gt; functions to make working with
matrices easier.
Read the full specifications &lt;a href=&quot;https://stdlib.fortran-lang.org/page/specs/stdlib_experimental_linalg.html&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;package-manager&quot;&gt;Package Manager&lt;/h2&gt;

&lt;p&gt;In this past month support for dependencies between packages has been added
to the &lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;Fortran Package Manager (fpm)&lt;/a&gt;.
You can specify either a path to another folder on your machine with an fpm package,
or a git repository (and optionally a specific branch, tag or commit) that
contains the package. fpm will then take care of fetching the dependency for you
(if necessary) and any packages it depends on, and compiling and linking it into
your project. Check out an example &lt;a href=&quot;https://gitlab.com/everythingfunctional/hello_fpm&quot;&gt;hello world package&lt;/a&gt;
that uses this functionality.&lt;/p&gt;

&lt;p&gt;fpm is still in very early development, and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;p&gt;Specific items that are new this month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/82&quot;&gt;#82&lt;/a&gt;
You can now add remote git repositories as Fortran dependencies to your project.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/73&quot;&gt;#73&lt;/a&gt;
Improved output messages for the user&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We hosted the very first Fortran Monthly call on May 14.
The turnout was astonishing–over 23 people joined.
You can read the notes from the call &lt;a href=&quot;https://fortran-lang.discourse.group/t/fortran-monthly-call-may-2020&quot;&gt;here&lt;/a&gt;.
We’ll have another one this month.
Subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12&quot;&gt;FortranCon 2020&lt;/a&gt; will take place on July 2-4 in Zurich, Switzerland.
Virtual participation is enabled for both attendees and speakers.
Registration is free and due by June 1, 2020.
There are quite a few submissions from the fortran-lang community:
A talk on &lt;a href=&quot;https://github.com/fortran-lang/talks/tree/HEAD/FortranCon2020-stdlib&quot;&gt;stdlib&lt;/a&gt; by Jeremie Vandenplas,
one about the &lt;a href=&quot;https://github.com/fortran-lang/talks/tree/HEAD/FortranCon2020-fpm&quot;&gt;Fortran Package Manager (fpm)&lt;/a&gt; by Brad Richardson,
a talk on &lt;a href=&quot;https://gitlab.com/lfortran/talks/fortrancon-2020-talk&quot;&gt;LFortran compiler&lt;/a&gt; by Ondřej Čertík,
as well as one about &lt;a href=&quot;https://github.com/fortran-lang/talks/tree/HEAD/FortranCon2020-community&quot;&gt;building the Fortran community&lt;/a&gt;
by Milan Curcic.&lt;/li&gt;
  &lt;li&gt;J3/WG5 joint meeting, originally slated for October 12-16 in Las Vegas, Nevada, has been &lt;a href=&quot;https://mailman.j3-fortran.org/pipermail/j3/2020-May/012034.html&quot;&gt;cancelled&lt;/a&gt;.
However, the work on proposals for the Fortran Standard doesn’t stop.
You can submit a proposal for the Standards committee &lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;here&lt;/a&gt;.
For reference, you can read the &lt;a href=&quot;/newsletter/2020/02/28/J3-february-meeting&quot;&gt;notes from the February meeting&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of the four repositories
&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,
&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Ondřej Čertík (&lt;a href=&quot;https://github.com/certik&quot;&gt;@certik&lt;/a&gt;), Milan Curcic (&lt;a href=&quot;https://github.com/milancurcic&quot;&gt;@milancurcic&lt;/a&gt;), Laurence Kedward (&lt;a href=&quot;https://github.com/LKedward&quot;&gt;@LKedward&lt;/a&gt;), Jeremie Vandenplas (&lt;a href=&quot;https://github.com/jvdp1&quot;&gt;@jvdp1&lt;/a&gt;), Brad Richardson (&lt;a href=&quot;https://github.com/everythingfunctional&quot;&gt;@everythingfunctional&lt;/a&gt;), Izaak “Zaak” Beekman (&lt;a href=&quot;https://github.com/zbeekman&quot;&gt;@zbeekman&lt;/a&gt;), Martin Diehl (&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt;), &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;, Van Snyder (&lt;a href=&quot;https://github.com/vansnyder&quot;&gt;@vansnyder&lt;/a&gt;), &lt;a href=&quot;https://github.com/FortranFan&quot;&gt;@FortranFan&lt;/a&gt;, &lt;a href=&quot;https://github.com/epagone&quot;&gt;@epagone&lt;/a&gt;, Ivan (&lt;a href=&quot;https://github.com/ivan-pi&quot;&gt;@ivan-pi&lt;/a&gt;), Neil Carlson (&lt;a href=&quot;https://github.com/nncarlson&quot;&gt;@nncarlson&lt;/a&gt;), Ashwin Vishnu (&lt;a href=&quot;https://github.com/ashwinvis&quot;&gt;@ashwinvis&lt;/a&gt;), Williams A. Lima (&lt;a href=&quot;https://github.com/ghwilliams&quot;&gt;@ghwilliams&lt;/a&gt;), Peter Klausler (&lt;a href=&quot;https://github.com/klausler&quot;&gt;@klausler&lt;/a&gt;), Chris MacMackin (&lt;a href=&quot;https://github.com/cmacmackin&quot;&gt;@cmacmackin&lt;/a&gt;), Pedro Costa (&lt;a href=&quot;https://github.com/p-costa&quot;&gt;@p-costa&lt;/a&gt;), &lt;a href=&quot;https://github.com/mobius-eng&quot;&gt;@mobius-eng&lt;/a&gt;, Salvatore Filippone (&lt;a href=&quot;https://github.com/sfilippone&quot;&gt;@sfilippone&lt;/a&gt;), &lt;a href=&quot;https://github.com/ShamanTcler&quot;&gt;@ShamanTcler&lt;/a&gt;, Amit Kumar (&lt;a href=&quot;https://github.com/aktech&quot;&gt;@aktech&lt;/a&gt;), Bálint Aradi (&lt;a href=&quot;https://github.com/aradi&quot;&gt;@aradi&lt;/a&gt;), Melissa Weber Mendonça (&lt;a href=&quot;https://github.com/melissawm&quot;&gt;@melissawm&lt;/a&gt;), Jacob Williams (&lt;a href=&quot;https://github.com/jacobwilliams&quot;&gt;@jacobwilliams&lt;/a&gt;), Rohit Goswami (&lt;a href=&quot;https://github.com/HaoZeke&quot;&gt;@HaoZeke&lt;/a&gt;), Amir Shahmoradi (&lt;a href=&quot;https://github.com/shahmoradi&quot;&gt;@shahmoradi&lt;/a&gt;), Bill Long (&lt;a href=&quot;https://github.com/longb&quot;&gt;@longb&lt;/a&gt;).&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: May 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/05/01/Fortran-Newsletter-May-2020/"/>
        <updated>2020-05-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/05/01/Fortran-Newsletter-May-2020</id>
        <content type="html">&lt;div class=&quot;language-fortran highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hello, World!'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Welcome to the first monthly Fortran newsletter.
It will come out on the first calendar day of every month, 
detailing Fortran news from the previous month.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#this-website&quot;&gt;This website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#package-manager&quot;&gt;Package Manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#wg5-convenor-candidates&quot;&gt;WG5 Convenor candidates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#whos-hiring&quot;&gt;Who’s hiring?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;this-website&quot;&gt;This website&lt;/h2&gt;

&lt;p&gt;If you came to this newsletter from elsewhere, welcome to the new Fortran website.
We built this site mid-April and hope for it to be &lt;em&gt;the&lt;/em&gt; home of Fortran on the internet,
which traditionally there hasn’t been any to date.
Look around and &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.github.io/issues&quot;&gt;let us know&lt;/a&gt; 
if you have any suggestions for improvement.
Specifically, &lt;a href=&quot;/learn&quot;&gt;Learn&lt;/a&gt; and &lt;a href=&quot;/packages&quot;&gt;Packages&lt;/a&gt; are the pages that 
we’ll be focusing on in the coming months. 
Please help us make them better!&lt;/p&gt;

&lt;h2 id=&quot;standard-library&quot;&gt;Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in Fortran Standard Library:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/172&quot;&gt;#172&lt;/a&gt;
New function &lt;code class=&quot;highlighter-rouge&quot;&gt;cov&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_experimental_stats&lt;/code&gt; module to compute covariance of array elements.
Read the full specification &lt;a href=&quot;https://github.com/fortran-lang/stdlib/blob/HEAD/src/stdlib_experimental_stats.md#cov---covariance-of-array-elements&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/168&quot;&gt;#168&lt;/a&gt;
Specify recommended order of attributes for dummy arguments in the 
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/blob/HEAD/STYLE_GUIDE.md&quot;&gt;Stdlib style guide&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/173&quot;&gt;#173&lt;/a&gt;
Minor bug fix.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/170&quot;&gt;#170&lt;/a&gt;
WIP: Addition of &lt;code class=&quot;highlighter-rouge&quot;&gt;diag&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;eye&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;trace&lt;/code&gt; functions to make working with 
matrices easier.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;package-manager&quot;&gt;Package Manager&lt;/h2&gt;

&lt;p&gt;In the past month we’ve seen the first working implementation of the &lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;Fortran Package Manager (FPM)&lt;/a&gt;.
Specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;FPM supports three commands:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm build&lt;/code&gt;–compiles and links your application and/or library.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm test&lt;/code&gt;–runs tests if your package has any test programs.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm run&lt;/code&gt;–runs the application if your package has an executable program.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;FPM can build an executable program, a library, or a combination of both.&lt;/li&gt;
  &lt;li&gt;Currently only gfortran is supported as the compiler backend. FPM will suport other compilers soon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/HEAD/PACKAGING.md&quot;&gt;FPM packaging guide&lt;/a&gt;
to learn how to build your package with FPM.&lt;/p&gt;

&lt;p&gt;FPM is still in very early development, and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know!&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for FPM.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of FPM is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy 
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;wg5-convenor-candidates&quot;&gt;WG5 Convenor candidates&lt;/h2&gt;

&lt;p&gt;Last month was also the deadline for the &lt;a href=&quot;https://wg5-fortran.org/&quot;&gt;WG5&lt;/a&gt;
convenor candidates to apply for the next 3-year term (2021-2024).
There are two candidates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://stevelionel.com&quot;&gt;Steve Lionel&lt;/a&gt;, who is also the current WG5 convenor,
announced running for another term.
Read Steve’s &lt;a href=&quot;https://stevelionel.com/drfortran/2020/04/25/doctor-fortran-in-forward&quot;&gt;post&lt;/a&gt;
about how he has guided the standardization process over the past three years and his direction for the future.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://ondrejcertik.com&quot;&gt;Ondřej Čertík&lt;/a&gt; has also announced announced to run
for the WG5 convenor.
Read Ondřej’s &lt;a href=&quot;https://ondrejcertik.com/blog/2020/04/running-for-wg5-convenor-announcement/&quot;&gt;announcement&lt;/a&gt;
and &lt;a href=&quot;https://github.com/certik/wg5_platform_2020&quot;&gt;platform&lt;/a&gt;
that detail current issues with Fortran language development and how to
overcome them going forward.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://openteams.com&quot;&gt;OpenTeams&lt;/a&gt; and &lt;a href=&quot;https://quansight.com&quot;&gt;QuanSight&lt;/a&gt; hosted Ondřej Čertík and Milan Curcic
in the Episode 40 of the Open Source Directions Webinar.
They talked about the current state and future of Fortran, as well as about building the Fortran community and developer tools.
Read more about it and watch the video &lt;a href=&quot;/newsletter/2020/04/18/Fortran-Webinar/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12&quot;&gt;FortranCon 2020&lt;/a&gt; will take place on July 2-4 in Zurich, Switzerland.
Virtual participation is enabled for both attendees and speakers.
Registration is free and due by June 1, 2020.&lt;/li&gt;
  &lt;li&gt;J3/WG5 joint meeting will take place on October 12-16 in Las Vegas, Nevada.
You can submit a proposal for the Standards committee &lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;here&lt;/a&gt;.
For reference, you can read the &lt;a href=&quot;/newsletter/2020/02/28/J3-february-meeting&quot;&gt;notes from the February meeting&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;whos-hiring&quot;&gt;Who’s hiring?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/aogdeh&quot;&gt;Intel Corporation (Santa Clara, CA): Software Engineer, Fortran&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/5X3d2Y&quot;&gt;Intel Corporation (Hillsboro, OR): Software Engineer, Fortran&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/yuaohU&quot;&gt;Pozent (York, PA): Fortran Technical Lead&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/VAWjWk&quot;&gt;American Cybersystems, Inc. (Binghamton, NY): Software Engineer (Fortran, C/C++, Ada, C#, Java, Radar)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/eLsn63&quot;&gt;BravoTech (Dallas, TX): C++ / Fortran Developer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/eYftiA&quot;&gt;Siemens (Milford, OH): CAE Software Engineer (Fortran or C++) Design and Topology Optimization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
        <title>Open Source Directions Fortran webinar</title>
        <link href="https://fortran-lang.org/newsletter/2020/04/18/Fortran-Webinar/"/>
        <updated>2020-04-18T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/04/18/Fortran-Webinar</id>
        <content type="html">&lt;p&gt;Ondřej Čertík (&lt;a href=&quot;https://twitter.com/ondrejcertik&quot;&gt;@ondrejcertik&lt;/a&gt;) and 
Milan Curcic (&lt;a href=&quot;https://twitter.com/realmilancurcic&quot;&gt;@realmilancurcic&lt;/a&gt;) spoke 
yesterday about the future of Fortran in Episode 40 of the Open Source 
Directions Webinar.
We discussed the current state of the language, how it’s currently developed, 
and what we can do today to build the Fortran community, ecosystem of packages, 
and developer tools.&lt;/p&gt;

&lt;p&gt;Watch the episode now:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/2NiS2tdDO_4&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Special thanks to our hosts Melissa Mendonça 
(&lt;a href=&quot;https://twitter.com/melissawm&quot;&gt;@melissawm&lt;/a&gt;) and Madicken Munk 
(&lt;a href=&quot;https://twitter.com/munkium&quot;&gt;@munkium&lt;/a&gt;), as well as 
&lt;a href=&quot;https://openteams.com&quot;&gt;OpenTeams&lt;/a&gt; and &lt;a href=&quot;https://www.quansight.com/&quot;&gt;QuanSight&lt;/a&gt;
for having us.&lt;/p&gt;

&lt;p&gt;You can find all previous episodes of the Open Source Directions webinar 
&lt;a href=&quot;https://www.quansight.com/open-source-directions&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Announcing FortranCon 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/04/06/Announcing-FortranCon-2020/"/>
        <updated>2020-04-06T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/04/06/Announcing-FortranCon-2020</id>
        <content type="html">&lt;p&gt;FortranCon 2020, the first international conference targeting the Fortran
programming language, will take place on July 2-4, 2020, in Zürich, Switzerland.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;We&amp;#39;re happy to announce the (to our knowledge first) International &lt;a href=&quot;https://twitter.com/hashtag/Fortran?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Fortran&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/Conference?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Conference&lt;/a&gt; July 2.-4. at the &lt;a href=&quot;https://twitter.com/UZH_en?ref_src=twsrc%5Etfw&quot;&gt;@UZH_en&lt;/a&gt; in &lt;a href=&quot;https://twitter.com/hashtag/Zurich?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Zurich&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/hashtag/Switzerland?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Switzerland&lt;/a&gt; with &lt;a href=&quot;https://twitter.com/DoctorFortran?ref_src=twsrc%5Etfw&quot;&gt;@DoctorFortran&lt;/a&gt; joining as keynote speaker! Call for presentations is open: &lt;a href=&quot;https://t.co/LnyOZxHrZI&quot;&gt;https://t.co/LnyOZxHrZI&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/HPC?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#HPC&lt;/a&gt;&lt;/p&gt;&amp;mdash; tizianomueller (@tizianomueller) &lt;a href=&quot;https://twitter.com/tizianomueller/status/1247121616326348800?ref_src=twsrc%5Etfw&quot;&gt;April 6, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;FortranCon aims to bring together developers of Fortran libraries, 
applications, and language itself to share their experience and ideas.
The conference is organized in two full days of speaker presentations 
on July 2 and 3, and a half-day workshop with lectures and hands-on sessions
on July 4.
Click &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/abstracts/&quot;&gt;here&lt;/a&gt; to submit
an abstract.&lt;/p&gt;

&lt;p&gt;The keynote presentation will be delivered by Steve Lionel 
(&lt;a href=&quot;https://twitter.com/doctorfortran&quot;&gt;@doctorfortran&lt;/a&gt;), convener of the 
US Fortran Standards Committee.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/registrations/&quot;&gt;registration&lt;/a&gt; 
is &lt;strong&gt;free of charge&lt;/strong&gt;, with June 1, 2020 as the deadline.
Virtual participation will be enabled for speakers and attendees unable to 
travel.&lt;/p&gt;

&lt;p&gt;Read more about FortranCon 2020 &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>J3 February 2020 Meeting</title>
        <link href="https://fortran-lang.org/newsletter/2020/02/28/J3-february-meeting/"/>
        <updated>2020-02-28T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/02/28/J3-february-meeting</id>
        <content type="html">&lt;p&gt;The J3 Fortran Committee meeting took place in Las Vegas, NV, on February 24-28,
2020.&lt;/p&gt;

&lt;h2 id=&quot;attendance&quot;&gt;Attendance&lt;/h2&gt;

&lt;p&gt;The following people / companies attended:&lt;/p&gt;

&lt;p&gt;Voting members:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Intel: Jon Steidel&lt;/li&gt;
  &lt;li&gt;HPE/Cray: Bill Long&lt;/li&gt;
  &lt;li&gt;NVIDIA: Peter Klausler, Gary Klimowicz&lt;/li&gt;
  &lt;li&gt;IBM: Daniel Chen&lt;/li&gt;
  &lt;li&gt;ARM: Srinath Vadlamani&lt;/li&gt;
  &lt;li&gt;NCAR: Dan Nagle, Magne Haveraaen&lt;/li&gt;
  &lt;li&gt;NASA: Tom Clune&lt;/li&gt;
  &lt;li&gt;JPL: Van Sneider&lt;/li&gt;
  &lt;li&gt;LANL: Zach Jibben, Ondřej Čertík&lt;/li&gt;
  &lt;li&gt;ORNL: Reuben Budiardja&lt;/li&gt;
  &lt;li&gt;LBNL: Brian Friesen&lt;/li&gt;
  &lt;li&gt;Sandia: Damian Rouson&lt;/li&gt;
  &lt;li&gt;Lionel: Steven Lionel, Malcolm Cohen, Vipul Parekh&lt;/li&gt;
  &lt;li&gt;Corbett: Bob Corbett&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Others:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;AMD: Richard Bleikamp&lt;/li&gt;
  &lt;li&gt;WG23: Stephen Michell (convenor), Erhard Ploedereder (member)&lt;/li&gt;
  &lt;li&gt;Structural Integrity: Brad Richardson&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;proposals-discussed-at-plenary&quot;&gt;Proposals Discussed at Plenary&lt;/h2&gt;

&lt;h3 id=&quot;monday-224&quot;&gt;Monday 2/24&lt;/h3&gt;

&lt;h3 id=&quot;tuesday-225&quot;&gt;Tuesday 2/25&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/22&quot;&gt;#22&lt;/a&gt; : Default values of optional arguments (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-107.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-107.txt&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wednesday-226&quot;&gt;Wednesday 2/26&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Rank-agnostic array element and section denotation (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-113.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-113.txt&lt;/a&gt;, &lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-115.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-115.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/158&quot;&gt;#158&lt;/a&gt; : TYPEOF and CLASSOF (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-114.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-114.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/1&quot;&gt;#1&lt;/a&gt; : Namespace for modules (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-108.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-108.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Interpretation: FORM TEAM and failed images (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-102r1.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-102r1.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Interpretation: Collective subroutines and STAT= (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-104r1.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-104r1.txt&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;thursday-227&quot;&gt;Thursday 2/27&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Interpretation: events that cause variables to become undefined (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-119.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-119.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Edits for SIMPLE procedures (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-116.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-116.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;BFLOAT16 (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-118.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-118.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/146&quot;&gt;#146&lt;/a&gt; : Interpretation: allocatable component finalization (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-117.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-117.txt&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;friday-228&quot;&gt;Friday 2/28&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Rank-agnostic syntax (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-120.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-120.txt&lt;/a&gt;). Passed unanimously with minor changes.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/156&quot;&gt;#156&lt;/a&gt; : Protected components (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-121.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-121.txt&lt;/a&gt;). Withdrawn to address conflicting interests.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/160&quot;&gt;#160&lt;/a&gt; : Edits for auto-allocate characters (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-122.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-122.txt&lt;/a&gt;). Passed unanimously with minor changes.&lt;/li&gt;
  &lt;li&gt;Edits for procedure pointer association (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-123.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-123.txt&lt;/a&gt;). Passed unanimously.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Edits for rank-agnostic bounds (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-124.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-124.txt&lt;/a&gt;). Withdrawn because some edits were missing and need to be added. There were concerns about fitting into the framework of generics later on.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Edits for rank-agnostic array element and section denotation (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-125.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-125.txt&lt;/a&gt;). Failed (5 v 7). Missing edits, and disagreement on types vs rank-1 integers, the options need to be explored more.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Edits for rank-agnostic allocation and pointer assignment (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-126.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-126.txt&lt;/a&gt;). Passed unanimously with minor changes.&lt;/li&gt;
  &lt;li&gt;Interpretation: Public namelist and private variable (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-127.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-127.txt&lt;/a&gt;). Straw vote (0 yes, 8 no, 9 undecided). Passed unanimously with “no” alternative.&lt;/li&gt;
  &lt;li&gt;Interpretation F18/015 (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-105.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-105.txt&lt;/a&gt;). Passed unanimously.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;skipped&quot;&gt;Skipped&lt;/h2&gt;

&lt;p&gt;This was on the plan but we did not get to it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/5&quot;&gt;#5&lt;/a&gt; : US 27 POINTER dummy arguments, INTENT, and target modification (&lt;a href=&quot;https://j3-fortran.org/doc/year/18/18-144r1.txt&quot;&gt;https://j3-fortran.org/doc/year/18/18-144r1.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/19&quot;&gt;#19&lt;/a&gt; : Short-circuiting proposal&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;more-details&quot;&gt;More Details&lt;/h2&gt;

&lt;p&gt;More details available at
&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/155&quot;&gt;j3-fortran/fortran_proposals #155&lt;/a&gt; and at the official &lt;a href=&quot;https://j3-fortran.org/doc/year/20/minutes221.txt&quot;&gt;minutes&lt;/a&gt; from the meeting.&lt;/p&gt;

</content>
    </entry>
    

</feed>
